{"version":3,"file":"index.js","sources":["../../../src/navbar/Navbar.tsx"],"sourcesContent":["import type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport type {\n  NavbarContentProps,\n  NavbarMenuProps,\n  NavbarProps as NavbarRootProps,\n} from \"@nextui-org/react\";\nimport {\n  Navbar as NavbarRoot,\n  NavbarContent,\n  NavbarMenu,\n  NavbarMenuToggle,\n  NavbarItem,\n  NavbarMenuItem,\n  Link,\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\nimport type { Item } from \"@/types/navigation\";\nimport { useResponsive } from \"@/hooks\";\n\nexport type NavbarProps = {\n  appName?: ReactNode;\n  appLogo?: ReactNode;\n  profile?: ReactNode;\n  navigationItems?: Item[];\n  menuItems?: Item[];\n  contentProps?: NavbarContentProps;\n  menuProps?: NavbarMenuProps;\n  onItemClick?: (item: Item) => void;\n  isMenuOpen?: boolean;\n  onMenuOpenChange?: (isOpen: boolean) => void;\n  classNames?: {\n    item?: string;\n  };\n} & Omit<NavbarRootProps, \"children\">;\n\nexport const Navbar = forwardRef<HTMLElement, NavbarProps>(\n  (\n    {\n      appName,\n      appLogo,\n      profile,\n      navigationItems = [],\n      menuItems = [],\n      contentProps,\n      menuProps,\n      onItemClick,\n      className,\n      classNames,\n      isMenuOpen,\n      onMenuOpenChange,\n      ...props\n    },\n    ref,\n  ) => {\n    const { isDesktop, isMobile, isTablet } = useResponsive();\n\n    const handleItemPress = (item: Item): void => {\n      item.onPress?.();\n      onItemClick?.(item);\n      onMenuOpenChange?.(false);\n    };\n\n    return (\n      <NavbarRoot\n        ref={ref}\n        className={className}\n        classNames={{\n          base: \"bg-white dark:bg-background\",\n          wrapper: \"max-w-full\",\n          ...classNames,\n        }}\n        isMenuOpen={isMenuOpen}\n        onMenuOpenChange={onMenuOpenChange}\n        {...props}\n      >\n        {isMobile && (\n          <NavbarContent>\n            <NavbarMenuToggle\n              aria-label={isMenuOpen === true ? \"Close menu\" : \"Open menu\"}\n            />\n          </NavbarContent>\n        )}\n\n        {!isMobile && (appName !== null || appLogo !== null) && (\n          <NavbarContent justify=\"start\">\n            {!isTablet && appName !== null && (\n              <NavbarItem className=\"w-[247px] border-r-2 border-default\">\n                {appName}\n              </NavbarItem>\n            )}\n            {appLogo !== null && <NavbarItem>{appLogo}</NavbarItem>}\n          </NavbarContent>\n        )}\n\n        <NavbarContent justify=\"end\" {...contentProps}>\n          {isDesktop &&\n            navigationItems.map((item) => (\n              <NavbarItem key={item.key}>\n                <Link\n                  className={cn(\n                    \"p-2 hover:bg-content1 rounded-md text-foreground\",\n                    {\n                      \"border-l-2 border-primary bg-content1 text-primary\":\n                        item.isActive,\n                    },\n                    classNames?.item,\n                  )}\n                  onPress={() => handleItemPress(item)}\n                >\n                  {item.startContent}\n                  {item.label}\n                  {item.endContent}\n                </Link>\n              </NavbarItem>\n            ))}\n          {profile !== null && <NavbarItem>{profile}</NavbarItem>}\n        </NavbarContent>\n\n        {/* Mobile Menu */}\n        {!isDesktop && (\n          <NavbarMenu {...menuProps}>\n            {menuItems.map((item) => (\n              <NavbarMenuItem key={item.key}>\n                <Link\n                  key={item.key}\n                  className={cn(\n                    \"flex items-center gap-3 p-3 text-foreground hover:bg-content1 rounded-md cursor-pointer\",\n                    {\n                      \"border-l-2 border-primary bg-content1 text-primary\":\n                        item.isActive,\n                    },\n                    classNames?.item,\n                  )}\n                  onPress={() => onItemClick?.(item)}\n                >\n                  {item.startContent}\n                  {item.label}\n                  {item.endContent}\n                </Link>\n              </NavbarMenuItem>\n            ))}\n          </NavbarMenu>\n        )}\n      </NavbarRoot>\n    );\n  },\n);\n\nNavbar.displayName = \"Navbar\";\n"],"names":["Navbar","forwardRef","appName","appLogo","profile","navigationItems","menuItems","contentProps","menuProps","onItemClick","className","classNames","isMenuOpen","onMenuOpenChange","props","ref","isDesktop","isMobile","isTablet","useResponsive","handleItemPress","item","jsxs","NavbarRoot","NavbarContent","jsx","NavbarMenuToggle","NavbarItem","Link","cn","NavbarMenu","NavbarMenuItem"],"mappings":";;;;;AAoCO,MAAMA,IAASC;AAAA,EACpB,CACE;AAAA,IACE,SAAAC;AAAA,IACA,SAAAC;AAAA,IACA,SAAAC;AAAA,IACA,iBAAAC,IAAkB,CAAC;AAAA,IACnB,WAAAC,IAAY,CAAC;AAAA,IACb,cAAAC;AAAA,IACA,WAAAC;AAAA,IACA,aAAAC;AAAA,IACA,WAAAC;AAAA,IACA,YAAAC;AAAA,IACA,YAAAC;AAAA,IACA,kBAAAC;AAAA,IACA,GAAGC;AAAA,KAELC,MACG;AACH,UAAM,EAAE,WAAAC,GAAW,UAAAC,GAAU,UAAAC,EAAA,IAAaC,EAAc,GAElDC,IAAkB,CAACC,MAAqB;AAC5C,MAAAA,EAAK,UAAU,GACfZ,IAAcY,CAAI,GAClBR,IAAmB,EAAK;AAAA,IAC1B;AAGE,WAAA,gBAAAS;AAAA,MAACC;AAAAA,MAAA;AAAA,QACC,KAAAR;AAAA,QACA,WAAAL;AAAA,QACA,YAAY;AAAA,UACV,MAAM;AAAA,UACN,SAAS;AAAA,UACT,GAAGC;AAAA,QACL;AAAA,QACA,YAAAC;AAAA,QACA,kBAAAC;AAAA,QACC,GAAGC;AAAA,QAEH,UAAA;AAAA,UAAAG,uBACEO,GACC,EAAA,UAAA,gBAAAC;AAAA,YAACC;AAAA,YAAA;AAAA,cACC,cAAYd,MAAe,KAAO,eAAe;AAAA,YAAA;AAAA,UAAA,GAErD;AAAA,UAGD,CAACK,MAAaf,MAAY,QAAQC,MAAY,SAC7C,gBAAAmB,EAACE,GAAc,EAAA,SAAQ,SACpB,UAAA;AAAA,YAAA,CAACN,KAAYhB,MAAY,0BACvByB,GAAW,EAAA,WAAU,uCACnB,UACHzB,GAAA;AAAA,YAEDC,MAAY,QAAS,gBAAAsB,EAAAE,GAAA,EAAY,UAAQxB,EAAA,CAAA;AAAA,UAAA,GAC5C;AAAA,UAGD,gBAAAmB,EAAAE,GAAA,EAAc,SAAQ,OAAO,GAAGjB,GAC9B,UAAA;AAAA,YAAAS,KACCX,EAAgB,IAAI,CAACgB,wBAClBM,GACC,EAAA,UAAA,gBAAAL;AAAA,cAACM;AAAA,cAAA;AAAA,gBACC,WAAWC;AAAA,kBACT;AAAA,kBACA;AAAA,oBACE,sDACER,EAAK;AAAA,kBACT;AAAA,kBACAV,GAAY;AAAA,gBACd;AAAA,gBACA,SAAS,MAAMS,EAAgBC,CAAI;AAAA,gBAElC,UAAA;AAAA,kBAAKA,EAAA;AAAA,kBACLA,EAAK;AAAA,kBACLA,EAAK;AAAA,gBAAA;AAAA,cAAA;AAAA,YAAA,KAdOA,EAAK,GAgBtB,CACD;AAAA,YACFjB,MAAY,QAAS,gBAAAqB,EAAAE,GAAA,EAAY,UAAQvB,EAAA,CAAA;AAAA,UAAA,GAC5C;AAAA,UAGC,CAACY,KACA,gBAAAS,EAACK,GAAY,EAAA,GAAGtB,GACb,UAAAF,EAAU,IAAI,CAACe,MACd,gBAAAI,EAACM,GACC,EAAA,UAAA,gBAAAT;AAAA,YAACM;AAAA,YAAA;AAAA,cAEC,WAAWC;AAAA,gBACT;AAAA,gBACA;AAAA,kBACE,sDACER,EAAK;AAAA,gBACT;AAAA,gBACAV,GAAY;AAAA,cACd;AAAA,cACA,SAAS,MAAMF,IAAcY,CAAI;AAAA,cAEhC,UAAA;AAAA,gBAAKA,EAAA;AAAA,gBACLA,EAAK;AAAA,gBACLA,EAAK;AAAA,cAAA;AAAA,YAAA;AAAA,YAbDA,EAAK;AAAA,UAAA,KAFOA,EAAK,GAiB1B,CACD,EACH,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAGN;AAEArB,EAAO,cAAc;"}