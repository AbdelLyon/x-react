{"version":3,"file":"index.js","sources":["../../../src/chart/Chart.tsx"],"sourcesContent":["import { cn } from \"@/utils\";\nimport type {\n  ChartData,\n  ChartOptions,\n  ChartTypeRegistry,\n  InteractionItem,\n  TooltipItem,\n} from \"chart.js\";\nimport {\n  CategoryScale,\n  Chart as ChartJS,\n  Legend,\n  LinearScale,\n  Title,\n  Tooltip,\n  BarController,\n  DoughnutController,\n  BarElement,\n  ArcElement,\n  PointElement,\n  LineElement,\n  RadialLinearScale,\n  ScatterController,\n  PolarAreaController,\n} from \"chart.js\";\nimport type { JSX } from \"react\";\nimport { useRef } from \"react\";\nimport type { ChartProps } from \"react-chartjs-2\";\nimport { Chart as ChartRoot, getElementAtEvent } from \"react-chartjs-2\";\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  RadialLinearScale,\n  BarElement,\n  ArcElement,\n  PointElement,\n  LineElement,\n  BarController,\n  DoughnutController,\n  ScatterController,\n  PolarAreaController,\n);\n\ntype ChartType = keyof ChartTypeRegistry;\n\ninterface ChartClassNames {\n  root?: string;\n  canvas?: string;\n  title?: string;\n  legend?: string;\n  tooltip?: string;\n}\n\ninterface ChartBaseProps<T extends ChartType> {\n  data: ChartData<T>;\n  options?: ChartOptions<T>;\n  type: T;\n  getElementSelected?: (elementSelected: InteractionItem[]) => void;\n  classNames?: ChartClassNames;\n  width?: number | string;\n  height?: number | string;\n  responsive?: boolean;\n  maintainAspectRatio?: boolean;\n  title?: string;\n  showLegend?: boolean;\n  showTooltip?: boolean;\n  legendPosition?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  customTooltip?: (context: TooltipItem<T>) => string | string[] | undefined;\n}\n\ntype Props<T extends ChartType> = ChartBaseProps<T> &\n  Omit<ChartProps<T>, keyof ChartBaseProps<T>>;\n\nconst defaultClassNames: Required<ChartClassNames> = {\n  root: \"relative w-full h-max flex flex-col items-center border border-default justify-center bg-white dark:bg-content1 p-6 shadow-md rounded-xl\",\n  canvas: \"w-full h-[400px]\",\n  title: \"text-lg font-semibold text-center mb-4\",\n  legend: \"mt-4\",\n  tooltip: \"bg-white p-2 rounded shadow-lg border text-sm\",\n};\n\nexport const Chart = <T extends ChartType>({\n  type,\n  data,\n  options,\n  getElementSelected,\n  classNames = {},\n  responsive = true,\n  maintainAspectRatio = false,\n  title,\n  showLegend = true,\n  showTooltip = true,\n  legendPosition = \"top\",\n  customTooltip,\n  ...props\n}: Props<T>): JSX.Element => {\n  const chartRef = useRef<ChartJS<T>>(null);\n\n  const mergedClassNames = {\n    root: cn(defaultClassNames.root, classNames.root),\n    canvas: cn(defaultClassNames.canvas, classNames.canvas),\n    title: cn(defaultClassNames.title, classNames.title),\n    legend: cn(defaultClassNames.legend, classNames.legend),\n    tooltip: cn(defaultClassNames.tooltip, classNames.tooltip),\n  };\n\n  const handleClick = (event: React.MouseEvent<HTMLCanvasElement>): void => {\n    if (chartRef.current !== null) {\n      const element = getElementAtEvent(\n        chartRef.current as unknown as ChartJS<keyof ChartTypeRegistry>,\n        event,\n      );\n      if (element.length > 0 && getElementSelected) {\n        getElementSelected(element);\n      }\n    }\n  };\n  const defaultOptions: ChartOptions<T> = {\n    responsive,\n    maintainAspectRatio,\n    plugins: {\n      title:\n        title !== undefined\n          ? {\n              display: true,\n              text: title,\n              font: {\n                size: 16,\n                weight: \"bold\",\n              },\n              padding: {\n                top: 10,\n                bottom: 20,\n              },\n            }\n          : undefined,\n      legend: {\n        display: showLegend,\n        position: legendPosition,\n      },\n      tooltip: showTooltip\n        ? {\n            enabled: true,\n            backgroundColor: \"white\",\n            titleColor: \"#1f2937\",\n            bodyColor: \"#4b5563\",\n            borderColor: \"#e5e7eb\",\n            borderWidth: 1,\n            padding: 8,\n            cornerRadius: 4,\n            bodyFont: {\n              size: 14,\n            },\n            titleFont: {\n              size: 14,\n              weight: \"bold\" as const,\n            },\n            ...(customTooltip && {\n              callbacks: {\n                label: customTooltip,\n              },\n            }),\n          }\n        : undefined,\n    },\n  } as ChartOptions<T>;\n\n  const mergedOptions: ChartOptions<T> = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  return (\n    <div className={mergedClassNames.root}>\n      <ChartRoot\n        ref={chartRef}\n        data={data}\n        options={mergedOptions}\n        type={type}\n        onClick={handleClick}\n        className={mergedClassNames.canvas}\n        {...props}\n      />\n    </div>\n  );\n};\n\nChart.displayName = \"Chart\";\n\nexport type {\n  ChartType,\n  ChartClassNames,\n  ChartTypeRegistry,\n  ChartJS,\n  ChartOptions,\n  ChartProps,\n  ChartBaseProps,\n};\n"],"names":["ChartJS","CategoryScale","LinearScale","Title","Tooltip","Legend","RadialLinearScale","BarElement","ArcElement","PointElement","LineElement","BarController","DoughnutController","ScatterController","PolarAreaController","defaultClassNames","Chart","type","data","options","getElementSelected","classNames","responsive","maintainAspectRatio","title","showLegend","showTooltip","legendPosition","customTooltip","props","chartRef","useRef","mergedClassNames","cn","handleClick","event","element","getElementAtEvent","mergedOptions","jsx","ChartRoot"],"mappings":";;;;;AA+BAA,EAAQ;AAAA,EACNC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AACF;AAgCA,MAAMC,IAA+C;AAAA,EACnD,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,SAAS;AACX,GAEaC,IAAQ,CAAsB;AAAA,EACzC,MAAAC;AAAA,EACA,MAAAC;AAAA,EACA,SAAAC;AAAA,EACA,oBAAAC;AAAA,EACA,YAAAC,IAAa,CAAC;AAAA,EACd,YAAAC,IAAa;AAAA,EACb,qBAAAC,IAAsB;AAAA,EACtB,OAAAC;AAAA,EACA,YAAAC,IAAa;AAAA,EACb,aAAAC,IAAc;AAAA,EACd,gBAAAC,IAAiB;AAAA,EACjB,eAAAC;AAAA,EACA,GAAGC;AACL,MAA6B;AACrB,QAAAC,IAAWC,EAAmB,IAAI,GAElCC,IAAmB;AAAA,IACvB,MAAMC,EAAGlB,EAAkB,MAAMM,EAAW,IAAI;AAAA,IAChD,QAAQY,EAAGlB,EAAkB,QAAQM,EAAW,MAAM;AAAA,IACtD,OAAOY,EAAGlB,EAAkB,OAAOM,EAAW,KAAK;AAAA,IACnD,QAAQY,EAAGlB,EAAkB,QAAQM,EAAW,MAAM;AAAA,IACtD,SAASY,EAAGlB,EAAkB,SAASM,EAAW,OAAO;AAAA,EAC3D,GAEMa,IAAc,CAACC,MAAqD;AACpE,QAAAL,EAAS,YAAY,MAAM;AAC7B,YAAMM,IAAUC;AAAA,QACdP,EAAS;AAAA,QACTK;AAAA,MACF;AACI,MAAAC,EAAQ,SAAS,KAAKhB,KACxBA,EAAmBgB,CAAO;AAAA,IAC5B;AAAA,EAEJ,GAmDME,IAAiC;AAAA,IACrC,GAnDsC;AAAA,MACtC,YAAAhB;AAAA,MACA,qBAAAC;AAAA,MACA,SAAS;AAAA,QACP,OACEC,MAAU,SACN;AAAA,UACE,SAAS;AAAA,UACT,MAAMA;AAAA,UACN,MAAM;AAAA,YACJ,MAAM;AAAA,YACN,QAAQ;AAAA,UACV;AAAA,UACA,SAAS;AAAA,YACP,KAAK;AAAA,YACL,QAAQ;AAAA,UAAA;AAAA,QAGZ,IAAA;AAAA,QACN,QAAQ;AAAA,UACN,SAASC;AAAA,UACT,UAAUE;AAAA,QACZ;AAAA,QACA,SAASD,IACL;AAAA,UACE,SAAS;AAAA,UACT,iBAAiB;AAAA,UACjB,YAAY;AAAA,UACZ,WAAW;AAAA,UACX,aAAa;AAAA,UACb,aAAa;AAAA,UACb,SAAS;AAAA,UACT,cAAc;AAAA,UACd,UAAU;AAAA,YACR,MAAM;AAAA,UACR;AAAA,UACA,WAAW;AAAA,YACT,MAAM;AAAA,YACN,QAAQ;AAAA,UACV;AAAA,UACA,GAAIE,KAAiB;AAAA,YACnB,WAAW;AAAA,cACT,OAAOA;AAAA,YAAA;AAAA,UACT;AAAA,QACF,IAEF;AAAA,MAAA;AAAA,IAER;AAAA,IAIE,GAAGT;AAAA,EACL;AAEA,SACG,gBAAAoB,EAAA,OAAA,EAAI,WAAWP,EAAiB,MAC/B,UAAA,gBAAAO;AAAA,IAACC;AAAAA,IAAA;AAAA,MACC,KAAKV;AAAA,MACL,MAAAZ;AAAA,MACA,SAASoB;AAAA,MACT,MAAArB;AAAA,MACA,SAASiB;AAAA,MACT,WAAWF,EAAiB;AAAA,MAC3B,GAAGH;AAAA,IAAA;AAAA,EAAA,GAER;AAEJ;AAEAb,EAAM,cAAc;"}