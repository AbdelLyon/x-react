{"version":3,"file":"x-react.es.js","sources":["../../../src/datepicker/DatePicker.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport type {\n  DatePickerProps as DatePickerRootProps,\n  DateRangePickerProps as DateRangePickerRootProps,\n  DateValue,\n} from \"@nextui-org/react\";\nimport {\n  DatePicker as DatePickerRoot,\n  DateRangePicker as DateRangePickerRoot,\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype BaseProps = {\n  containerClasses?: string;\n  variant?: \"bordered\" | \"flat\" | \"faded\" | \"underlined\";\n  color?: string;\n  size?: string;\n  radius?: string;\n  labelPlacement?: string;\n  fullWidth?: boolean;\n  isRequired?: boolean;\n  isReadOnly?: boolean;\n  isDisabled?: boolean;\n};\n\ntype DatePickerProps = DatePickerRootProps &\n  BaseProps & {\n    customValidation?: (value: Date | null) => boolean | string;\n  };\n\ntype DateRangePickerProps = DateRangePickerRootProps & BaseProps;\n\nconst getVariantStyles = (variant: string = \"bordered\"): string => {\n  switch (variant) {\n    case \"bordered\":\n      return \"bg-white dark:bg-background data-[hover=true]:border-outline group-data-[focus=true]:border-outline h-12 group-data-[focus=true]:bg-content1\";\n    case \"flat\":\n      return \"border-none border-1 bg-default-100 dark:bg-default-50 data-[hover=true]:bg-default-200 group-data-[focus=true]:bg-default-100 h-12\";\n    case \"faded\":\n      return \"border-transparent bg-default-100 dark:bg-default-50 data-[hover=true]:bg-default-200 group-data-[focus=true]:border-outline h-12\";\n    case \"underlined\":\n      return \"border-b-1 rounded-none bg-transparent border-default-200 dark:border-default-100 data-[hover=true]:border-outline group-data-[focus=true]:border-outline h-12\";\n    default:\n      return \"bg-white dark:bg-background data-[hover=true]:border-outline group-data-[focus=true]:border-outline h-12\";\n  }\n};\n\nexport const DatePicker = forwardRef<HTMLDivElement, DatePickerProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      ...props\n    },\n    ref,\n  ) => {\n    const { classNames: propClassNames, ...restProps } = props;\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <DatePickerRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          classNames={{\n            ...propClassNames,\n            inputWrapper: cn(\n              getVariantStyles(variant),\n              propClassNames?.inputWrapper,\n            ),\n          }}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nexport const DateRangePicker = forwardRef<HTMLDivElement, DateRangePickerProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      ...props\n    },\n    ref,\n  ) => {\n    const { classNames: propClassNames, ...restProps } = props;\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <DateRangePickerRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          classNames={{\n            ...propClassNames,\n            base: cn(getVariantStyles(variant), propClassNames?.base),\n          }}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nexport type { DateValue };\n\nDatePicker.displayName = \"DatePicker\";\nDateRangePicker.displayName = \"DateRangePicker\";\n"],"names":["DatePickerRoot","DateRangePickerRoot"],"mappings":";;;;AAgCA,MAAM,mBAAmB,CAAC,UAAkB,eAAuB;AACjE,UAAQ,SAAS;AAAA,IACf,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT,KAAK;AACI,aAAA;AAAA,IACT;AACS,aAAA;AAAA,EAAA;AAEb;AAEO,MAAM,aAAa;AAAA,EACxB,CACE;AAAA,IACE,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb;AAAA,IACA,GAAG;AAAA,KAEL,QACG;AACH,UAAM,EAAE,YAAY,gBAAgB,GAAG,UAAc,IAAA;AAErD,+BACG,OAAI,EAAA,WAAW,GAAG,UAAU,gBAAgB,GAC3C,UAAA;AAAA,MAACA;AAAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACV,GAAG;AAAA,UACH,cAAc;AAAA,YACZ,iBAAiB,OAAO;AAAA,YACxB,iDAAgB;AAAA,UAAA;AAAA,QAEpB;AAAA,QACC,GAAG;AAAA,MAAA;AAAA,IAAA,GAER;AAAA,EAAA;AAGN;AAEO,MAAM,kBAAkB;AAAA,EAC7B,CACE;AAAA,IACE,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,aAAa;AAAA,IACb,aAAa;AAAA,IACb;AAAA,IACA,GAAG;AAAA,KAEL,QACG;AACH,UAAM,EAAE,YAAY,gBAAgB,GAAG,UAAc,IAAA;AAErD,+BACG,OAAI,EAAA,WAAW,GAAG,UAAU,gBAAgB,GAC3C,UAAA;AAAA,MAACC;AAAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,YAAY;AAAA,UACV,GAAG;AAAA,UACH,MAAM,GAAG,iBAAiB,OAAO,GAAG,iDAAgB,IAAI;AAAA,QAC1D;AAAA,QACC,GAAG;AAAA,MAAA;AAAA,IAAA,GAER;AAAA,EAAA;AAGN;AAIA,WAAW,cAAc;AACzB,gBAAgB,cAAc;"}