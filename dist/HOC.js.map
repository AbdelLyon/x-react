{"version":3,"sources":["../src/HOC/WithLoading.tsx"],"names":[],"mappings":";;;AAOa,IAAA,WAAA,GAAc,CACzB,gBACA,EAAA,gBAAA,GAAkC,sBAAO,GAAA,CAAA,KAAA,EAAA,EAAI,wBAAU,CACpD,KAAA;AACH,EAAA,OAAO,SAAS,oBAAqB,CAAA;AAAA,IACnC,OAAA;AAAA,IACA,GAAG;AAAA,GACiC,EAAA;AACpC,IAAA,IAAI,OAAS,EAAA;AACX,MAAA,2BAAQ,gBAAiB,EAAA,EAAA,CAAA;AAAA;AAE3B,IAAO,uBAAA,GAAA,CAAC,gBAAkB,EAAA,EAAA,GAAI,KAAa,EAAA,CAAA;AAAA,GAC7C;AACF","file":"HOC.js","sourcesContent":["// src/hoc/withLoading.tsx\nimport type { ComponentType, JSX } from \"react\";\n\ninterface WithLoadingProps {\n  loading: boolean;\n}\n\nexport const WithLoading = <T extends object>(\n  WrappedComponent: ComponentType<T>,\n  LoadingComponent: ComponentType = () => <div>Loading...</div>,\n) => {\n  return function WithLoadingComponent({\n    loading,\n    ...props\n  }: T & WithLoadingProps): JSX.Element {\n    if (loading) {\n      return <LoadingComponent />;\n    }\n    return <WrappedComponent {...(props as T)} />;\n  };\n};\n"]}