{"version":3,"file":"useInfiniteScroll-CvJJSKPz.js","sources":["../src/hooks/useInfiniteScroll.ts"],"sourcesContent":["import { debounce } from \"@/utils\";\nimport { useLayoutEffect, useRef, useCallback } from \"react\";\n\nexport interface UseInfiniteScrollProps {\n  isEnabled?: boolean;\n  hasMore?: boolean;\n  distance?: number;\n  shouldUseLoader?: boolean;\n  onLoadMore?: () => void;\n}\n\nexport const useInfiniteScroll = (\n  props: UseInfiniteScrollProps = {},\n): readonly [React.RefObject<HTMLElement>, React.RefObject<HTMLElement>] => {\n  const {\n    hasMore = true,\n    distance = 250,\n    isEnabled = true,\n    shouldUseLoader = true,\n    onLoadMore,\n  } = props;\n\n  const scrollContainerRef = useRef<HTMLElement>(null);\n  const loaderRef = useRef<HTMLElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const isLoadingRef = useRef(false);\n\n  const loadMore = useCallback(() => {\n    let timer: ReturnType<typeof setTimeout>;\n\n    if (!isLoadingRef.current && hasMore && onLoadMore) {\n      isLoadingRef.current = true;\n      onLoadMore();\n      timer = setTimeout(() => {\n        isLoadingRef.current = false;\n      }, 100);\n    }\n\n    return () => clearTimeout(timer);\n  }, [hasMore, onLoadMore]);\n\n  useLayoutEffect(() => {\n    const scrollContainerNode = scrollContainerRef.current;\n\n    if (!isEnabled || !scrollContainerNode || !hasMore) {\n      return;\n    }\n\n    if (shouldUseLoader) {\n      const loaderNode = loaderRef.current;\n\n      if (!loaderNode) {\n        return;\n      }\n\n      const options = {\n        root: scrollContainerNode,\n        rootMargin: `0px 0px ${distance}px 0px`,\n        threshold: 0.1,\n      };\n\n      const observer = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n\n        if (entry.isIntersecting) {\n          loadMore();\n        }\n      }, options);\n\n      observer.observe(loaderNode);\n      observerRef.current = observer;\n\n      return () => {\n        if (observerRef.current) {\n          observerRef.current.disconnect();\n        }\n      };\n    }\n\n    const debouncedCheckIfNearBottom = debounce(() => {\n      if (\n        scrollContainerNode.scrollHeight - scrollContainerNode.scrollTop <=\n        scrollContainerNode.clientHeight + distance\n      ) {\n        loadMore();\n      }\n    }, 100);\n\n    scrollContainerNode.addEventListener(\"scroll\", debouncedCheckIfNearBottom);\n\n    return () => {\n      scrollContainerNode.removeEventListener(\n        \"scroll\",\n        debouncedCheckIfNearBottom,\n      );\n    };\n  }, [hasMore, distance, isEnabled, shouldUseLoader, loadMore]);\n\n  return [loaderRef, scrollContainerRef] as const as readonly [\n    React.RefObject<HTMLElement>,\n    React.RefObject<HTMLElement>,\n  ];\n};\nexport type UseInfiniteScrollReturn = ReturnType<typeof useInfiniteScroll>;\n"],"names":[],"mappings":";;AAWO,MAAM,oBAAoB,CAC/B,QAAgC,OAC0C;AACpE,QAAA;AAAA,IACJ,UAAU;AAAA,IACV,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB;AAAA,EAAA,IACE;AAEE,QAAA,qBAAqB,OAAoB,IAAI;AAC7C,QAAA,YAAY,OAAoB,IAAI;AACpC,QAAA,cAAc,OAAoC,IAAI;AACtD,QAAA,eAAe,OAAO,KAAK;AAE3B,QAAA,WAAW,YAAY,MAAM;AAC7B,QAAA;AAEJ,QAAI,CAAC,aAAa,WAAW,WAAW,YAAY;AAClD,mBAAa,UAAU;AACZ,iBAAA;AACX,cAAQ,WAAW,MAAM;AACvB,qBAAa,UAAU;AAAA,SACtB,GAAG;AAAA,IAAA;AAGD,WAAA,MAAM,aAAa,KAAK;AAAA,EAAA,GAC9B,CAAC,SAAS,UAAU,CAAC;AAExB,kBAAgB,MAAM;AACpB,UAAM,sBAAsB,mBAAmB;AAE/C,QAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,SAAS;AAClD;AAAA,IAAA;AAGF,QAAI,iBAAiB;AACnB,YAAM,aAAa,UAAU;AAE7B,UAAI,CAAC,YAAY;AACf;AAAA,MAAA;AAGF,YAAM,UAAU;AAAA,QACd,MAAM;AAAA,QACN,YAAY,WAAW,QAAQ;AAAA,QAC/B,WAAW;AAAA,MACb;AAEA,YAAM,WAAW,IAAI,qBAAqB,CAAC,YAAY;AAC/C,cAAA,CAAC,KAAK,IAAI;AAEhB,YAAI,MAAM,gBAAgB;AACf,mBAAA;AAAA,QAAA;AAAA,SAEV,OAAO;AAEV,eAAS,QAAQ,UAAU;AAC3B,kBAAY,UAAU;AAEtB,aAAO,MAAM;AACX,YAAI,YAAY,SAAS;AACvB,sBAAY,QAAQ,WAAW;AAAA,QAAA;AAAA,MAEnC;AAAA,IAAA;AAGI,UAAA,6BAA6B,SAAS,MAAM;AAChD,UACE,oBAAoB,eAAe,oBAAoB,aACvD,oBAAoB,eAAe,UACnC;AACS,iBAAA;AAAA,MAAA;AAAA,OAEV,GAAG;AAEc,wBAAA,iBAAiB,UAAU,0BAA0B;AAEzE,WAAO,MAAM;AACS,0BAAA;AAAA,QAClB;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EAAA,GACC,CAAC,SAAS,UAAU,WAAW,iBAAiB,QAAQ,CAAC;AAErD,SAAA,CAAC,WAAW,kBAAkB;AAIvC;"}