{"version":3,"sources":["../src/utils/index.ts","../src/hooks/useMediaQuery.ts","../src/hooks/useResponsive.ts","../src/tooltip/Tooltip.tsx","../src/sidebar/Sidebar.tsx"],"names":["TooltipRoot","jsx"],"mappings":"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","file":"sidebar.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport const cn = (...inputs: ClassValue[]): string => {\n  return twMerge(clsx(inputs));\n};\n\nexport const capitalizeFirstLetter = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const concatenateWithSpace = (\n  ...strings: (string | undefined)[]\n): string => strings.filter(Boolean).join(\" \");\n\nexport const startsWith = (str: string, prefix: string): boolean =>\n  str.startsWith(prefix);\n\nexport const endsWith = (str: string, suffix: string): boolean =>\n  str.endsWith(suffix);\n\nexport const toLowerCase = (str: string): string => str.toLowerCase();\n\nexport const toUpperCase = (str: string): string => str.toUpperCase();\n\nexport const trim = (str: string): string => str.trim();\n\nexport const reverse = (str: string): string =>\n  str.split(\"\").reverse().join(\"\");\n\nexport const limitValue = (\n  value: number,\n  min: number | undefined,\n  max: number | undefined,\n): number => {\n  if (min === undefined && max === undefined) {\n    return value;\n  }\n\n  if (min !== undefined && max === undefined) {\n    return Math.max(value, min);\n  }\n\n  if (min === undefined && max !== undefined) {\n    return Math.min(value, max);\n  }\n\n  if (min !== undefined && max !== undefined) {\n    return Math.min(Math.max(value, min), max);\n  }\n\n  return value;\n};\n\ntype DebouncedFunction<Args extends unknown[]> = {\n  (...args: Args): void;\n  cancel: () => void;\n};\n\n//debounce function\nexport function debounce<\n  Callback extends (...args: never[]) => unknown,\n  Args extends Parameters<Callback>,\n>(callback: Callback, delay = 0): DebouncedFunction<Args> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  let latestArgs: Args | undefined;\n\n  function debouncedFn(this: unknown, ...args: Args): void {\n    latestArgs = args;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      if (latestArgs) {\n        callback.apply(this, latestArgs);\n      }\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }, delay);\n  }\n\n  debouncedFn.cancel = function cancel(): void {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }\n  };\n\n  return debouncedFn;\n}\n","import { useEffect, useRef, useState, useCallback } from \"react\";\n\nexport type UseMediaQueryOptions = {\n  getInitialValueInEffect?: boolean;\n  initialValue?: boolean;\n};\n\nfunction attachMediaListener(\n  query: MediaQueryList,\n  callback: (event: MediaQueryListEvent) => void,\n): () => void {\n  query.addEventListener(\"change\", callback);\n  return () => query.removeEventListener(\"change\", callback);\n}\n\nfunction getInitialValue(query: string, initialValue?: boolean): boolean {\n  if (typeof initialValue === \"boolean\") {\n    return initialValue;\n  }\n\n  if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n    try {\n      return window.matchMedia(query).matches;\n    } catch (e) {\n      console.warn(\"Error while matching media query:\", e);\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport function useMediaQuery(\n  query: string,\n  options: UseMediaQueryOptions = {},\n): boolean {\n  const { getInitialValueInEffect = true, initialValue } = options;\n\n  const [matches, setMatches] = useState<boolean>(() =>\n    getInitialValueInEffect\n      ? (initialValue ?? false)\n      : getInitialValue(query, initialValue),\n  );\n\n  const queryRef = useRef<MediaQueryList | null>(null);\n  const handleChange = useCallback((event: MediaQueryListEvent) => {\n    setMatches(event.matches);\n  }, []);\n\n  useEffect(() => {\n    if (typeof window === \"undefined\" || !(\"matchMedia\" in window)) {\n      return undefined;\n    }\n\n    try {\n      queryRef.current = window.matchMedia(query);\n      if (getInitialValueInEffect) {\n        setMatches(queryRef.current.matches);\n      }\n\n      return attachMediaListener(queryRef.current, handleChange);\n    } catch (e) {\n      console.error(\"Error setting up media query:\", e);\n      return undefined;\n    }\n  }, [query, getInitialValueInEffect, handleChange]);\n\n  return matches;\n}\n","import { useMediaQuery } from \"./useMediaQuery\";\n\ntype Breakpoints = {\n  isDesktop: boolean;\n  isTablet: boolean;\n  isMobile: boolean;\n}\n\ntype ResponsiveHook = {\n  matches?: boolean;\n  getBreakpoint: () => keyof Breakpoints;\n  isBreakpoint: (breakpoint: keyof Breakpoints) => boolean;\n} & Breakpoints\n\nconst MEDIA_QUERIES = {\n  desktop: \"(min-width: 1024px)\",\n  tablet: \"(min-width: 768px) and (max-width: 1023px)\",\n} as const;\n\nexport const useResponsive = (customQuery?: string): ResponsiveHook => {\n  const isDesktop = useMediaQuery(MEDIA_QUERIES.desktop);\n  const isTablet = useMediaQuery(MEDIA_QUERIES.tablet);\n  const isMobile = !isDesktop && !isTablet;\n\n  const customMatch = useMediaQuery(\n    typeof customQuery === \"string\" && customQuery.length > 0\n      ? customQuery\n      : \"\",\n  );\n\n  const getBreakpoint = (): keyof Breakpoints => {\n    if (isDesktop === true) {\n      return \"isDesktop\";\n    }\n    if (isTablet === true) {\n      return \"isTablet\";\n    }\n    return \"isMobile\";\n  };\n\n  const isBreakpoint = (breakpoint: keyof Breakpoints): boolean => {\n    const breakpoints: Breakpoints = {\n      isDesktop,\n      isTablet,\n      isMobile,\n    };\n    return breakpoints[breakpoint] === true;\n  };\n\n  const hasValidCustomQuery =\n    typeof customQuery === \"string\" && customQuery.length > 0;\n\n  return {\n    isDesktop,\n    isTablet,\n    isMobile,\n    matches: hasValidCustomQuery ? customMatch : undefined,\n    getBreakpoint,\n    isBreakpoint,\n  };\n};\n","import type { JSX, ReactNode } from \"react\";\nimport type { TooltipProps as TooltipPropsRoot } from \"@nextui-org/react\";\nimport { Tooltip as TooltipRoot } from \"@nextui-org/react\";\n\ninterface TooltipProps\n  extends Omit<TooltipPropsRoot, \"content\" | \"children\" | \"trigger\"> {\n  trigger: ReactNode;\n  content: ReactNode;\n}\n\nexport const Tooltip = ({\n  trigger,\n  content,\n  size = \"md\",\n  color = \"default\",\n  radius = \"sm\",\n  shadow = \"sm\",\n  placement = \"top\",\n  delay = 0,\n  closeDelay = 500,\n  offset = 7,\n  containerPadding = 12,\n  crossOffset = 0,\n  showArrow = false,\n  shouldFlip = true,\n  triggerScaleOnOpen = true,\n  isKeyboardDismissDisabled = false,\n  isDismissable = false,\n  shouldCloseOnBlur = true,\n  isDisabled = false,\n  disableAnimation = false,\n  ...props\n}: TooltipProps): JSX.Element => {\n  return (\n    <TooltipRoot\n      content={content}\n      size={size}\n      color={color}\n      radius={radius}\n      shadow={shadow}\n      placement={placement}\n      delay={delay}\n      closeDelay={closeDelay}\n      offset={offset}\n      containerPadding={containerPadding}\n      crossOffset={crossOffset}\n      showArrow={showArrow}\n      shouldFlip={shouldFlip}\n      triggerScaleOnOpen={triggerScaleOnOpen}\n      isKeyboardDismissDisabled={isKeyboardDismissDisabled}\n      isDismissable={isDismissable}\n      shouldCloseOnBlur={shouldCloseOnBlur}\n      isDisabled={isDisabled}\n      disableAnimation={disableAnimation}\n      {...props}\n    >\n      {trigger}\n    </TooltipRoot>\n  );\n};\n","import type { JSX } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\nimport type { Item } from \"@/types/navigation\";\nimport { Link } from \"@nextui-org/react\";\nimport { useResponsive } from \"@/hooks\";\nimport { Tooltip } from \"@/tooltip\";\n\nexport interface SidebarProps {\n  items?: Item[];\n  className?: string;\n  classNames?: {\n    base?: string;\n    item?: string;\n  };\n  onItemClick?: (item: Item) => void;\n}\n\nexport const Sidebar = forwardRef<HTMLDivElement, SidebarProps>(\n  ({ items = [], classNames, onItemClick }, ref) => {\n    const { isDesktop, isTablet } = useResponsive();\n\n    if (!isDesktop && !isTablet) {\n      return null;\n    }\n\n    const renderLink = (item: Item): JSX.Element => {\n      const linkContent = (\n        <Link\n          key={item.key}\n          className={cn(\n            \"flex items-center gap-3 p-3 text-[#ECEDEE] hover:text-foreground hover:bg-content1 rounded-md cursor-pointer\",\n            {\n              \"border-l-2 border-primary bg-content1 text-primary\":\n                item.isActive,\n              \"justify-center\": isTablet,\n            },\n            classNames?.item,\n          )}\n          onPress={() => onItemClick?.(item)}\n        >\n          {item.startContent}\n          {isDesktop ? item.label : null}\n          {item.endContent}\n        </Link>\n      );\n\n      if (isTablet) {\n        return (\n          <Tooltip\n            trigger={linkContent}\n            key={item.key}\n            content={item.label}\n            placement=\"right\"\n            delay={0}\n            closeDelay={0}\n            className=\"border border-default\"\n          />\n        );\n      }\n\n      return linkContent;\n    };\n\n    return (\n      <aside\n        ref={ref}\n        className={cn(\n          \"fixed left-0 h-screen flex-col bg-[#212324] border-r border-default\",\n          {\n            \"w-[270px]\": isDesktop,\n            \"w-[90px]\": isTablet,\n          },\n          classNames?.base,\n        )}\n      >\n        <nav className=\"flex flex-1 flex-col gap-2 p-4\">\n          {items.map(renderLink)}\n        </nav>\n      </aside>\n    );\n  },\n);\n\nSidebar.displayName = \"Sidebar\";\n"]}