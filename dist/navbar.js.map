{"version":3,"sources":["../src/utils/index.ts","../src/hooks/useMediaQuery.ts","../src/hooks/useResponsive.ts","../src/navbar/Navbar.tsx"],"names":["NavbarRoot"],"mappings":"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","file":"navbar.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport const cn = (...inputs: ClassValue[]): string => {\n  return twMerge(clsx(inputs));\n};\n\nexport const capitalizeFirstLetter = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const concatenateWithSpace = (\n  ...strings: (string | undefined)[]\n): string => strings.filter(Boolean).join(\" \");\n\nexport const startsWith = (str: string, prefix: string): boolean =>\n  str.startsWith(prefix);\n\nexport const endsWith = (str: string, suffix: string): boolean =>\n  str.endsWith(suffix);\n\nexport const toLowerCase = (str: string): string => str.toLowerCase();\n\nexport const toUpperCase = (str: string): string => str.toUpperCase();\n\nexport const trim = (str: string): string => str.trim();\n\nexport const reverse = (str: string): string =>\n  str.split(\"\").reverse().join(\"\");\n\nexport const limitValue = (\n  value: number,\n  min: number | undefined,\n  max: number | undefined,\n): number => {\n  if (min === undefined && max === undefined) {\n    return value;\n  }\n\n  if (min !== undefined && max === undefined) {\n    return Math.max(value, min);\n  }\n\n  if (min === undefined && max !== undefined) {\n    return Math.min(value, max);\n  }\n\n  if (min !== undefined && max !== undefined) {\n    return Math.min(Math.max(value, min), max);\n  }\n\n  return value;\n};\n\ntype DebouncedFunction<Args extends unknown[]> = {\n  (...args: Args): void;\n  cancel: () => void;\n};\n\n//debounce function\nexport function debounce<\n  Callback extends (...args: never[]) => unknown,\n  Args extends Parameters<Callback>,\n>(callback: Callback, delay = 0): DebouncedFunction<Args> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  let latestArgs: Args | undefined;\n\n  function debouncedFn(this: unknown, ...args: Args): void {\n    latestArgs = args;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      if (latestArgs) {\n        callback.apply(this, latestArgs);\n      }\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }, delay);\n  }\n\n  debouncedFn.cancel = function cancel(): void {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }\n  };\n\n  return debouncedFn;\n}\n","import { useEffect, useRef, useState, useCallback } from \"react\";\n\nexport type UseMediaQueryOptions = {\n  getInitialValueInEffect?: boolean;\n  initialValue?: boolean;\n};\n\nfunction attachMediaListener(\n  query: MediaQueryList,\n  callback: (event: MediaQueryListEvent) => void,\n): () => void {\n  query.addEventListener(\"change\", callback);\n  return () => query.removeEventListener(\"change\", callback);\n}\n\nfunction getInitialValue(query: string, initialValue?: boolean): boolean {\n  if (typeof initialValue === \"boolean\") {\n    return initialValue;\n  }\n\n  if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n    try {\n      return window.matchMedia(query).matches;\n    } catch (e) {\n      console.warn(\"Error while matching media query:\", e);\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport function useMediaQuery(\n  query: string,\n  options: UseMediaQueryOptions = {},\n): boolean {\n  const { getInitialValueInEffect = true, initialValue } = options;\n\n  const [matches, setMatches] = useState<boolean>(() =>\n    getInitialValueInEffect\n      ? (initialValue ?? false)\n      : getInitialValue(query, initialValue),\n  );\n\n  const queryRef = useRef<MediaQueryList | null>(null);\n  const handleChange = useCallback((event: MediaQueryListEvent) => {\n    setMatches(event.matches);\n  }, []);\n\n  useEffect(() => {\n    if (typeof window === \"undefined\" || !(\"matchMedia\" in window)) {\n      return undefined;\n    }\n\n    try {\n      queryRef.current = window.matchMedia(query);\n      if (getInitialValueInEffect) {\n        setMatches(queryRef.current.matches);\n      }\n\n      return attachMediaListener(queryRef.current, handleChange);\n    } catch (e) {\n      console.error(\"Error setting up media query:\", e);\n      return undefined;\n    }\n  }, [query, getInitialValueInEffect, handleChange]);\n\n  return matches;\n}\n","import { useMediaQuery } from \"./useMediaQuery\";\n\ntype Breakpoints = {\n  isDesktop: boolean;\n  isTablet: boolean;\n  isMobile: boolean;\n}\n\ntype ResponsiveHook = {\n  matches?: boolean;\n  getBreakpoint: () => keyof Breakpoints;\n  isBreakpoint: (breakpoint: keyof Breakpoints) => boolean;\n} & Breakpoints\n\nconst MEDIA_QUERIES = {\n  desktop: \"(min-width: 1024px)\",\n  tablet: \"(min-width: 768px) and (max-width: 1023px)\",\n} as const;\n\nexport const useResponsive = (customQuery?: string): ResponsiveHook => {\n  const isDesktop = useMediaQuery(MEDIA_QUERIES.desktop);\n  const isTablet = useMediaQuery(MEDIA_QUERIES.tablet);\n  const isMobile = !isDesktop && !isTablet;\n\n  const customMatch = useMediaQuery(\n    typeof customQuery === \"string\" && customQuery.length > 0\n      ? customQuery\n      : \"\",\n  );\n\n  const getBreakpoint = (): keyof Breakpoints => {\n    if (isDesktop === true) {\n      return \"isDesktop\";\n    }\n    if (isTablet === true) {\n      return \"isTablet\";\n    }\n    return \"isMobile\";\n  };\n\n  const isBreakpoint = (breakpoint: keyof Breakpoints): boolean => {\n    const breakpoints: Breakpoints = {\n      isDesktop,\n      isTablet,\n      isMobile,\n    };\n    return breakpoints[breakpoint] === true;\n  };\n\n  const hasValidCustomQuery =\n    typeof customQuery === \"string\" && customQuery.length > 0;\n\n  return {\n    isDesktop,\n    isTablet,\n    isMobile,\n    matches: hasValidCustomQuery ? customMatch : undefined,\n    getBreakpoint,\n    isBreakpoint,\n  };\n};\n","import type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport type {\n  NavbarContentProps,\n  NavbarMenuProps,\n  NavbarProps as NavbarRootProps,\n} from \"@nextui-org/react\";\nimport {\n  Navbar as NavbarRoot,\n  NavbarContent,\n  NavbarMenu,\n  NavbarMenuToggle,\n  NavbarItem,\n  NavbarMenuItem,\n  Link,\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\nimport type { Item } from \"@/types/navigation\";\nimport { useResponsive } from \"@/hooks\";\n\nexport type NavbarProps = {\n  appName?: ReactNode;\n  appLogo?: ReactNode;\n  profile?: ReactNode;\n  navigationItems?: Item[];\n  menuItems?: Item[];\n  contentProps?: NavbarContentProps;\n  menuProps?: NavbarMenuProps;\n  onItemClick?: (item: Item) => void;\n  isMenuOpen?: boolean;\n  onMenuOpenChange?: (isOpen: boolean) => void;\n  classNames?: {\n    item?: string;\n  };\n} & Omit<NavbarRootProps, \"children\">;\n\nexport const Navbar = forwardRef<HTMLElement, NavbarProps>(\n  (\n    {\n      appName,\n      appLogo,\n      profile,\n      navigationItems = [],\n      menuItems = [],\n      contentProps,\n      menuProps,\n      onItemClick,\n      className,\n      classNames,\n      isMenuOpen,\n      onMenuOpenChange,\n      ...props\n    },\n    ref,\n  ) => {\n    const { isDesktop, isMobile, isTablet } = useResponsive();\n\n    const handleItemPress = (item: Item): void => {\n      item.onPress?.();\n      onItemClick?.(item);\n      onMenuOpenChange?.(false);\n    };\n\n    return (\n      <NavbarRoot\n        ref={ref}\n        className={className}\n        classNames={{\n          base: \"bg-white dark:bg-background\",\n          wrapper: \"max-w-full\",\n          ...classNames,\n        }}\n        isMenuOpen={isMenuOpen}\n        onMenuOpenChange={onMenuOpenChange}\n        {...props}\n      >\n        {isMobile && (\n          <NavbarContent>\n            <NavbarMenuToggle\n              aria-label={isMenuOpen === true ? \"Close menu\" : \"Open menu\"}\n            />\n          </NavbarContent>\n        )}\n\n        {!isMobile && (appName !== null || appLogo !== null) && (\n          <NavbarContent justify=\"start\">\n            {!isTablet && appName !== null && (\n              <NavbarItem className=\"w-[247px] border-r-2 border-default\">\n                {appName}\n              </NavbarItem>\n            )}\n            {appLogo !== null && <NavbarItem>{appLogo}</NavbarItem>}\n          </NavbarContent>\n        )}\n\n        <NavbarContent justify=\"end\" {...contentProps}>\n          {isDesktop &&\n            navigationItems.map((item) => (\n              <NavbarItem key={item.key}>\n                <Link\n                  className={cn(\n                    \"p-2 hover:bg-content1 rounded-md text-foreground\",\n                    {\n                      \"border-l-2 border-primary bg-content1 text-primary\":\n                        item.isActive,\n                    },\n                    classNames?.item,\n                  )}\n                  onPress={() => handleItemPress(item)}\n                >\n                  {item.startContent}\n                  {item.label}\n                  {item.endContent}\n                </Link>\n              </NavbarItem>\n            ))}\n          {profile !== null && <NavbarItem>{profile}</NavbarItem>}\n        </NavbarContent>\n\n        {/* Mobile Menu */}\n        {!isDesktop && (\n          <NavbarMenu {...menuProps}>\n            {menuItems.map((item) => (\n              <NavbarMenuItem key={item.key}>\n                <Link\n                  key={item.key}\n                  className={cn(\n                    \"flex items-center gap-3 p-3 text-foreground hover:bg-content1 rounded-md cursor-pointer\",\n                    {\n                      \"border-l-2 border-primary bg-content1 text-primary\":\n                        item.isActive,\n                    },\n                    classNames?.item,\n                  )}\n                  onPress={() => onItemClick?.(item)}\n                >\n                  {item.startContent}\n                  {item.label}\n                  {item.endContent}\n                </Link>\n              </NavbarMenuItem>\n            ))}\n          </NavbarMenu>\n        )}\n      </NavbarRoot>\n    );\n  },\n);\n\nNavbar.displayName = \"Navbar\";\n"]}