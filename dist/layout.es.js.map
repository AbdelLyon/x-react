{"version":3,"sources":["../src/layout/Layout.tsx","../src/layout/Scroll.tsx","../src/layout/Center.tsx","../src/layout/Container.tsx","../src/layout/Grid.tsx","../src/layout/Section.tsx","../src/layout/Stack.tsx"],"names":["jsx","forwardRef"],"mappings":"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","file":"layout.es.js","sourcesContent":["export type LayoutProps = {\n  children: React.ReactNode;\n  navbar?: NavbarProps;\n  sidebar?: SidebarProps;\n  className?: string;\n};\n\nimport { useMediaQuery } from \"@/hooks/useMediaQuery\";\nimport type { NavbarProps } from \"@/navbar/Navbar\";\nimport { Navbar } from \"@/navbar/Navbar\";\nimport type { SidebarProps } from \"@/sidebar/Sidebar\";\nimport { Sidebar } from \"@/sidebar/Sidebar\";\n\nimport { cn } from \"@/utils\";\nimport type { JSX } from \"react\";\n\nexport const Layout = ({\n  children,\n  navbar,\n  sidebar,\n  className,\n}: LayoutProps): JSX.Element => {\n  const isDesktop = useMediaQuery(\"(min-width: 1024px)\");\n  const isTablet = useMediaQuery(\"(min-width: 768px) and (max-width: 1023px)\");\n\n  const hasNavbar = Boolean(navbar);\n  const hasSidebar = Boolean(sidebar);\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Navbar */}\n      {hasNavbar && <Navbar {...navbar} />}\n\n      <div className=\"flex\">\n        {hasSidebar && <Sidebar {...sidebar} />}\n\n        <main\n          className={cn(\n            \"flex-1 px-4 transition-all duration-200\",\n            {\n              \"pt-16\": hasNavbar,\n              \"ml-0\": !hasSidebar || (!isTablet && !isDesktop),\n              \"ml-[90px]\": hasSidebar && isTablet,\n              \"ml-[270px]\": hasSidebar && isDesktop,\n              \"px-4 sm:px-6 md:px-8 lg:px-12\": true,\n            },\n            className,\n          )}\n        >\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n","import { forwardRef } from \"react\";\nimport type { ScrollShadowProps } from \"@nextui-org/react\";\nimport { ScrollShadow } from \"@nextui-org/react\";\n\ninterface ScrollProps extends ScrollShadowProps {\n  width?: string | number;\n  height?: string | number;\n}\n\nexport const Scroll = forwardRef<HTMLDivElement, ScrollProps>(\n  ({ width = \"100%\", height = \"100%\", style, ...props }, ref) => {\n    const combinedStyle = {\n      width: typeof width === \"number\" ? `${width}px` : width,\n      height: typeof height === \"number\" ? `${height}px` : height,\n      ...style,\n    };\n\n    return <ScrollShadow ref={ref} style={combinedStyle} {...props} />;\n  },\n);\n\nScroll.displayName = \"Scroll\";\n","// Center.tsx\nimport type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\n\ninterface CenterProps {\n  children: ReactNode;\n  inline?: boolean;\n  className?: string;\n}\n\nexport const Center = forwardRef<HTMLDivElement, CenterProps>(\n  ({ children, inline = false, className }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          inline ? \"inline-flex\" : \"flex\",\n          \"items-center justify-center\",\n          className,\n        )}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n","// src/components/ui/layout/Container.tsx\nimport type { ReactNode, ForwardedRef } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\n\ninterface ContainerProps {\n  children: ReactNode;\n  maxWidth?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"full\";\n  className?: string;\n}\n\nexport const Container = forwardRef(\n  (\n    { children, maxWidth = \"lg\", className }: ContainerProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) => {\n    const containerClasses = cn(\n      \"mx-auto px-4\",\n      {\n        \"max-w-screen-sm\": maxWidth === \"sm\",\n        \"max-w-screen-md\": maxWidth === \"md\",\n        \"max-w-screen-lg\": maxWidth === \"lg\",\n        \"max-w-screen-xl\": maxWidth === \"xl\",\n        \"max-w-screen-2xl\": maxWidth === \"2xl\",\n        \"max-w-full\": maxWidth === \"full\",\n      },\n      className,\n    );\n\n    return (\n      <div ref={ref} className={containerClasses}>\n        {children}\n      </div>\n    );\n  },\n);\n\nContainer.displayName = \"Container\";\n","import type { ReactNode, ForwardedRef } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\n\n// Types pour les donn√©es du tableau\nexport type GridData = {\n  id: string | number;\n  content: ReactNode;\n  colSpan?: {\n    default?: number;\n    sm?: number;\n    md?: number;\n    lg?: number;\n    xl?: number;\n  };\n};\n\ninterface GridProps {\n  children?: ReactNode;\n  data?: GridData[];\n  columns?: {\n    default?: number;\n    sm?: number;\n    md?: number;\n    lg?: number;\n    xl?: number;\n  };\n  gap?: {\n    x?: number;\n    y?: number;\n  };\n  className?: string;\n}\n\nexport const Grid = forwardRef(\n  (\n    {\n      children,\n      data,\n      columns = {\n        default: 1,\n        sm: 2,\n        md: 3,\n        lg: 4,\n        xl: 4,\n      },\n      gap = {\n        x: 4,\n        y: 4,\n      },\n      className,\n    }: GridProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) => {\n    const gridClasses = cn(\n      \"grid\",\n      `grid-cols-${columns.default}`,\n      columns.sm !== undefined && `sm:grid-cols-${columns.sm}`,\n      columns.md !== undefined && `md:grid-cols-${columns.md}`,\n      columns.lg !== undefined && `lg:grid-cols-${columns.lg}`,\n      columns.xl !== undefined && `xl:grid-cols-${columns.xl}`,\n      gap.x !== undefined && `gap-x-${gap.x}`,\n      gap.y !== undefined && `gap-y-${gap.y}`,\n      className,\n    );\n\n    return (\n      <div ref={ref} className={gridClasses}>\n        {data\n          ? data.map((item) => (\n              <GridItem key={item.id} colSpan={item.colSpan}>\n                {item.content}\n              </GridItem>\n            ))\n          : children}\n      </div>\n    );\n  },\n);\n\nGrid.displayName = \"Grid\";\n\ninterface GridItemProps {\n  children: ReactNode;\n  colSpan?: {\n    default?: number;\n    sm?: number;\n    md?: number;\n    lg?: number;\n    xl?: number;\n  };\n  className?: string;\n}\n\nexport const GridItem = forwardRef(\n  (\n    { children, colSpan, className }: GridItemProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) => {\n    const itemClasses = cn(\n      colSpan?.default !== undefined && `col-span-${colSpan.default}`,\n      colSpan?.sm !== undefined && `sm:col-span-${colSpan.sm}`,\n      colSpan?.md !== undefined && `md:col-span-${colSpan.md}`,\n      colSpan?.lg !== undefined && `lg:col-span-${colSpan.lg}`,\n      colSpan?.xl !== undefined && `xl:col-span-${colSpan.xl}`,\n      className,\n    );\n\n    return (\n      <div ref={ref} className={itemClasses}>\n        {children}\n      </div>\n    );\n  },\n);\n\nGridItem.displayName = \"GridItem\";\n","// src/components/ui/layout/Section.tsx\nimport type { ReactNode, ForwardedRef } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\n\ninterface SectionProps {\n  children: ReactNode;\n  className?: string;\n  spacing?: \"sm\" | \"md\" | \"lg\" | \"xl\";\n}\n\nexport const Section = forwardRef(\n  (\n    { children, spacing = \"md\", className }: SectionProps,\n    ref: ForwardedRef<HTMLElement>,\n  ) => {\n    const sectionClasses = cn(\n      {\n        \"py-4\": spacing === \"sm\",\n        \"py-8\": spacing === \"md\",\n        \"py-12\": spacing === \"lg\",\n        \"py-16\": spacing === \"xl\",\n      },\n      className,\n    );\n\n    return (\n      <section ref={ref} className={sectionClasses}>\n        {children}\n      </section>\n    );\n  },\n);\n\nSection.displayName = \"Section\";\n","// Stack.tsx\nimport type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\n\ninterface StackProps {\n  children: ReactNode;\n  spacing?: number;\n  align?: \"start\" | \"center\" | \"end\";\n  justify?: \"start\" | \"center\" | \"end\" | \"between\";\n  className?: string;\n}\n\nexport const Stack = forwardRef<HTMLDivElement, StackProps>(\n  (\n    { children, spacing = 4, align = \"start\", justify = \"start\", className },\n    ref,\n  ) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex flex-col\",\n          `gap-${spacing}`,\n          {\n            \"items-start\": align === \"start\",\n            \"items-center\": align === \"center\",\n            \"items-end\": align === \"end\",\n            \"justify-start\": justify === \"start\",\n            \"justify-center\": justify === \"center\",\n            \"justify-end\": justify === \"end\",\n            \"justify-between\": justify === \"between\",\n          },\n          className,\n        )}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n"]}