{"version":3,"file":"index.js","sources":["../../../src/form/Input.tsx"],"sourcesContent":["import { forwardRef, useState } from \"react\";\nimport type { InputProps as InputRootProps } from \"@nextui-org/react\";\nimport { Input as InputRoot } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\nimport { IconEye, IconEyeOff } from \"@tabler/icons-react\";\n\ntype ValidationError = string | string[];\n\ntype InputProps = InputRootProps & {\n  containerClasses?: string;\n  customValidation?: (value: string) => boolean | string;\n};\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isClearable = false,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      customValidation,\n      validate,\n      type,\n      ...props\n    },\n    ref,\n  ) => {\n    const [inputType, setInputType] = useState(type);\n\n    const combinedValidate = (\n      value: string,\n    ): ValidationError | true | null | undefined => {\n      if (customValidation) {\n        const customResult = customValidation(value);\n        if (typeof customResult === \"string\") {\n          return customResult;\n        }\n        if (customResult) {\n          return \"Validation failed\";\n        }\n      }\n      return validate?.(value) ?? true;\n    };\n\n    const endContent =\n      type === \"password\" ? (\n        <button\n          className=\"opacity-40 focus:outline-none\"\n          type=\"button\"\n          onClick={() =>\n            setInputType(inputType === \"password\" ? \"text\" : \"password\")\n          }\n        >\n          {inputType === \"password\" ? (\n            <IconEye className=\"pointer-events-none\" />\n          ) : (\n            <IconEyeOff className=\"pointer-events-none\" />\n          )}\n        </button>\n      ) : undefined;\n\n    const { classNames: propClassNames, ...restProps } = props;\n\n    const getVariantStyles = (): string => {\n      switch (variant) {\n        case \"bordered\":\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"group-data-[focus=true]:bg-content1\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"flat\":\n          return [\n            \"border-none\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:bg-default-100\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"faded\":\n          return [\n            \"border-1\",\n            \"border-transparent\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"underlined\":\n          return [\n            \"relative\",\n            \"border-b-1\",\n            \"rounded-none\",\n            \"bg-transparent\",\n            \"border-default\",\n            \"h-12\",\n            // Underline effect\n\n            \"after:bg-outline\",\n            // Hover\n            \"data-[hover=true]:after:scale-x-100\",\n            \"data-[hover=true]:after:bg-outline\",\n            // Focus\n            \"group-data-[focus=true]:after:scale-x-100\",\n            \"group-data-[focus=true]:after:bg-outline\",\n          ].join(\" \");\n\n        default:\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n      }\n    };\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <InputRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isClearable={isClearable}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          validate={combinedValidate}\n          classNames={{\n            ...propClassNames,\n            inputWrapper: cn(getVariantStyles(), propClassNames?.inputWrapper),\n          }}\n          endContent={endContent}\n          type={inputType}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nInput.displayName = \"Input\";\n"],"names":["Input","forwardRef","variant","color","size","radius","labelPlacement","fullWidth","isClearable","isRequired","isReadOnly","isDisabled","containerClasses","customValidation","validate","type","props","ref","inputType","setInputType","useState","combinedValidate","value","customResult","endContent","jsx","IconEye","IconEyeOff","propClassNames","restProps","getVariantStyles","cn","InputRoot"],"mappings":"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"}