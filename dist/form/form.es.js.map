{"version":3,"file":"form.es.js","sources":["../../src/form/Radio.tsx","../../src/form/Checkbox.tsx","../../src/form/InputOpt.tsx","../../src/form/Input.tsx","../../src/form/Textarea.tsx","../../src/form/Switch.tsx","../../src/form/Select.tsx","../../src/hooks/useInfiniteList.ts","../../src/form/InfiniteSelect.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport type {\n  RadioGroupProps,\n  RadioProps} from \"@nextui-org/react\";\nimport {\n  RadioGroup as RadioGroupRoot,\n  Radio\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype RadioItemProps = {\n  label?: React.ReactNode;\n} & Omit<RadioProps, \"children\">\n\ntype RadioWrapperProps = {\n  items: RadioItemProps[];\n  groupClasses?: {\n    base?: string;\n    label?: string;\n  };\n  itemClasses?: {\n    base?: string;\n    label?: string;\n    wrapper?: string;\n    control?: string;\n  };\n} & Omit<RadioGroupProps, \"children\">\n\nexport const RadioGroup = forwardRef<HTMLDivElement, RadioWrapperProps>(\n  (\n    {\n      items,\n      groupClasses,\n      itemClasses,\n      label = \"Select an option\",\n      defaultValue,\n      ...props\n    },\n    ref,\n  ) => {\n    const defaultGroupClasses = {\n      base: \"w-full\",\n      label: \"text-medium font-semibold\",\n    };\n\n    const defaultItemClasses = {\n      base: \"w-full\",\n      label: \"text-small\",\n      wrapper: \"\",\n      control: \"\",\n    };\n\n    return (\n      <RadioGroupRoot\n        ref={ref}\n        label={label}\n        defaultValue={defaultValue}\n        {...props}\n        classNames={{\n          base: cn(defaultGroupClasses.base, groupClasses?.base),\n          label: cn(defaultGroupClasses.label, groupClasses?.label),\n        }}\n      >\n        {items.map((item) => (\n          <Radio\n            key={item.value}\n            {...item}\n            classNames={{\n              base: cn(\n                defaultItemClasses.base,\n                itemClasses?.base,\n                item.className,\n              ),\n              label: cn(\n                defaultItemClasses.label,\n                itemClasses?.label,\n                item.classNames?.label,\n              ),\n              wrapper: cn(\n                defaultItemClasses.wrapper,\n                itemClasses?.wrapper,\n                item.classNames?.wrapper,\n              ),\n              control: cn(\n                defaultItemClasses.control,\n                itemClasses?.control,\n                item.classNames?.control,\n              ),\n            }}\n          >\n            {item.label}\n          </Radio>\n        ))}\n      </RadioGroupRoot>\n    );\n  },\n);\n\nRadioGroup.displayName = \"RadioGroup\";\n","import { forwardRef } from \"react\";\nimport type { CheckboxGroupProps, CheckboxProps } from \"@nextui-org/react\";\nimport {\n  CheckboxGroup as CheckboxGroupRoot,\n  Checkbox,\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype CheckboxItemProps = {\n  label?: React.ReactNode;\n} & Omit<CheckboxProps, \"children\">;\n\ntype CheckboxWrapperProps = {\n  items: CheckboxItemProps[];\n  groupClasses?: {\n    base?: string;\n    label?: string;\n  };\n  itemClasses?: {\n    base?: string;\n    label?: string;\n    wrapper?: string;\n  };\n} & Omit<CheckboxGroupProps, \"children\">;\n\nconst CheckboxGroup = forwardRef<HTMLDivElement, CheckboxWrapperProps>(\n  (\n    {\n      items,\n      groupClasses,\n      itemClasses,\n      label = \"Select options\",\n      defaultValue,\n      ...props\n    },\n    ref,\n  ) => {\n    const defaultGroupClasses = {\n      base: \"w-full\",\n      label: \"text-medium font-semibold\",\n    };\n\n    const defaultItemClasses = {\n      base: \"w-full\",\n      label: \"text-small\",\n      wrapper: \"\",\n    };\n\n    return (\n      <CheckboxGroupRoot\n        ref={ref}\n        label={label}\n        defaultValue={defaultValue}\n        {...props}\n        classNames={{\n          base: cn(defaultGroupClasses.base, groupClasses?.base),\n          label: cn(defaultGroupClasses.label, groupClasses?.label),\n        }}\n      >\n        {items.map((item) => (\n          <Checkbox\n            key={item.value}\n            {...item}\n            classNames={{\n              base: cn(\n                defaultItemClasses.base,\n                itemClasses?.base,\n                item.className,\n              ),\n              label: cn(\n                defaultItemClasses.label,\n                itemClasses?.label,\n                item.classNames?.label,\n              ),\n              wrapper: cn(\n                defaultItemClasses.wrapper,\n                itemClasses?.wrapper,\n                item.classNames?.wrapper,\n              ),\n            }}\n          >\n            {item.label}\n          </Checkbox>\n        ))}\n      </CheckboxGroupRoot>\n    );\n  },\n);\n\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\nexport { Checkbox, CheckboxGroup };\n","import { forwardRef } from \"react\";\nimport type { InputOtpProps } from \"@nextui-org/react\";\nimport { InputOtp as NextUIInputOtp } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype InputOtpWrapperProps = {\n  length?: number;\n  label?: string;\n  labelClasses?: string;\n  containerClasses?: string;\n} & Omit<InputOtpProps, \"length\">\n\nexport const InputOtp = forwardRef<HTMLDivElement, InputOtpWrapperProps>(\n  (\n    {\n      length = 6,\n      label = `${length} digits OTP`,\n      labelClasses,\n      containerClasses,\n      ...props\n    },\n    ref,\n  ) => {\n    const defaultLabelClasses = \"text-default-500 text-small mb-2\";\n    const defaultContainerClasses = \"flex flex-col\";\n\n    return (\n      <div ref={ref} className={cn(defaultContainerClasses, containerClasses)}>\n        {label && (\n          <p className={cn(defaultLabelClasses, labelClasses)}>{label}</p>\n        )}\n        <NextUIInputOtp length={length} {...props} />\n      </div>\n    );\n  },\n);\n\nInputOtp.displayName = \"InputOtp\";\n","import { forwardRef, useState } from \"react\";\nimport type { InputProps as InputRootProps } from \"@nextui-org/react\";\nimport { Input as InputRoot } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\nimport { IconEye, IconEyeOff } from \"@tabler/icons-react\";\n\ntype ValidationError = string | string[];\n\ntype InputProps = InputRootProps & {\n  containerClasses?: string;\n  customValidation?: (value: string) => boolean | string;\n};\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isClearable = false,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      customValidation,\n      validate,\n      type,\n      ...props\n    },\n    ref,\n  ) => {\n    const [inputType, setInputType] = useState(type);\n\n    const combinedValidate = (\n      value: string,\n    ): ValidationError | true | null | undefined => {\n      if (customValidation) {\n        const customResult = customValidation(value);\n        if (typeof customResult === \"string\") {\n          return customResult;\n        }\n        if (customResult) {\n          return \"Validation failed\";\n        }\n      }\n      return validate?.(value) ?? true;\n    };\n\n    const endContent =\n      type === \"password\" ? (\n        <button\n          className=\"opacity-40 focus:outline-none\"\n          type=\"button\"\n          onClick={() =>\n            setInputType(inputType === \"password\" ? \"text\" : \"password\")\n          }\n        >\n          {inputType === \"password\" ? (\n            <IconEye className=\"pointer-events-none\" />\n          ) : (\n            <IconEyeOff className=\"pointer-events-none\" />\n          )}\n        </button>\n      ) : undefined;\n\n    const { classNames: propClassNames, ...restProps } = props;\n\n    const getVariantStyles = (): string => {\n      switch (variant) {\n        case \"bordered\":\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"group-data-[focus=true]:bg-content1\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"flat\":\n          return [\n            \"border-none\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:bg-default-100\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"faded\":\n          return [\n            \"border-1\",\n            \"border-transparent\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"underlined\":\n          return [\n            \"relative\",\n            \"border-b-1\",\n            \"rounded-none\",\n            \"bg-transparent\",\n            \"border-default\",\n            \"h-12\",\n            // Underline effect\n\n            \"after:bg-outline\",\n            // Hover\n            \"data-[hover=true]:after:scale-x-100\",\n            \"data-[hover=true]:after:bg-outline\",\n            // Focus\n            \"group-data-[focus=true]:after:scale-x-100\",\n            \"group-data-[focus=true]:after:bg-outline\",\n          ].join(\" \");\n\n        default:\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n      }\n    };\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <InputRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isClearable={isClearable}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          validate={combinedValidate}\n          classNames={{\n            ...propClassNames,\n            inputWrapper: cn(getVariantStyles(), propClassNames?.inputWrapper),\n          }}\n          endContent={endContent}\n          type={inputType}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nInput.displayName = \"Input\";\n","import { forwardRef } from \"react\";\nimport type { TextAreaProps as TextAreaRootProps } from \"@nextui-org/react\";\nimport { Textarea as TextareaRoot } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype ValidationError = string | string[];\n\ntype TextareaProps = TextAreaRootProps & {\n  containerClasses?: string;\n  width?: string | number;\n  height?: string | number;\n  customValidation?: (value: string) => boolean | string;\n};\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      width,\n      height,\n      style,\n      customValidation,\n      validate,\n      ...props\n    },\n    ref,\n  ) => {\n    const combinedStyle = {\n      width: typeof width === \"number\" ? `${width}px` : width,\n      height: typeof height === \"number\" ? `${height}px` : height,\n      ...style,\n    };\n\n    const combinedValidate = (\n      value: string,\n    ): ValidationError | true | null | undefined => {\n      if (customValidation) {\n        const customResult = customValidation(value);\n        if (typeof customResult === \"string\") {\n          return customResult;\n        }\n        if (customResult === false) {\n          return \"Validation failed\";\n        }\n      }\n      return validate?.(value) ?? true;\n    };\n\n    const { classNames: propClassNames, ...restProps } = props;\n\n    const getVariantStyles = (): string => {\n      switch (variant) {\n        case \"bordered\":\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"group-data-[focus=true]:bg-content1\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"flat\":\n          return [\n            \"border-none\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:bg-default-100\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"faded\":\n          return [\n            \"border-1\",\n            \"border-transparent\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"underlined\":\n          return [\n            \"relative\",\n            \"border-b-1\",\n            \"rounded-none\",\n            \"bg-transparent\",\n            \"border-default\",\n            // Underline effect\n            \"after:bg-outline\",\n            // Hover\n            \"data-[hover=true]:after:scale-x-100\",\n            \"data-[hover=true]:after:bg-outline\",\n            // Focus\n            \"group-data-[focus=true]:after:scale-x-100\",\n            \"group-data-[focus=true]:after:bg-outline\",\n          ].join(\" \");\n\n        default:\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n      }\n    };\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <TextareaRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          validate={combinedValidate}\n          style={combinedStyle}\n          classNames={{\n            ...propClassNames,\n            inputWrapper: cn(getVariantStyles(), propClassNames?.inputWrapper),\n            input: cn(\"text-base\", propClassNames?.input),\n          }}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nTextarea.displayName = \"Textarea\";\n","import { forwardRef } from \"react\";\nimport type {\n  SwitchProps as SwitchRootProp} from \"@nextui-org/react\";\nimport {\n  Switch as NextUISwitch\n} from \"@nextui-org/react\";\n\ntype SwitchProps = {\n  width?: string | number;\n  height?: string | number;\n} & SwitchRootProp\n\nexport const Switch = forwardRef<HTMLInputElement, SwitchProps>(\n  ({ width, height, style, ...props }, ref) => {\n    const combinedStyle = {\n      width: typeof width === \"number\" ? `${width}px` : width,\n      height: typeof height === \"number\" ? `${height}px` : height,\n      ...style,\n    };\n\n    return <NextUISwitch ref={ref} style={combinedStyle} {...props} />;\n  },\n);\n\nSwitch.displayName = \"Switch\";\n","import { forwardRef } from \"react\";\nimport type {\n  SelectProps as NextUISelectProps,\n  Selection,\n} from \"@nextui-org/react\";\nimport { Select as NextUISelect, SelectItem } from \"@nextui-org/react\";\n\nexport interface SelectOption {\n  key: string;\n  label: string;\n  description?: string;\n  icon?: React.ReactNode;\n}\n\ninterface SelectProps\n  extends Omit<NextUISelectProps, \"children\" | \"value\" | \"onSelectionChange\"> {\n  options: SelectOption[];\n  value?: Selection;\n  defaultValue?: Selection;\n  onSelectionChange?: (key: Selection) => void;\n}\n\nexport const Select = forwardRef<HTMLSelectElement, SelectProps>(\n  (\n    {\n      // Options\n      options = [],\n      value,\n      defaultValue,\n      classNames,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <NextUISelect\n        ref={ref}\n        classNames={{\n          base: \"max-w-xs\",\n          trigger: \"h-10\",\n          value: \"text-small\",\n          ...classNames,\n        }}\n        selectedKeys={value}\n        defaultSelectedKeys={defaultValue}\n        {...props}\n      >\n        {options.map((option) => (\n          <SelectItem\n            key={option.key}\n            description={option.description}\n            startContent={option.icon}\n            className=\"text-small\"\n          >\n            {option.label}\n          </SelectItem>\n        ))}\n      </NextUISelect>\n    );\n  },\n);\n\nSelect.displayName = \"Select\";\n","import { useEffect, useState } from \"react\";\n\nexport type FetchFunctionReturn<T> = {\n  items: T[];\n  hasMore: boolean;\n};\n\nexport type FetchFunction<T> = (\n  offset: number,\n  limit: number,\n) => Promise<FetchFunctionReturn<T>>;\n\nexport interface UseInfiniteListProps<T> {\n  fetchFunction: FetchFunction<T>;\n  fetchDelay?: number;\n  limit?: number;\n}\n\nexport interface UseInfiniteListReturn<T> {\n  items: T[];\n  hasMore: boolean;\n  isLoading: boolean;\n  onLoadMore: () => void;\n}\n\nexport function useInfiniteList<T>({\n  fetchFunction,\n  fetchDelay = 0,\n  limit = 10,\n}: UseInfiniteListProps<T>): UseInfiniteListReturn<T> {\n  const [items, setItems] = useState<T[]>([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n\n  const loadItems = async (currentOffset: number): Promise<void> => {\n    try {\n      setIsLoading(true);\n      if (offset > 0) {\n        await new Promise((resolve) => setTimeout(resolve, fetchDelay));\n      }\n\n      const { items: newItems, hasMore: moreAvailable } = await fetchFunction(\n        currentOffset,\n        limit,\n      );\n\n      setHasMore(moreAvailable);\n      setItems((prevItems) => [...prevItems, ...newItems]);\n    } catch (error) {\n      console.error(\"There was an error with the fetch operation:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    void loadItems(offset);\n  }, []);\n\n  const onLoadMore = (): void => {\n    const newOffset = offset + limit;\n    setOffset(newOffset);\n    void loadItems(newOffset);\n  };\n\n  return {\n    items,\n    hasMore,\n    isLoading,\n    onLoadMore,\n  };\n}\n","import { useInfiniteScroll } from \"@/hooks\";\nimport { useInfiniteList } from \"@/hooks/useInfiniteList\";\nimport { Select, SelectItem } from \"@nextui-org/react\";\nimport type { JSX } from \"react\";\nimport { useState } from \"react\";\n\ninterface InfiniteSelectProps<T> {\n  fetchFunction: (\n    offset: number,\n    limit: number,\n  ) => Promise<{\n    items: T[];\n    hasMore: boolean;\n  }>;\n  fetchDelay?: number;\n  limit?: number;\n  className?: string;\n  renderItem: (item: T) => React.ReactNode;\n  getItemKey: (item: T) => string | number;\n  selectionMode?: \"single\" | \"multiple\";\n}\n\nexport function InfiniteSelect<T extends object>({\n  fetchFunction,\n  fetchDelay = 0,\n  limit = 10,\n  className = \"max-w-xs\",\n  renderItem,\n  getItemKey,\n  selectionMode = \"single\",\n}: InfiniteSelectProps<T>): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { items, hasMore, isLoading, onLoadMore } = useInfiniteList({\n    fetchFunction,\n    fetchDelay,\n    limit,\n  });\n\n  const [, scrollerRef] = useInfiniteScroll({\n    hasMore,\n    isEnabled: isOpen,\n    shouldUseLoader: false,\n    onLoadMore,\n  });\n\n  return (\n    <Select\n      className={className}\n      isLoading={isLoading}\n      items={items}\n      scrollRef={scrollerRef}\n      selectionMode={selectionMode}\n      onOpenChange={setIsOpen}\n    >\n      {(item: T) => (\n        <SelectItem key={getItemKey(item)}>{renderItem(item)}</SelectItem>\n      )}\n    </Select>\n  );\n}\n"],"names":["RadioGroupRoot","_a","_b","CheckboxGroupRoot","NextUIInputOtp","InputRoot","TextareaRoot","NextUISwitch","NextUISelect","Select"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BO,MAAM,aAAa;AAAA,EACxB,CACE,IAQA,QACG;AATH,iBACE;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,QALF,IAMK,kBANL,IAMK;AAAA,MALH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAKF,UAAM,sBAAsB;AAAA,MAC1B,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAEA,UAAM,qBAAqB;AAAA,MACzB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,IACX;AAGE,WAAA;AAAA,MAACA;AAAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,SACI,QAJL;AAAA,QAKC,YAAY;AAAA,UACV,MAAM,GAAG,oBAAoB,MAAM,6CAAc,IAAI;AAAA,UACrD,OAAO,GAAG,oBAAoB,OAAO,6CAAc,KAAK;AAAA,QAC1D;AAAA,QAEC,UAAA,MAAM,IAAI,CAAC,SACV;;AAAA;AAAA,YAAC;AAAA,YAAA,iCAEK,OAFL;AAAA,cAGC,YAAY;AAAA,gBACV,MAAM;AAAA,kBACJ,mBAAmB;AAAA,kBACnB,2CAAa;AAAA,kBACb,KAAK;AAAA,gBACP;AAAA,gBACA,OAAO;AAAA,kBACL,mBAAmB;AAAA,kBACnB,2CAAa;AAAA,mBACbC,MAAA,KAAK,eAAL,gBAAAA,IAAiB;AAAA,gBACnB;AAAA,gBACA,SAAS;AAAA,kBACP,mBAAmB;AAAA,kBACnB,2CAAa;AAAA,mBACbC,MAAA,KAAK,eAAL,gBAAAA,IAAiB;AAAA,gBACnB;AAAA,gBACA,SAAS;AAAA,kBACP,mBAAmB;AAAA,kBACnB,2CAAa;AAAA,mBACb,UAAK,eAAL,mBAAiB;AAAA,gBAAA;AAAA,cAErB;AAAA,cAEC,UAAK,KAAA;AAAA,YAAA;AAAA,YAzBD,KAAK;AAAA,UA2Bb;AAAA,SAAA;AAAA,MAAA;AAAA,IACH;AAAA,EAAA;AAGN;AAEA,WAAW,cAAc;ACzEzB,MAAM,gBAAgB;AAAA,EACpB,CACE,IAQA,QACG;AATH,iBACE;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,QALF,IAMK,kBANL,IAMK;AAAA,MALH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAKF,UAAM,sBAAsB;AAAA,MAC1B,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAEA,UAAM,qBAAqB;AAAA,MACzB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAGE,WAAA;AAAA,MAACC;AAAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,SACI,QAJL;AAAA,QAKC,YAAY;AAAA,UACV,MAAM,GAAG,oBAAoB,MAAM,6CAAc,IAAI;AAAA,UACrD,OAAO,GAAG,oBAAoB,OAAO,6CAAc,KAAK;AAAA,QAC1D;AAAA,QAEC,UAAA,MAAM,IAAI,CAAC,SACV;;AAAA;AAAA,YAAC;AAAA,YAAA,iCAEK,OAFL;AAAA,cAGC,YAAY;AAAA,gBACV,MAAM;AAAA,kBACJ,mBAAmB;AAAA,kBACnB,2CAAa;AAAA,kBACb,KAAK;AAAA,gBACP;AAAA,gBACA,OAAO;AAAA,kBACL,mBAAmB;AAAA,kBACnB,2CAAa;AAAA,mBACb,UAAK,eAAL,mBAAiB;AAAA,gBACnB;AAAA,gBACA,SAAS;AAAA,kBACP,mBAAmB;AAAA,kBACnB,2CAAa;AAAA,mBACb,UAAK,eAAL,mBAAiB;AAAA,gBAAA;AAAA,cAErB;AAAA,cAEC,UAAK,KAAA;AAAA,YAAA;AAAA,YApBD,KAAK;AAAA,UAsBb;AAAA,SAAA;AAAA,MAAA;AAAA,IACH;AAAA,EAAA;AAGN;AAEA,cAAc,cAAc;AC7ErB,MAAM,WAAW;AAAA,EACtB,CACE,IAOA,QACG;AARH,iBACE;AAAA,eAAS;AAAA,MACT,QAAQ,GAAG,MAAM;AAAA,MACjB;AAAA,MACA;AAAA,QAJF,IAKK,kBALL,IAKK;AAAA,MAJH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAKF,UAAM,sBAAsB;AAC5B,UAAM,0BAA0B;AAEhC,gCACG,OAAI,EAAA,KAAU,WAAW,GAAG,yBAAyB,gBAAgB,GACnE,UAAA;AAAA,MAAA,6BACE,KAAE,EAAA,WAAW,GAAG,qBAAqB,YAAY,GAAI,UAAM,OAAA;AAAA,MAE7D,oBAAAC,YAAA,iBAAe,UAAoB,MAAO;AAAA,IAAA,GAC7C;AAAA,EAAA;AAGN;AAEA,SAAS,cAAc;ACxBhB,MAAM,QAAQ;AAAA,EACnB,CACE,IAiBA,QACG;AAlBH,iBACE;AAAA,gBAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QAdF,IAeK,kBAfL,IAeK;AAAA,MAdH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAKF,UAAM,CAAC,WAAW,YAAY,IAAI,SAAS,IAAI;AAEzC,UAAA,mBAAmB,CACvB,UAC8C;;AAC9C,UAAI,kBAAkB;AACd,cAAA,eAAe,iBAAiB,KAAK;AACvC,YAAA,OAAO,iBAAiB,UAAU;AAC7B,iBAAA;AAAA,QAAA;AAET,YAAI,cAAc;AACT,iBAAA;AAAA,QAAA;AAAA,MACT;AAEK,cAAAH,MAAA,qCAAW,WAAX,OAAAA,MAAqB;AAAA,IAC9B;AAEM,UAAA,aACJ,SAAS,aACP;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAU;AAAA,QACV,MAAK;AAAA,QACL,SAAS,MACP,aAAa,cAAc,aAAa,SAAS,UAAU;AAAA,QAG5D,UAAA,cAAc,aACb,oBAAC,SAAQ,EAAA,WAAU,uBAAsB,IAEzC,oBAAC,YAAW,EAAA,WAAU,sBAAsB,CAAA;AAAA,MAAA;AAAA,IAG9C,IAAA;AAEN,UAAqD,YAA7C,cAAY,mBAAiC,IAAd,sBAAc,IAAd,CAA/B;AAER,UAAM,mBAAmB,MAAc;AACrC,cAAQ,SAAS;AAAA,QACf,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAEZ,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAEZ,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAEZ,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,YAGA;AAAA;AAAA,YAEA;AAAA,YACA;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAEZ;AACS,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,MAAA;AAAA,IAEhB;AAEA,+BACG,OAAI,EAAA,WAAW,GAAG,UAAU,gBAAgB,GAC3C,UAAA;AAAA,MAACI;AAAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,YAAY,iCACP,iBADO;AAAA,UAEV,cAAc,GAAG,iBAAiB,GAAG,iDAAgB,YAAY;AAAA,QACnE;AAAA,QACA;AAAA,QACA,MAAM;AAAA,SACF;AAAA,IAAA,GAER;AAAA,EAAA;AAGN;AAEA,MAAM,cAAc;ACrJb,MAAM,WAAW;AAAA,EACtB,CACE,IAkBA,QACG;AAnBH,iBACE;AAAA,gBAAU;AAAA,MACV,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,aAAa;AAAA,MACb,aAAa;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QAfF,IAgBK,kBAhBL,IAgBK;AAAA,MAfH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAKF,UAAM,gBAAgB;AAAA,MACpB,OAAO,OAAO,UAAU,WAAW,GAAG,KAAK,OAAO;AAAA,MAClD,QAAQ,OAAO,WAAW,WAAW,GAAG,MAAM,OAAO;AAAA,OAClD;AAGC,UAAA,mBAAmB,CACvB,UAC8C;;AAC9C,UAAI,kBAAkB;AACd,cAAA,eAAe,iBAAiB,KAAK;AACvC,YAAA,OAAO,iBAAiB,UAAU;AAC7B,iBAAA;AAAA,QAAA;AAET,YAAI,iBAAiB,OAAO;AACnB,iBAAA;AAAA,QAAA;AAAA,MACT;AAEK,cAAAJ,MAAA,qCAAW,WAAX,OAAAA,MAAqB;AAAA,IAC9B;AAEA,UAAqD,YAA7C,cAAY,mBAAiC,IAAd,sBAAc,IAAd,CAA/B;AAER,UAAM,mBAAmB,MAAc;AACrC,cAAQ,SAAS;AAAA,QACf,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAEZ,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAEZ,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAEZ,KAAK;AACI,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,YAEA;AAAA;AAAA,YAEA;AAAA,YACA;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,QAEZ;AACS,iBAAA;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,EACA,KAAK,GAAG;AAAA,MAAA;AAAA,IAEhB;AAEA,+BACG,OAAI,EAAA,WAAW,GAAG,UAAU,gBAAgB,GAC3C,UAAA;AAAA,MAACK;AAAAA,MAAA;AAAA,QACC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,OAAO;AAAA,QACP,YAAY,iCACP,iBADO;AAAA,UAEV,cAAc,GAAG,oBAAoB,iDAAgB,YAAY;AAAA,UACjE,OAAO,GAAG,aAAa,iDAAgB,KAAK;AAAA,QAC9C;AAAA,SACI;AAAA,IAAA,GAER;AAAA,EAAA;AAGN;AAEA,SAAS,cAAc;ACzIhB,MAAM,SAAS;AAAA,EACpB,CAAC,IAAoC,QAAQ;AAA5C,iBAAE,SAAO,QAAQ,UAAjB,IAA2B,kBAA3B,IAA2B,CAAzB,SAAO,UAAQ;AAChB,UAAM,gBAAgB;AAAA,MACpB,OAAO,OAAO,UAAU,WAAW,GAAG,KAAK,OAAO;AAAA,MAClD,QAAQ,OAAO,WAAW,WAAW,GAAG,MAAM,OAAO;AAAA,OAClD;AAGL,+BAAQC,UAAa,iBAAA,KAAU,OAAO,iBAAmB,MAAO;AAAA,EAAA;AAEpE;AAEA,OAAO,cAAc;ACFd,MAAM,SAAS;AAAA,EACpB,CACE,IAQA,QACG;AATH,iBAEE;AAAA,yBAAU,CAAC;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,QALF,IAMK,kBANL,IAMK;AAAA;AAAA,MAJH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAMA,WAAA;AAAA,MAACC;AAAAA,MAAA;AAAA,QACC;AAAA,QACA,YAAY;AAAA,UACV,MAAM;AAAA,UACN,SAAS;AAAA,UACT,OAAO;AAAA,WACJ;AAAA,QAEL,cAAc;AAAA,QACd,qBAAqB;AAAA,SACjB,QAVL;AAAA,QAYE,UAAA,QAAQ,IAAI,CAAC,WACZ;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,aAAa,OAAO;AAAA,YACpB,cAAc,OAAO;AAAA,YACrB,WAAU;AAAA,YAET,UAAO,OAAA;AAAA,UAAA;AAAA,UALH,OAAO;AAAA,QAOf,CAAA;AAAA,MAAA;AAAA,IACH;AAAA,EAAA;AAGN;AAEA,OAAO,cAAc;ACrCd,SAAS,gBAAmB;AAAA,EACjC;AAAA,EACA,aAAa;AAAA,EACb,QAAQ;AACV,GAAsD;AACpD,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAc,CAAA,CAAE;AAC1C,QAAM,CAAC,SAAS,UAAU,IAAI,SAAS,IAAI;AAC3C,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,KAAK;AAChD,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAS,CAAC;AAEhC,QAAA,YAAY,CAAO,kBAAyC;AAC5D,QAAA;AACF,mBAAa,IAAI;AACjB,UAAI,SAAS,GAAG;AACd,cAAM,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,UAAU,CAAC;AAAA,MAAA;AAGhE,YAAM,EAAE,OAAO,UAAU,SAAS,cAAA,IAAkB,MAAM;AAAA,QACxD;AAAA,QACA;AAAA,MACF;AAEA,iBAAW,aAAa;AACxB,eAAS,CAAC,cAAc,CAAC,GAAG,WAAW,GAAG,QAAQ,CAAC;AAAA,aAC5C,OAAO;AACN,cAAA,MAAM,gDAAgD,KAAK;AAAA,IAAA,UACnE;AACA,mBAAa,KAAK;AAAA,IAAA;AAAA,EAEtB;AAEA,YAAU,MAAM;AACd,SAAK,UAAU,MAAM;AAAA,EACvB,GAAG,EAAE;AAEL,QAAM,aAAa,MAAY;AAC7B,UAAM,YAAY,SAAS;AAC3B,cAAU,SAAS;AACnB,SAAK,UAAU,SAAS;AAAA,EAC1B;AAEO,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AClDO,SAAS,eAAiC;AAAA,EAC/C;AAAA,EACA,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA,gBAAgB;AAClB,GAAwC;AACtC,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAS,KAAK;AAE1C,QAAM,EAAE,OAAO,SAAS,WAAW,WAAA,IAAe,gBAAgB;AAAA,IAChE;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AAED,QAAM,CAAG,EAAA,WAAW,IAAI,kBAAkB;AAAA,IACxC;AAAA,IACA,WAAW;AAAA,IACX,iBAAiB;AAAA,IACjB;AAAA,EAAA,CACD;AAGC,SAAA;AAAA,IAACC;AAAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,WAAW;AAAA,MACX;AAAA,MACA,cAAc;AAAA,MAEb,UAAA,CAAC,SACC,oBAAA,YAAA,EAAmC,qBAAW,IAAI,KAAlC,WAAW,IAAI,CAAqB;AAAA,IAAA;AAAA,EAEzD;AAEJ;"}