{"version":3,"sources":["../src/drawer/Drawer.tsx"],"names":["DrawerRoot"],"mappings":"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","file":"drawer.es.js","sourcesContent":["import type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport {\n  Drawer as DrawerRoot,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  DrawerFooter,\n  useDisclosure,\n  type DrawerProps as DrawerRootProps,\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\nimport { Button, type ButtonProps } from \"@/button\";\n\ninterface DrawerClassNames {\n  wrapper?: string;\n  base?: string;\n  backdrop?: string;\n  closeButton?: string;\n  header?: string;\n  body?: string;\n  footer?: string;\n}\n\ninterface AdditionalDrawerProps {\n  trigger: ReactNode;\n  title?: ReactNode;\n  children: ReactNode;\n  footer?: ReactNode;\n  buttonCloseLabel?: string;\n  buttonActionLabel?: string;\n  onAction?: () => void | Promise<void>;\n  buttonCloseProps?: ButtonProps;\n  buttonActionProps?: ButtonProps;\n  classNames?: DrawerClassNames;\n}\n\nexport type DrawerProps = Omit<DrawerRootProps, keyof AdditionalDrawerProps> &\n  AdditionalDrawerProps;\n\nconst isValidButtonLabel = (label: unknown): label is string =>\n  typeof label === \"string\" && label.length > 0;\n\nexport const Drawer = forwardRef<HTMLDivElement, DrawerProps>(\n  (\n    {\n      trigger,\n      title,\n      children,\n      footer,\n      buttonCloseLabel = \"Close\",\n      buttonActionLabel,\n      onAction,\n      buttonCloseProps,\n      buttonActionProps,\n      classNames = {},\n      ...nextUIProps\n    },\n    ref,\n  ) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    const handleAction = async (): Promise<void> => {\n      try {\n        await onAction?.();\n        onClose();\n      } catch (error) {\n        console.error(\"Action failed:\", error);\n      }\n    };\n\n    const handleKeyDown = (\n      event: React.KeyboardEvent<HTMLDivElement>,\n    ): void => {\n      if (event.key === \"Enter\" || event.key === \" \") {\n        event.preventDefault();\n        onOpen();\n      }\n    };\n\n    const renderButtons = (): ReactNode => {\n      const hasValidCloseLabel = isValidButtonLabel(buttonCloseLabel);\n      const hasValidActionButton =\n        isValidButtonLabel(buttonActionLabel) && onAction !== undefined;\n\n      const defaultButtonProps = {\n        color: \"primary\" as const,\n        radius: \"sm\" as const,\n      };\n\n      return (\n        <div className=\"flex justify-end gap-2\">\n          {hasValidCloseLabel && (\n            <Button\n              {...defaultButtonProps}\n              variant=\"bordered\"\n              onPress={onClose}\n              className={cn(\"border-primary/50\", buttonCloseProps?.className)}\n              {...buttonCloseProps}\n            >\n              {buttonCloseLabel}\n            </Button>\n          )}\n\n          {hasValidActionButton && (\n            <Button\n              {...defaultButtonProps}\n              onPress={handleAction}\n              {...buttonActionProps}\n            >\n              {buttonActionLabel}\n            </Button>\n          )}\n        </div>\n      );\n    };\n\n    const drawerClassNames = {\n      wrapper: cn(classNames.wrapper),\n      base: cn(\"bg-background rounded-none\", classNames.base),\n      backdrop: cn(classNames.backdrop),\n      closeButton: cn(\"absolute right-4 top-4\", classNames.closeButton),\n      header: cn(classNames.header),\n      body: cn(classNames.body),\n      footer: cn(classNames.footer),\n    };\n\n    return (\n      <>\n        <div\n          role=\"button\"\n          tabIndex={0}\n          onClick={onOpen}\n          onKeyDown={handleKeyDown}\n          className=\"inline-block\"\n        >\n          {trigger}\n        </div>\n\n        <DrawerRoot\n          ref={ref}\n          isOpen={isOpen}\n          onClose={onClose}\n          classNames={drawerClassNames}\n          {...nextUIProps}\n        >\n          <DrawerContent>\n            {() => (\n              <>\n                {title !== undefined && (\n                  <DrawerHeader className={drawerClassNames.header}>\n                    {title}\n                  </DrawerHeader>\n                )}\n\n                <DrawerBody className={drawerClassNames.body}>\n                  {children}\n                </DrawerBody>\n\n                <DrawerFooter className={drawerClassNames.footer}>\n                  {footer !== undefined ? footer : renderButtons()}\n                </DrawerFooter>\n              </>\n            )}\n          </DrawerContent>\n        </DrawerRoot>\n      </>\n    );\n  },\n);\n\nDrawer.displayName = \"Drawer\";\n"]}