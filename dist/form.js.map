{"version":3,"sources":["../src/utils/index.ts","../src/form/Radio.tsx","../src/form/Checkbox.tsx","../src/form/InputOpt.tsx","../src/form/Input.tsx","../src/form/Textarea.tsx","../src/form/Switch.tsx","../src/form/Select.tsx","../src/hooks/useInfiniteScroll.ts","../src/hooks/useInfiniteList.ts","../src/form/InfiniteSelect.tsx"],"names":["RadioGroupRoot","forwardRef","jsx","CheckboxGroupRoot","NextUIInputOtp","InputRoot","TextareaRoot","NextUISwitch","NextUISelect","useRef","useCallback","useState","useEffect","Select","SelectItem"],"mappings":"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","file":"form.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport const cn = (...inputs: ClassValue[]): string => {\n  return twMerge(clsx(inputs));\n};\n\nexport const capitalizeFirstLetter = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const concatenateWithSpace = (\n  ...strings: (string | undefined)[]\n): string => strings.filter(Boolean).join(\" \");\n\nexport const startsWith = (str: string, prefix: string): boolean =>\n  str.startsWith(prefix);\n\nexport const endsWith = (str: string, suffix: string): boolean =>\n  str.endsWith(suffix);\n\nexport const toLowerCase = (str: string): string => str.toLowerCase();\n\nexport const toUpperCase = (str: string): string => str.toUpperCase();\n\nexport const trim = (str: string): string => str.trim();\n\nexport const reverse = (str: string): string =>\n  str.split(\"\").reverse().join(\"\");\n\nexport const limitValue = (\n  value: number,\n  min: number | undefined,\n  max: number | undefined,\n): number => {\n  if (min === undefined && max === undefined) {\n    return value;\n  }\n\n  if (min !== undefined && max === undefined) {\n    return Math.max(value, min);\n  }\n\n  if (min === undefined && max !== undefined) {\n    return Math.min(value, max);\n  }\n\n  if (min !== undefined && max !== undefined) {\n    return Math.min(Math.max(value, min), max);\n  }\n\n  return value;\n};\n\ntype DebouncedFunction<Args extends unknown[]> = {\n  (...args: Args): void;\n  cancel: () => void;\n};\n\n//debounce function\nexport function debounce<\n  Callback extends (...args: never[]) => unknown,\n  Args extends Parameters<Callback>,\n>(callback: Callback, delay = 0): DebouncedFunction<Args> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  let latestArgs: Args | undefined;\n\n  function debouncedFn(this: unknown, ...args: Args): void {\n    latestArgs = args;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      if (latestArgs) {\n        callback.apply(this, latestArgs);\n      }\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }, delay);\n  }\n\n  debouncedFn.cancel = function cancel(): void {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }\n  };\n\n  return debouncedFn;\n}\n","import { forwardRef } from \"react\";\nimport type {\n  RadioGroupProps,\n  RadioProps} from \"@nextui-org/react\";\nimport {\n  RadioGroup as RadioGroupRoot,\n  Radio\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype RadioItemProps = {\n  label?: React.ReactNode;\n} & Omit<RadioProps, \"children\">\n\ntype RadioWrapperProps = {\n  items: RadioItemProps[];\n  groupClasses?: {\n    base?: string;\n    label?: string;\n  };\n  itemClasses?: {\n    base?: string;\n    label?: string;\n    wrapper?: string;\n    control?: string;\n  };\n} & Omit<RadioGroupProps, \"children\">\n\nexport const RadioGroup = forwardRef<HTMLDivElement, RadioWrapperProps>(\n  (\n    {\n      items,\n      groupClasses,\n      itemClasses,\n      label = \"Select an option\",\n      defaultValue,\n      ...props\n    },\n    ref,\n  ) => {\n    const defaultGroupClasses = {\n      base: \"w-full\",\n      label: \"text-medium font-semibold\",\n    };\n\n    const defaultItemClasses = {\n      base: \"w-full\",\n      label: \"text-small\",\n      wrapper: \"\",\n      control: \"\",\n    };\n\n    return (\n      <RadioGroupRoot\n        ref={ref}\n        label={label}\n        defaultValue={defaultValue}\n        {...props}\n        classNames={{\n          base: cn(defaultGroupClasses.base, groupClasses?.base),\n          label: cn(defaultGroupClasses.label, groupClasses?.label),\n        }}\n      >\n        {items.map((item) => (\n          <Radio\n            key={item.value}\n            {...item}\n            classNames={{\n              base: cn(\n                defaultItemClasses.base,\n                itemClasses?.base,\n                item.className,\n              ),\n              label: cn(\n                defaultItemClasses.label,\n                itemClasses?.label,\n                item.classNames?.label,\n              ),\n              wrapper: cn(\n                defaultItemClasses.wrapper,\n                itemClasses?.wrapper,\n                item.classNames?.wrapper,\n              ),\n              control: cn(\n                defaultItemClasses.control,\n                itemClasses?.control,\n                item.classNames?.control,\n              ),\n            }}\n          >\n            {item.label}\n          </Radio>\n        ))}\n      </RadioGroupRoot>\n    );\n  },\n);\n\nRadioGroup.displayName = \"RadioGroup\";\n","import { forwardRef } from \"react\";\nimport type { CheckboxGroupProps, CheckboxProps } from \"@nextui-org/react\";\nimport {\n  CheckboxGroup as CheckboxGroupRoot,\n  Checkbox,\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype CheckboxItemProps = {\n  label?: React.ReactNode;\n} & Omit<CheckboxProps, \"children\">;\n\ntype CheckboxWrapperProps = {\n  items: CheckboxItemProps[];\n  groupClasses?: {\n    base?: string;\n    label?: string;\n  };\n  itemClasses?: {\n    base?: string;\n    label?: string;\n    wrapper?: string;\n  };\n} & Omit<CheckboxGroupProps, \"children\">;\n\nconst CheckboxGroup = forwardRef<HTMLDivElement, CheckboxWrapperProps>(\n  (\n    {\n      items,\n      groupClasses,\n      itemClasses,\n      label = \"Select options\",\n      defaultValue,\n      ...props\n    },\n    ref,\n  ) => {\n    const defaultGroupClasses = {\n      base: \"w-full\",\n      label: \"text-medium font-semibold\",\n    };\n\n    const defaultItemClasses = {\n      base: \"w-full\",\n      label: \"text-small\",\n      wrapper: \"\",\n    };\n\n    return (\n      <CheckboxGroupRoot\n        ref={ref}\n        label={label}\n        defaultValue={defaultValue}\n        {...props}\n        classNames={{\n          base: cn(defaultGroupClasses.base, groupClasses?.base),\n          label: cn(defaultGroupClasses.label, groupClasses?.label),\n        }}\n      >\n        {items.map((item) => (\n          <Checkbox\n            key={item.value}\n            {...item}\n            classNames={{\n              base: cn(\n                defaultItemClasses.base,\n                itemClasses?.base,\n                item.className,\n              ),\n              label: cn(\n                defaultItemClasses.label,\n                itemClasses?.label,\n                item.classNames?.label,\n              ),\n              wrapper: cn(\n                defaultItemClasses.wrapper,\n                itemClasses?.wrapper,\n                item.classNames?.wrapper,\n              ),\n            }}\n          >\n            {item.label}\n          </Checkbox>\n        ))}\n      </CheckboxGroupRoot>\n    );\n  },\n);\n\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\nexport { Checkbox, CheckboxGroup };\n","import { forwardRef } from \"react\";\nimport type { InputOtpProps } from \"@nextui-org/react\";\nimport { InputOtp as NextUIInputOtp } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype InputOtpWrapperProps = {\n  length?: number;\n  label?: string;\n  labelClasses?: string;\n  containerClasses?: string;\n} & Omit<InputOtpProps, \"length\">\n\nexport const InputOtp = forwardRef<HTMLDivElement, InputOtpWrapperProps>(\n  (\n    {\n      length = 6,\n      label = `${length} digits OTP`,\n      labelClasses,\n      containerClasses,\n      ...props\n    },\n    ref,\n  ) => {\n    const defaultLabelClasses = \"text-default-500 text-small mb-2\";\n    const defaultContainerClasses = \"flex flex-col\";\n\n    return (\n      <div ref={ref} className={cn(defaultContainerClasses, containerClasses)}>\n        {label && (\n          <p className={cn(defaultLabelClasses, labelClasses)}>{label}</p>\n        )}\n        <NextUIInputOtp length={length} {...props} />\n      </div>\n    );\n  },\n);\n\nInputOtp.displayName = \"InputOtp\";\n","import { forwardRef, useState } from \"react\";\nimport type { InputProps as InputRootProps } from \"@nextui-org/react\";\nimport { Input as InputRoot } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\nimport { IconEye, IconEyeOff } from \"@tabler/icons-react\";\n\ntype ValidationError = string | string[];\n\ntype InputProps = InputRootProps & {\n  containerClasses?: string;\n  customValidation?: (value: string) => boolean | string;\n};\n\nexport const Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isClearable = false,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      customValidation,\n      validate,\n      type,\n      ...props\n    },\n    ref,\n  ) => {\n    const [inputType, setInputType] = useState(type);\n\n    const combinedValidate = (\n      value: string,\n    ): ValidationError | true | null | undefined => {\n      if (customValidation) {\n        const customResult = customValidation(value);\n        if (typeof customResult === \"string\") {\n          return customResult;\n        }\n        if (customResult) {\n          return \"Validation failed\";\n        }\n      }\n      return validate?.(value) ?? true;\n    };\n\n    const endContent =\n      type === \"password\" ? (\n        <button\n          className=\"opacity-40 focus:outline-none\"\n          type=\"button\"\n          onClick={() =>\n            setInputType(inputType === \"password\" ? \"text\" : \"password\")\n          }\n        >\n          {inputType === \"password\" ? (\n            <IconEye className=\"pointer-events-none\" />\n          ) : (\n            <IconEyeOff className=\"pointer-events-none\" />\n          )}\n        </button>\n      ) : undefined;\n\n    const { classNames: propClassNames, ...restProps } = props;\n\n    const getVariantStyles = (): string => {\n      switch (variant) {\n        case \"bordered\":\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"group-data-[focus=true]:bg-content1\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"flat\":\n          return [\n            \"border-none\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:bg-default-100\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"faded\":\n          return [\n            \"border-1\",\n            \"border-transparent\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"underlined\":\n          return [\n            \"relative\",\n            \"border-b-1\",\n            \"rounded-none\",\n            \"bg-transparent\",\n            \"border-default\",\n            \"h-12\",\n            // Underline effect\n\n            \"after:bg-outline\",\n            // Hover\n            \"data-[hover=true]:after:scale-x-100\",\n            \"data-[hover=true]:after:bg-outline\",\n            // Focus\n            \"group-data-[focus=true]:after:scale-x-100\",\n            \"group-data-[focus=true]:after:bg-outline\",\n          ].join(\" \");\n\n        default:\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n      }\n    };\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <InputRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isClearable={isClearable}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          validate={combinedValidate}\n          classNames={{\n            ...propClassNames,\n            inputWrapper: cn(getVariantStyles(), propClassNames?.inputWrapper),\n          }}\n          endContent={endContent}\n          type={inputType}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nInput.displayName = \"Input\";\n","import { forwardRef } from \"react\";\nimport type { TextAreaProps as TextAreaRootProps } from \"@nextui-org/react\";\nimport { Textarea as TextareaRoot } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype ValidationError = string | string[];\n\ntype TextareaProps = TextAreaRootProps & {\n  containerClasses?: string;\n  width?: string | number;\n  height?: string | number;\n  customValidation?: (value: string) => boolean | string;\n};\n\nexport const Textarea = forwardRef<HTMLTextAreaElement, TextareaProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      width,\n      height,\n      style,\n      customValidation,\n      validate,\n      ...props\n    },\n    ref,\n  ) => {\n    const combinedStyle = {\n      width: typeof width === \"number\" ? `${width}px` : width,\n      height: typeof height === \"number\" ? `${height}px` : height,\n      ...style,\n    };\n\n    const combinedValidate = (\n      value: string,\n    ): ValidationError | true | null | undefined => {\n      if (customValidation) {\n        const customResult = customValidation(value);\n        if (typeof customResult === \"string\") {\n          return customResult;\n        }\n        if (customResult === false) {\n          return \"Validation failed\";\n        }\n      }\n      return validate?.(value) ?? true;\n    };\n\n    const { classNames: propClassNames, ...restProps } = props;\n\n    const getVariantStyles = (): string => {\n      switch (variant) {\n        case \"bordered\":\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"group-data-[focus=true]:bg-content1\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"flat\":\n          return [\n            \"border-none\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:bg-default-100\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"faded\":\n          return [\n            \"border-1\",\n            \"border-transparent\",\n            \"bg-default-100\",\n            \"dark:bg-default-50\",\n            \"data-[hover=true]:bg-default-200\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n\n        case \"underlined\":\n          return [\n            \"relative\",\n            \"border-b-1\",\n            \"rounded-none\",\n            \"bg-transparent\",\n            \"border-default\",\n            // Underline effect\n            \"after:bg-outline\",\n            // Hover\n            \"data-[hover=true]:after:scale-x-100\",\n            \"data-[hover=true]:after:bg-outline\",\n            // Focus\n            \"group-data-[focus=true]:after:scale-x-100\",\n            \"group-data-[focus=true]:after:bg-outline\",\n          ].join(\" \");\n\n        default:\n          return [\n            \"border-1\",\n            \"bg-white\",\n            \"dark:bg-background\",\n            \"data-[hover=true]:border-outline\",\n            \"group-data-[focus=true]:border-outline\",\n            \"h-12\",\n          ].join(\" \");\n      }\n    };\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <TextareaRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          validate={combinedValidate}\n          style={combinedStyle}\n          classNames={{\n            ...propClassNames,\n            inputWrapper: cn(getVariantStyles(), propClassNames?.inputWrapper),\n            input: cn(\"text-base\", propClassNames?.input),\n          }}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nTextarea.displayName = \"Textarea\";\n","import { forwardRef } from \"react\";\nimport type {\n  SwitchProps as SwitchRootProp} from \"@nextui-org/react\";\nimport {\n  Switch as NextUISwitch\n} from \"@nextui-org/react\";\n\ntype SwitchProps = {\n  width?: string | number;\n  height?: string | number;\n} & SwitchRootProp\n\nexport const Switch = forwardRef<HTMLInputElement, SwitchProps>(\n  ({ width, height, style, ...props }, ref) => {\n    const combinedStyle = {\n      width: typeof width === \"number\" ? `${width}px` : width,\n      height: typeof height === \"number\" ? `${height}px` : height,\n      ...style,\n    };\n\n    return <NextUISwitch ref={ref} style={combinedStyle} {...props} />;\n  },\n);\n\nSwitch.displayName = \"Switch\";\n","import { forwardRef } from \"react\";\nimport type {\n  SelectProps as NextUISelectProps,\n  Selection,\n} from \"@nextui-org/react\";\nimport { Select as NextUISelect, SelectItem } from \"@nextui-org/react\";\n\nexport interface SelectOption {\n  key: string;\n  label: string;\n  description?: string;\n  icon?: React.ReactNode;\n}\n\ninterface SelectProps\n  extends Omit<NextUISelectProps, \"children\" | \"value\" | \"onSelectionChange\"> {\n  options: SelectOption[];\n  value?: Selection;\n  defaultValue?: Selection;\n  onSelectionChange?: (key: Selection) => void;\n}\n\nexport const Select = forwardRef<HTMLSelectElement, SelectProps>(\n  (\n    {\n      // Options\n      options = [],\n      value,\n      defaultValue,\n      classNames,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <NextUISelect\n        ref={ref}\n        classNames={{\n          base: \"max-w-xs\",\n          trigger: \"h-10\",\n          value: \"text-small\",\n          ...classNames,\n        }}\n        selectedKeys={value}\n        defaultSelectedKeys={defaultValue}\n        {...props}\n      >\n        {options.map((option) => (\n          <SelectItem\n            key={option.key}\n            description={option.description}\n            startContent={option.icon}\n            className=\"text-small\"\n          >\n            {option.label}\n          </SelectItem>\n        ))}\n      </NextUISelect>\n    );\n  },\n);\n\nSelect.displayName = \"Select\";\n","import { debounce } from \"@/utils\";\nimport { useLayoutEffect, useRef, useCallback } from \"react\";\n\nexport interface UseInfiniteScrollProps {\n  isEnabled?: boolean;\n  hasMore?: boolean;\n  distance?: number;\n  shouldUseLoader?: boolean;\n  onLoadMore?: () => void;\n}\n\nexport const useInfiniteScroll = (\n  props: UseInfiniteScrollProps = {},\n): readonly [React.RefObject<HTMLElement>, React.RefObject<HTMLElement>] => {\n  const {\n    hasMore = true,\n    distance = 250,\n    isEnabled = true,\n    shouldUseLoader = true,\n    onLoadMore,\n  } = props;\n\n  const scrollContainerRef = useRef<HTMLElement>(null);\n  const loaderRef = useRef<HTMLElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const isLoadingRef = useRef(false);\n\n  const loadMore = useCallback(() => {\n    let timer: ReturnType<typeof setTimeout>;\n\n    if (!isLoadingRef.current && hasMore && onLoadMore) {\n      isLoadingRef.current = true;\n      onLoadMore();\n      timer = setTimeout(() => {\n        isLoadingRef.current = false;\n      }, 100);\n    }\n\n    return () => clearTimeout(timer);\n  }, [hasMore, onLoadMore]);\n\n  useLayoutEffect(() => {\n    const scrollContainerNode = scrollContainerRef.current;\n\n    if (!isEnabled || !scrollContainerNode || !hasMore) {\n      return;\n    }\n\n    if (shouldUseLoader) {\n      const loaderNode = loaderRef.current;\n\n      if (!loaderNode) {\n        return;\n      }\n\n      const options = {\n        root: scrollContainerNode,\n        rootMargin: `0px 0px ${distance}px 0px`,\n        threshold: 0.1,\n      };\n\n      const observer = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n\n        if (entry.isIntersecting) {\n          loadMore();\n        }\n      }, options);\n\n      observer.observe(loaderNode);\n      observerRef.current = observer;\n\n      return () => {\n        if (observerRef.current) {\n          observerRef.current.disconnect();\n        }\n      };\n    }\n\n    const debouncedCheckIfNearBottom = debounce(() => {\n      if (\n        scrollContainerNode.scrollHeight - scrollContainerNode.scrollTop <=\n        scrollContainerNode.clientHeight + distance\n      ) {\n        loadMore();\n      }\n    }, 100);\n\n    scrollContainerNode.addEventListener(\"scroll\", debouncedCheckIfNearBottom);\n\n    return () => {\n      scrollContainerNode.removeEventListener(\n        \"scroll\",\n        debouncedCheckIfNearBottom,\n      );\n    };\n  }, [hasMore, distance, isEnabled, shouldUseLoader, loadMore]);\n\n  return [loaderRef, scrollContainerRef] as const as readonly [\n    React.RefObject<HTMLElement>,\n    React.RefObject<HTMLElement>,\n  ];\n};\nexport type UseInfiniteScrollReturn = ReturnType<typeof useInfiniteScroll>;\n","import { useEffect, useState } from \"react\";\n\nexport type FetchFunctionReturn<T> = {\n  items: T[];\n  hasMore: boolean;\n};\n\nexport type FetchFunction<T> = (\n  offset: number,\n  limit: number,\n) => Promise<FetchFunctionReturn<T>>;\n\nexport interface UseInfiniteListProps<T> {\n  fetchFunction: FetchFunction<T>;\n  fetchDelay?: number;\n  limit?: number;\n}\n\nexport interface UseInfiniteListReturn<T> {\n  items: T[];\n  hasMore: boolean;\n  isLoading: boolean;\n  onLoadMore: () => void;\n}\n\nexport function useInfiniteList<T>({\n  fetchFunction,\n  fetchDelay = 0,\n  limit = 10,\n}: UseInfiniteListProps<T>): UseInfiniteListReturn<T> {\n  const [items, setItems] = useState<T[]>([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n\n  const loadItems = async (currentOffset: number): Promise<void> => {\n    try {\n      setIsLoading(true);\n      if (offset > 0) {\n        await new Promise((resolve) => setTimeout(resolve, fetchDelay));\n      }\n\n      const { items: newItems, hasMore: moreAvailable } = await fetchFunction(\n        currentOffset,\n        limit,\n      );\n\n      setHasMore(moreAvailable);\n      setItems((prevItems) => [...prevItems, ...newItems]);\n    } catch (error) {\n      console.error(\"There was an error with the fetch operation:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    void loadItems(offset);\n  }, []);\n\n  const onLoadMore = (): void => {\n    const newOffset = offset + limit;\n    setOffset(newOffset);\n    void loadItems(newOffset);\n  };\n\n  return {\n    items,\n    hasMore,\n    isLoading,\n    onLoadMore,\n  };\n}\n","import { useInfiniteScroll } from \"@/hooks\";\nimport { useInfiniteList } from \"@/hooks/useInfiniteList\";\nimport { Select, SelectItem } from \"@nextui-org/react\";\nimport type { JSX } from \"react\";\nimport { useState } from \"react\";\n\ninterface InfiniteSelectProps<T> {\n  fetchFunction: (\n    offset: number,\n    limit: number,\n  ) => Promise<{\n    items: T[];\n    hasMore: boolean;\n  }>;\n  fetchDelay?: number;\n  limit?: number;\n  className?: string;\n  renderItem: (item: T) => React.ReactNode;\n  getItemKey: (item: T) => string | number;\n  selectionMode?: \"single\" | \"multiple\";\n}\n\nexport function InfiniteSelect<T extends object>({\n  fetchFunction,\n  fetchDelay = 0,\n  limit = 10,\n  className = \"max-w-xs\",\n  renderItem,\n  getItemKey,\n  selectionMode = \"single\",\n}: InfiniteSelectProps<T>): JSX.Element {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { items, hasMore, isLoading, onLoadMore } = useInfiniteList({\n    fetchFunction,\n    fetchDelay,\n    limit,\n  });\n\n  const [, scrollerRef] = useInfiniteScroll({\n    hasMore,\n    isEnabled: isOpen,\n    shouldUseLoader: false,\n    onLoadMore,\n  });\n\n  return (\n    <Select\n      className={className}\n      isLoading={isLoading}\n      items={items}\n      scrollRef={scrollerRef}\n      selectionMode={selectionMode}\n      onOpenChange={setIsOpen}\n    >\n      {(item: T) => (\n        <SelectItem key={getItemKey(item)}>{renderItem(item)}</SelectItem>\n      )}\n    </Select>\n  );\n}\n"]}