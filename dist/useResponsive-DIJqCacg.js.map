{"version":3,"file":"useResponsive-DIJqCacg.js","sources":["../src/hooks/useMediaQuery.ts","../src/hooks/useResponsive.ts"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from \"react\";\n\nexport type UseMediaQueryOptions = {\n  getInitialValueInEffect?: boolean;\n  initialValue?: boolean;\n};\n\nfunction attachMediaListener(\n  query: MediaQueryList,\n  callback: (event: MediaQueryListEvent) => void,\n): () => void {\n  query.addEventListener(\"change\", callback);\n  return () => query.removeEventListener(\"change\", callback);\n}\n\nfunction getInitialValue(query: string, initialValue?: boolean): boolean {\n  if (typeof initialValue === \"boolean\") {\n    return initialValue;\n  }\n\n  if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n    try {\n      return window.matchMedia(query).matches;\n    } catch (e) {\n      console.warn(\"Error while matching media query:\", e);\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport function useMediaQuery(\n  query: string,\n  options: UseMediaQueryOptions = {},\n): boolean {\n  const { getInitialValueInEffect = true, initialValue } = options;\n\n  const [matches, setMatches] = useState<boolean>(() =>\n    getInitialValueInEffect\n      ? (initialValue ?? false)\n      : getInitialValue(query, initialValue),\n  );\n\n  const queryRef = useRef<MediaQueryList | null>(null);\n  const handleChange = useCallback((event: MediaQueryListEvent) => {\n    setMatches(event.matches);\n  }, []);\n\n  useEffect(() => {\n    if (typeof window === \"undefined\" || !(\"matchMedia\" in window)) {\n      return undefined;\n    }\n\n    try {\n      queryRef.current = window.matchMedia(query);\n      if (getInitialValueInEffect) {\n        setMatches(queryRef.current.matches);\n      }\n\n      return attachMediaListener(queryRef.current, handleChange);\n    } catch (e) {\n      console.error(\"Error setting up media query:\", e);\n      return undefined;\n    }\n  }, [query, getInitialValueInEffect, handleChange]);\n\n  return matches;\n}\n","import { useMediaQuery } from \"./useMediaQuery\";\n\ntype Breakpoints = {\n  isDesktop: boolean;\n  isTablet: boolean;\n  isMobile: boolean;\n}\n\ntype ResponsiveHook = {\n  matches?: boolean;\n  getBreakpoint: () => keyof Breakpoints;\n  isBreakpoint: (breakpoint: keyof Breakpoints) => boolean;\n} & Breakpoints\n\nconst MEDIA_QUERIES = {\n  desktop: \"(min-width: 1024px)\",\n  tablet: \"(min-width: 768px) and (max-width: 1023px)\",\n} as const;\n\nexport const useResponsive = (customQuery?: string): ResponsiveHook => {\n  const isDesktop = useMediaQuery(MEDIA_QUERIES.desktop);\n  const isTablet = useMediaQuery(MEDIA_QUERIES.tablet);\n  const isMobile = !isDesktop && !isTablet;\n\n  const customMatch = useMediaQuery(\n    typeof customQuery === \"string\" && customQuery.length > 0\n      ? customQuery\n      : \"\",\n  );\n\n  const getBreakpoint = (): keyof Breakpoints => {\n    if (isDesktop === true) {\n      return \"isDesktop\";\n    }\n    if (isTablet === true) {\n      return \"isTablet\";\n    }\n    return \"isMobile\";\n  };\n\n  const isBreakpoint = (breakpoint: keyof Breakpoints): boolean => {\n    const breakpoints: Breakpoints = {\n      isDesktop,\n      isTablet,\n      isMobile,\n    };\n    return breakpoints[breakpoint] === true;\n  };\n\n  const hasValidCustomQuery =\n    typeof customQuery === \"string\" && customQuery.length > 0;\n\n  return {\n    isDesktop,\n    isTablet,\n    isMobile,\n    matches: hasValidCustomQuery ? customMatch : undefined,\n    getBreakpoint,\n    isBreakpoint,\n  };\n};\n"],"names":[],"mappings":";AAOA,SAAS,oBACP,OACA,UACY;AACN,QAAA,iBAAiB,UAAU,QAAQ;AACzC,SAAO,MAAM,MAAM,oBAAoB,UAAU,QAAQ;AAC3D;AAEA,SAAS,gBAAgB,OAAe,cAAiC;AACnE,MAAA,OAAO,iBAAiB,WAAW;AAC9B,WAAA;AAAA,EAAA;AAGT,MAAI,OAAO,WAAW,eAAe,gBAAgB,QAAQ;AACvD,QAAA;AACK,aAAA,OAAO,WAAW,KAAK,EAAE;AAAA,aACzB,GAAG;AACF,cAAA,KAAK,qCAAqC,CAAC;AAC5C,aAAA;AAAA,IAAA;AAAA,EACT;AAGK,SAAA;AACT;AAEO,SAAS,cACd,OACA,UAAgC,IACvB;AACT,QAAM,EAAE,0BAA0B,MAAM,aAAiB,IAAA;AAEnD,QAAA,CAAC,SAAS,UAAU,IAAI;AAAA,IAAkB,MAC9C,0BACK,sCAAgB,QACjB,gBAAgB,OAAO,YAAY;AAAA,EACzC;AAEM,QAAA,WAAW,OAA8B,IAAI;AAC7C,QAAA,eAAe,YAAY,CAAC,UAA+B;AAC/D,eAAW,MAAM,OAAO;AAAA,EAC1B,GAAG,EAAE;AAEL,YAAU,MAAM;AACd,QAAI,OAAO,WAAW,eAAe,EAAE,gBAAgB,SAAS;AACvD,aAAA;AAAA,IAAA;AAGL,QAAA;AACO,eAAA,UAAU,OAAO,WAAW,KAAK;AAC1C,UAAI,yBAAyB;AAChB,mBAAA,SAAS,QAAQ,OAAO;AAAA,MAAA;AAG9B,aAAA,oBAAoB,SAAS,SAAS,YAAY;AAAA,aAClD,GAAG;AACF,cAAA,MAAM,iCAAiC,CAAC;AACzC,aAAA;AAAA,IAAA;AAAA,EAER,GAAA,CAAC,OAAO,yBAAyB,YAAY,CAAC;AAE1C,SAAA;AACT;ACtDA,MAAM,gBAAgB;AAAA,EACpB,SAAS;AAAA,EACT,QAAQ;AACV;AAEa,MAAA,gBAAgB,CAAC,gBAAyC;AAC/D,QAAA,YAAY,cAAc,cAAc,OAAO;AAC/C,QAAA,WAAW,cAAc,cAAc,MAAM;AAC7C,QAAA,WAAW,CAAC,aAAa,CAAC;AAEhC,QAAM,cAAc;AAAA,IAClB,OAAO,gBAAgB,YAAY,YAAY,SAAS,IACpD,cACA;AAAA,EACN;AAEA,QAAM,gBAAgB,MAAyB;AAC7C,QAAI,cAAc,MAAM;AACf,aAAA;AAAA,IAAA;AAET,QAAI,aAAa,MAAM;AACd,aAAA;AAAA,IAAA;AAEF,WAAA;AAAA,EACT;AAEM,QAAA,eAAe,CAAC,eAA2C;AAC/D,UAAM,cAA2B;AAAA,MAC/B;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACO,WAAA,YAAY,UAAU,MAAM;AAAA,EACrC;AAEA,QAAM,sBACJ,OAAO,gBAAgB,YAAY,YAAY,SAAS;AAEnD,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS,sBAAsB,cAAc;AAAA,IAC7C;AAAA,IACA;AAAA,EACF;AACF;"}