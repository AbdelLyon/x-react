{"version":3,"sources":["../../src/utils/index.ts"],"names":[],"mappings":";;;;AAGa,IAAA,EAAA,GAAK,IAAI,MAAiC,KAAA;AACrD,EAAO,OAAA,OAAA,CAAQ,IAAK,CAAA,MAAM,CAAC,CAAA;AAC7B;AAEa,IAAA,qBAAA,GAAwB,CAAC,GAAA,KACpC,GAAI,CAAA,MAAA,CAAO,CAAC,CAAA,CAAE,WAAY,EAAA,GAAI,GAAI,CAAA,KAAA,CAAM,CAAC;AAE9B,IAAA,oBAAA,GAAuB,IAC/B,OACQ,KAAA,OAAA,CAAQ,OAAO,OAAO,CAAA,CAAE,KAAK,GAAG;AAEtC,IAAM,aAAa,CAAC,GAAA,EAAa,MACtC,KAAA,GAAA,CAAI,WAAW,MAAM;AAEhB,IAAM,WAAW,CAAC,GAAA,EAAa,MACpC,KAAA,GAAA,CAAI,SAAS,MAAM;AAEd,IAAM,WAAc,GAAA,CAAC,GAAwB,KAAA,GAAA,CAAI,WAAY;AAE7D,IAAM,WAAc,GAAA,CAAC,GAAwB,KAAA,GAAA,CAAI,WAAY;AAE7D,IAAM,IAAO,GAAA,CAAC,GAAwB,KAAA,GAAA,CAAI,IAAK;AAEzC,IAAA,OAAA,GAAU,CAAC,GAAA,KACtB,GAAI,CAAA,KAAA,CAAM,EAAE,CAAE,CAAA,OAAA,EAAU,CAAA,IAAA,CAAK,EAAE;AAE1B,IAAM,UAAa,GAAA,CACxB,KACA,EAAA,GAAA,EACA,GACW,KAAA;AACX,EAAI,IAAA,GAAA,KAAQ,KAAa,CAAA,IAAA,GAAA,KAAQ,KAAW,CAAA,EAAA;AAC1C,IAAO,OAAA,KAAA;AAAA;AAGT,EAAI,IAAA,GAAA,KAAQ,KAAa,CAAA,IAAA,GAAA,KAAQ,KAAW,CAAA,EAAA;AAC1C,IAAO,OAAA,IAAA,CAAK,GAAI,CAAA,KAAA,EAAO,GAAG,CAAA;AAAA;AAG5B,EAAI,IAAA,GAAA,KAAQ,KAAa,CAAA,IAAA,GAAA,KAAQ,KAAW,CAAA,EAAA;AAC1C,IAAO,OAAA,IAAA,CAAK,GAAI,CAAA,KAAA,EAAO,GAAG,CAAA;AAAA;AAG5B,EAAI,IAAA,GAAA,KAAQ,KAAa,CAAA,IAAA,GAAA,KAAQ,KAAW,CAAA,EAAA;AAC1C,IAAA,OAAO,KAAK,GAAI,CAAA,IAAA,CAAK,IAAI,KAAO,EAAA,GAAG,GAAG,GAAG,CAAA;AAAA;AAG3C,EAAO,OAAA,KAAA;AACT;AAQO,SAAS,QAAA,CAGd,QAAoB,EAAA,KAAA,GAAQ,CAA4B,EAAA;AACxD,EAAI,IAAA,SAAA;AACJ,EAAI,IAAA,UAAA;AAEJ,EAAA,SAAS,eAA8B,IAAkB,EAAA;AACvD,IAAa,UAAA,GAAA,IAAA;AAEb,IAAA,IAAI,cAAc,KAAW,CAAA,EAAA;AAC3B,MAAA,YAAA,CAAa,SAAS,CAAA;AAAA;AAGxB,IAAA,SAAA,GAAY,WAAW,MAAM;AAC3B,MAAA,IAAI,UAAY,EAAA;AACd,QAAS,QAAA,CAAA,KAAA,CAAM,MAAM,UAAU,CAAA;AAAA;AAEjC,MAAY,SAAA,GAAA,KAAA,CAAA;AACZ,MAAa,UAAA,GAAA,KAAA,CAAA;AAAA,OACZ,KAAK,CAAA;AAAA;AAGV,EAAY,WAAA,CAAA,MAAA,GAAS,SAAS,MAAe,GAAA;AAC3C,IAAA,IAAI,cAAc,KAAW,CAAA,EAAA;AAC3B,MAAA,YAAA,CAAa,SAAS,CAAA;AACtB,MAAY,SAAA,GAAA,KAAA,CAAA;AACZ,MAAa,UAAA,GAAA,KAAA,CAAA;AAAA;AACf,GACF;AAEA,EAAO,OAAA,WAAA;AACT","file":"index.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport const cn = (...inputs: ClassValue[]): string => {\n  return twMerge(clsx(inputs));\n};\n\nexport const capitalizeFirstLetter = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const concatenateWithSpace = (\n  ...strings: (string | undefined)[]\n): string => strings.filter(Boolean).join(\" \");\n\nexport const startsWith = (str: string, prefix: string): boolean =>\n  str.startsWith(prefix);\n\nexport const endsWith = (str: string, suffix: string): boolean =>\n  str.endsWith(suffix);\n\nexport const toLowerCase = (str: string): string => str.toLowerCase();\n\nexport const toUpperCase = (str: string): string => str.toUpperCase();\n\nexport const trim = (str: string): string => str.trim();\n\nexport const reverse = (str: string): string =>\n  str.split(\"\").reverse().join(\"\");\n\nexport const limitValue = (\n  value: number,\n  min: number | undefined,\n  max: number | undefined,\n): number => {\n  if (min === undefined && max === undefined) {\n    return value;\n  }\n\n  if (min !== undefined && max === undefined) {\n    return Math.max(value, min);\n  }\n\n  if (min === undefined && max !== undefined) {\n    return Math.min(value, max);\n  }\n\n  if (min !== undefined && max !== undefined) {\n    return Math.min(Math.max(value, min), max);\n  }\n\n  return value;\n};\n\ntype DebouncedFunction<Args extends unknown[]> = {\n  (...args: Args): void;\n  cancel: () => void;\n};\n\n//debounce function\nexport function debounce<\n  Callback extends (...args: never[]) => unknown,\n  Args extends Parameters<Callback>,\n>(callback: Callback, delay = 0): DebouncedFunction<Args> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  let latestArgs: Args | undefined;\n\n  function debouncedFn(this: unknown, ...args: Args): void {\n    latestArgs = args;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      if (latestArgs) {\n        callback.apply(this, latestArgs);\n      }\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }, delay);\n  }\n\n  debouncedFn.cancel = function cancel(): void {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }\n  };\n\n  return debouncedFn;\n}\n"]}