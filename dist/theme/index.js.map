{"version":3,"sources":["../../src/utils/index.ts","../../src/hooks/useTheme.ts","../../src/theme/ToggleTheme.tsx"],"names":["useNextTheme"],"mappings":";;;;;;;AAGO,IAAM,EAAA,GAAK,IAAI,MAAiC,KAAA;AACrD,EAAO,OAAA,OAAA,CAAQ,IAAK,CAAA,MAAM,CAAC,CAAA;AAC7B,CAAA;ACEO,IAAM,WAAW,MAAiB;AACvC,EAAA,MAAM,EAAE,QAAA,EAAU,KAAM,EAAA,GAAIA,UAAa,EAAA;AACzC,EAAO,OAAA,EAAE,UAAU,KAAM,EAAA;AAC3B,CAAA;ACJO,IAAM,cAAc,CAAC;AAAA,EAC1B;AACF,CAEmB,KAAA;AACjB,EAAA,MAAM,EAAE,QAAA,EAAU,KAAM,EAAA,GAAI,QAAS,EAAA;AAErC,EAAA,MAAM,cAAc,MAAY;AAC9B,IAAM,MAAA,QAAA,GAAW,KAAU,KAAA,OAAA,GAAU,MAAS,GAAA,OAAA;AAE9C,IAAA,QAAA,CAAS,QAAQ,CAAA;AAAA,GACnB;AAEA,EACE,uBAAA,IAAA;AAAA,IAAC,QAAA;AAAA,IAAA;AAAA,MACC,SAAW,EAAA,EAAA;AAAA,QACT,iDAAA;AAAA,QACA;AAAA,OACF;AAAA,MACA,OAAS,EAAA,WAAA;AAAA,MAET,QAAA,EAAA;AAAA,wBAAA,GAAA,CAAC,aAAc,EAAA,EAAA,SAAA,EAAU,mBAAoB,EAAA,IAAA,EAAM,EAAI,EAAA,CAAA;AAAA,wBACtD,GAAA,CAAA,cAAA,EAAA,EAAe,SAAU,EAAA,aAAA,EAAc,MAAM,EAAI,EAAA;AAAA;AAAA;AAAA,GACpD;AAEJ","file":"index.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport const cn = (...inputs: ClassValue[]): string => {\n  return twMerge(clsx(inputs));\n};\n\nexport const capitalizeFirstLetter = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const concatenateWithSpace = (\n  ...strings: (string | undefined)[]\n): string => strings.filter(Boolean).join(\" \");\n\nexport const startsWith = (str: string, prefix: string): boolean =>\n  str.startsWith(prefix);\n\nexport const endsWith = (str: string, suffix: string): boolean =>\n  str.endsWith(suffix);\n\nexport const toLowerCase = (str: string): string => str.toLowerCase();\n\nexport const toUpperCase = (str: string): string => str.toUpperCase();\n\nexport const trim = (str: string): string => str.trim();\n\nexport const reverse = (str: string): string =>\n  str.split(\"\").reverse().join(\"\");\n\nexport const limitValue = (\n  value: number,\n  min: number | undefined,\n  max: number | undefined,\n): number => {\n  if (min === undefined && max === undefined) {\n    return value;\n  }\n\n  if (min !== undefined && max === undefined) {\n    return Math.max(value, min);\n  }\n\n  if (min === undefined && max !== undefined) {\n    return Math.min(value, max);\n  }\n\n  if (min !== undefined && max !== undefined) {\n    return Math.min(Math.max(value, min), max);\n  }\n\n  return value;\n};\n\ntype DebouncedFunction<Args extends unknown[]> = {\n  (...args: Args): void;\n  cancel: () => void;\n};\n\n//debounce function\nexport function debounce<\n  Callback extends (...args: never[]) => unknown,\n  Args extends Parameters<Callback>,\n>(callback: Callback, delay = 0): DebouncedFunction<Args> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  let latestArgs: Args | undefined;\n\n  function debouncedFn(this: unknown, ...args: Args): void {\n    latestArgs = args;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      if (latestArgs) {\n        callback.apply(this, latestArgs);\n      }\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }, delay);\n  }\n\n  debouncedFn.cancel = function cancel(): void {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }\n  };\n\n  return debouncedFn;\n}\n","import { useTheme as useNextTheme } from \"next-themes\";\n\ntype ThemeHook = {\n  setTheme: (theme: string) => void;\n  theme: string | undefined;\n}\n\nexport const useTheme = (): ThemeHook => {\n  const { setTheme, theme } = useNextTheme();\n  return { setTheme, theme };\n};\n","import { IconMoonFilled, IconSunFilled } from \"@tabler/icons-react\";\n\nimport { cn } from \"@/utils\";\nimport { useTheme } from \"@/hooks/useTheme\";\nimport type { JSX } from \"react\";\n\nexport const ToggleTheme = ({\n  className,\n}: {\n  className?: string;\n}): JSX.Element => {\n  const { setTheme, theme } = useTheme();\n\n  const handleClick = (): void => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n\n    setTheme(newTheme);\n  };\n\n  return (\n    <button\n      className={cn(\n        \"cursor-pointer transition-all hover:opacity-80 \",\n        className,\n      )}\n      onClick={handleClick}\n    >\n      <IconSunFilled className=\"hidden dark:block\" size={22} />\n      <IconMoonFilled className=\"dark:hidden\" size={22} />\n    </button>\n  );\n};\n"]}