{"version":3,"file":"index.js","sources":["../../../src/layout/Grid.tsx"],"sourcesContent":["import type { ReactNode, ForwardedRef } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\n\n// Types pour les donn√©es du tableau\nexport type GridData = {\n  id: string | number;\n  content: ReactNode;\n  colSpan?: {\n    default?: number;\n    sm?: number;\n    md?: number;\n    lg?: number;\n    xl?: number;\n  };\n};\n\ninterface GridProps {\n  children?: ReactNode;\n  data?: GridData[];\n  columns?: {\n    default?: number;\n    sm?: number;\n    md?: number;\n    lg?: number;\n    xl?: number;\n  };\n  gap?: {\n    x?: number;\n    y?: number;\n  };\n  className?: string;\n}\n\nexport const Grid = forwardRef(\n  (\n    {\n      children,\n      data,\n      columns = {\n        default: 1,\n        sm: 2,\n        md: 3,\n        lg: 4,\n        xl: 4,\n      },\n      gap = {\n        x: 4,\n        y: 4,\n      },\n      className,\n    }: GridProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) => {\n    const gridClasses = cn(\n      \"grid\",\n      `grid-cols-${columns.default}`,\n      columns.sm !== undefined && `sm:grid-cols-${columns.sm}`,\n      columns.md !== undefined && `md:grid-cols-${columns.md}`,\n      columns.lg !== undefined && `lg:grid-cols-${columns.lg}`,\n      columns.xl !== undefined && `xl:grid-cols-${columns.xl}`,\n      gap.x !== undefined && `gap-x-${gap.x}`,\n      gap.y !== undefined && `gap-y-${gap.y}`,\n      className,\n    );\n\n    return (\n      <div ref={ref} className={gridClasses}>\n        {data\n          ? data.map((item) => (\n              <GridItem key={item.id} colSpan={item.colSpan}>\n                {item.content}\n              </GridItem>\n            ))\n          : children}\n      </div>\n    );\n  },\n);\n\nGrid.displayName = \"Grid\";\n\ninterface GridItemProps {\n  children: ReactNode;\n  colSpan?: {\n    default?: number;\n    sm?: number;\n    md?: number;\n    lg?: number;\n    xl?: number;\n  };\n  className?: string;\n}\n\nexport const GridItem = forwardRef(\n  (\n    { children, colSpan, className }: GridItemProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) => {\n    const itemClasses = cn(\n      colSpan?.default !== undefined && `col-span-${colSpan.default}`,\n      colSpan?.sm !== undefined && `sm:col-span-${colSpan.sm}`,\n      colSpan?.md !== undefined && `md:col-span-${colSpan.md}`,\n      colSpan?.lg !== undefined && `lg:col-span-${colSpan.lg}`,\n      colSpan?.xl !== undefined && `xl:col-span-${colSpan.xl}`,\n      className,\n    );\n\n    return (\n      <div ref={ref} className={itemClasses}>\n        {children}\n      </div>\n    );\n  },\n);\n\nGridItem.displayName = \"GridItem\";\n"],"names":["Grid","forwardRef","children","data","columns","gap","className","ref","gridClasses","cn","jsx","item","GridItem","colSpan","itemClasses"],"mappings":";;;AAkCO,MAAMA,IAAOC;AAAA,EAClB,CACE;AAAA,IACE,UAAAC;AAAA,IACA,MAAAC;AAAA,IACA,SAAAC,IAAU;AAAA,MACR,SAAS;AAAA,MACT,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IACN;AAAA,IACA,KAAAC,IAAM;AAAA,MACJ,GAAG;AAAA,MACH,GAAG;AAAA,IACL;AAAA,IACA,WAAAC;AAAA,KAEFC,MACG;AACH,UAAMC,IAAcC;AAAA,MAClB;AAAA,MACA,aAAaL,EAAQ,OAAO;AAAA,MAC5BA,EAAQ,OAAO,UAAa,gBAAgBA,EAAQ,EAAE;AAAA,MACtDA,EAAQ,OAAO,UAAa,gBAAgBA,EAAQ,EAAE;AAAA,MACtDA,EAAQ,OAAO,UAAa,gBAAgBA,EAAQ,EAAE;AAAA,MACtDA,EAAQ,OAAO,UAAa,gBAAgBA,EAAQ,EAAE;AAAA,MACtDC,EAAI,MAAM,UAAa,SAASA,EAAI,CAAC;AAAA,MACrCA,EAAI,MAAM,UAAa,SAASA,EAAI,CAAC;AAAA,MACrCC;AAAA,IACF;AAGE,WAAA,gBAAAI,EAAC,SAAI,KAAAH,GAAU,WAAWC,GACvB,UACGL,IAAAA,EAAK,IAAI,CAACQ,wBACPC,GAAuB,EAAA,SAASD,EAAK,SACnC,UAAAA,EAAK,WADOA,EAAK,EAEpB,CACD,IACDT,EACN,CAAA;AAAA,EAAA;AAGN;AAEAF,EAAK,cAAc;AAcZ,MAAMY,IAAWX;AAAA,EACtB,CACE,EAAE,UAAAC,GAAU,SAAAW,GAAS,WAAAP,EAAA,GACrBC,MACG;AACH,UAAMO,IAAcL;AAAA,MAClBI,GAAS,YAAY,UAAa,YAAYA,EAAQ,OAAO;AAAA,MAC7DA,GAAS,OAAO,UAAa,eAAeA,EAAQ,EAAE;AAAA,MACtDA,GAAS,OAAO,UAAa,eAAeA,EAAQ,EAAE;AAAA,MACtDA,GAAS,OAAO,UAAa,eAAeA,EAAQ,EAAE;AAAA,MACtDA,GAAS,OAAO,UAAa,eAAeA,EAAQ,EAAE;AAAA,MACtDP;AAAA,IACF;AAEA,WACG,gBAAAI,EAAA,OAAA,EAAI,KAAAH,GAAU,WAAWO,GACvB,UAAAZ,GACH;AAAA,EAAA;AAGN;AAEAU,EAAS,cAAc;"}