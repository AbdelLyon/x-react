{"version":3,"file":"index.js","sources":["../../../src/hooks/useTimeout.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\ninterface UseTimeoutOptions {\n  autoInvoke?: boolean;\n}\n\ninterface UseTimeoutReturn {\n  start: (...params: unknown[]) => void;\n  clear: () => void;\n}\n\nexport const useTimeout = (\n  callback: (...params: unknown[]) => void,\n  delay: number,\n  { autoInvoke = false }: UseTimeoutOptions = {},\n): UseTimeoutReturn => {\n  const timeoutRef = useRef<number | null>(null);\n\n  const start = (...params: unknown[]): void => {\n    if (timeoutRef.current === undefined) {\n      timeoutRef.current = window.setTimeout(() => {\n        callback(...params);\n        timeoutRef.current = null;\n      }, delay);\n    }\n  };\n\n  const clear = (): void => {\n    if (timeoutRef.current !== null) {\n      window.clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n    return clear;\n  }, [delay]);\n\n  return { start, clear };\n};\n"],"names":["useTimeout","callback","delay","autoInvoke","timeoutRef","useRef","start","params","clear","useEffect"],"mappings":";AAWa,MAAAA,IAAa,CACxBC,GACAC,GACA,EAAE,YAAAC,IAAa,GAA6B,IAAA,OACvB;AACf,QAAAC,IAAaC,EAAsB,IAAI,GAEvCC,IAAQ,IAAIC,MAA4B;AACxC,IAAAH,EAAW,YAAY,WACdA,EAAA,UAAU,OAAO,WAAW,MAAM;AAC3C,MAAAH,EAAS,GAAGM,CAAM,GAClBH,EAAW,UAAU;AAAA,OACpBF,CAAK;AAAA,EAEZ,GAEMM,IAAQ,MAAY;AACpB,IAAAJ,EAAW,YAAY,SAClB,OAAA,aAAaA,EAAW,OAAO,GACtCA,EAAW,UAAU;AAAA,EAEzB;AAEA,SAAAK,EAAU,OACJN,KACIG,EAAA,GAEDE,IACN,CAACN,CAAK,CAAC,GAEH,EAAE,OAAAI,GAAO,OAAAE,EAAM;AACxB;"}