{"version":3,"file":"x-react.es.js","sources":["../../../src/hooks/useTimeout.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\ninterface UseTimeoutOptions {\n  autoInvoke?: boolean;\n}\n\ninterface UseTimeoutReturn {\n  start: (...params: unknown[]) => void;\n  clear: () => void;\n}\n\nexport const useTimeout = (\n  callback: (...params: unknown[]) => void,\n  delay: number,\n  { autoInvoke = false }: UseTimeoutOptions = {},\n): UseTimeoutReturn => {\n  const timeoutRef = useRef<number | null>(null);\n\n  const start = (...params: unknown[]): void => {\n    if (timeoutRef.current === undefined) {\n      timeoutRef.current = window.setTimeout(() => {\n        callback(...params);\n        timeoutRef.current = null;\n      }, delay);\n    }\n  };\n\n  const clear = (): void => {\n    if (timeoutRef.current !== null) {\n      window.clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n    return clear;\n  }, [delay]);\n\n  return { start, clear };\n};\n"],"names":[],"mappings":";AAWa,MAAA,aAAa,CACxB,UACA,OACA,EAAE,aAAa,MAA6B,IAAA,OACvB;AACf,QAAA,aAAa,OAAsB,IAAI;AAEvC,QAAA,QAAQ,IAAI,WAA4B;AACxC,QAAA,WAAW,YAAY,QAAW;AACzB,iBAAA,UAAU,OAAO,WAAW,MAAM;AAC3C,iBAAS,GAAG,MAAM;AAClB,mBAAW,UAAU;AAAA,SACpB,KAAK;AAAA,IAAA;AAAA,EAEZ;AAEA,QAAM,QAAQ,MAAY;AACpB,QAAA,WAAW,YAAY,MAAM;AACxB,aAAA,aAAa,WAAW,OAAO;AACtC,iBAAW,UAAU;AAAA,IAAA;AAAA,EAEzB;AAEA,YAAU,MAAM;AACd,QAAI,YAAY;AACR,YAAA;AAAA,IAAA;AAED,WAAA;AAAA,EAAA,GACN,CAAC,KAAK,CAAC;AAEH,SAAA,EAAE,OAAO,MAAM;AACxB;"}