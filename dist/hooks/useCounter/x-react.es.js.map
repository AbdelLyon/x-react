{"version":3,"file":"x-react.es.js","sources":["../../../src/hooks/useCounter.ts"],"sourcesContent":["import { limitValue } from \"@/utils\";\nimport { useState } from \"react\";\n\nconst DEFAULT_OPTIONS = {\n  min: -Infinity,\n  max: Infinity,\n};\n\nexport const useCounter = (\n  initialValue = 0,\n  options?: Partial<{ min: number; max: number }>,\n): [\n  number,\n  {\n    increment: () => void;\n    decrement: () => void;\n    set: (value: number) => void;\n    reset: () => void;\n  },\n] => {\n  const { min, max } = { ...DEFAULT_OPTIONS, ...options };\n  const [count, setCount] = useState<number>(\n    limitValue(initialValue, min, max),\n  );\n\n  const increment = (): void =>\n    setCount((current) => limitValue(current + 1, min, max));\n  const decrement = (): void =>\n    setCount((current) => limitValue(current - 1, min, max));\n  const set = (value: number): void => setCount(limitValue(value, min, max));\n  const reset = (): void => setCount(limitValue(initialValue, min, max));\n\n  return [count, { increment, decrement, set, reset }] as const;\n};\n"],"names":[],"mappings":";;AAGA,MAAM,kBAAkB;AAAA,EACtB,KAAK;AAAA,EACL,KAAK;AACP;AAEO,MAAM,aAAa,CACxB,eAAe,GACf,YASG;AACG,QAAA,EAAE,KAAK,IAAI,IAAI,EAAE,GAAG,iBAAiB,GAAG,QAAQ;AAChD,QAAA,CAAC,OAAO,QAAQ,IAAI;AAAA,IACxB,WAAW,cAAc,KAAK,GAAG;AAAA,EACnC;AAEM,QAAA,YAAY,MAChB,SAAS,CAAC,YAAY,WAAW,UAAU,GAAG,KAAK,GAAG,CAAC;AACnD,QAAA,YAAY,MAChB,SAAS,CAAC,YAAY,WAAW,UAAU,GAAG,KAAK,GAAG,CAAC;AACnD,QAAA,MAAM,CAAC,UAAwB,SAAS,WAAW,OAAO,KAAK,GAAG,CAAC;AACzE,QAAM,QAAQ,MAAY,SAAS,WAAW,cAAc,KAAK,GAAG,CAAC;AAErE,SAAO,CAAC,OAAO,EAAE,WAAW,WAAW,KAAK,OAAO;AACrD;"}