{"version":3,"file":"index.js","sources":["../../../src/hooks/useMergedRef.ts"],"sourcesContent":["import type { Ref } from \"react\";\n\ntype PossibleRef<T> = Ref<T> | undefined;\ntype MergedRefCallback<T> = (node: T | null) => void;\n\nconst assignRef = <T>(ref: PossibleRef<T>, value: T | null): void => {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (typeof ref === \"object\" && ref !== null && \"current\" in ref) {\n    ref.current = value;\n  }\n};\n\nconst mergeRefs = <T>(...refs: PossibleRef<T>[]): MergedRefCallback<T> => {\n  return (node: T | null): void => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n};\n\nexport const useMergedRef = <T>(\n  ...refs: PossibleRef<T>[]\n): MergedRefCallback<T> => {\n  return mergeRefs(...refs);\n};\n"],"names":["assignRef","ref","value","mergeRefs","refs","node","useMergedRef"],"mappings":"AAKA,MAAMA,IAAY,CAAIC,GAAqBC,MAA0B;AAC/D,EAAA,OAAOD,KAAQ,aACjBA,EAAIC,CAAK,IACA,OAAOD,KAAQ,YAAYA,MAAQ,QAAQ,aAAaA,MACjEA,EAAI,UAAUC;AAElB,GAEMC,IAAY,IAAOC,MAChB,CAACC,MAAyB;AAC/B,EAAAD,EAAK,QAAQ,CAACH,MAAQD,EAAUC,GAAKI,CAAI,CAAC;AAC5C,GAGWC,IAAe,IACvBF,MAEID,EAAU,GAAGC,CAAI;"}