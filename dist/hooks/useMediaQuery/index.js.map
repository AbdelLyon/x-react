{"version":3,"file":"index.js","sources":["../../../src/hooks/useMediaQuery.ts"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from \"react\";\n\nexport type UseMediaQueryOptions = {\n  getInitialValueInEffect?: boolean;\n  initialValue?: boolean;\n};\n\nfunction attachMediaListener(\n  query: MediaQueryList,\n  callback: (event: MediaQueryListEvent) => void,\n): () => void {\n  query.addEventListener(\"change\", callback);\n  return () => query.removeEventListener(\"change\", callback);\n}\n\nfunction getInitialValue(query: string, initialValue?: boolean): boolean {\n  if (typeof initialValue === \"boolean\") {\n    return initialValue;\n  }\n\n  if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n    try {\n      return window.matchMedia(query).matches;\n    } catch (e) {\n      console.warn(\"Error while matching media query:\", e);\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport function useMediaQuery(\n  query: string,\n  options: UseMediaQueryOptions = {},\n): boolean {\n  const { getInitialValueInEffect = true, initialValue } = options;\n\n  const [matches, setMatches] = useState<boolean>(() =>\n    getInitialValueInEffect\n      ? (initialValue ?? false)\n      : getInitialValue(query, initialValue),\n  );\n\n  const queryRef = useRef<MediaQueryList | null>(null);\n  const handleChange = useCallback((event: MediaQueryListEvent) => {\n    setMatches(event.matches);\n  }, []);\n\n  useEffect(() => {\n    if (typeof window === \"undefined\" || !(\"matchMedia\" in window)) {\n      return undefined;\n    }\n\n    try {\n      queryRef.current = window.matchMedia(query);\n      if (getInitialValueInEffect) {\n        setMatches(queryRef.current.matches);\n      }\n\n      return attachMediaListener(queryRef.current, handleChange);\n    } catch (e) {\n      console.error(\"Error setting up media query:\", e);\n      return undefined;\n    }\n  }, [query, getInitialValueInEffect, handleChange]);\n\n  return matches;\n}\n"],"names":["attachMediaListener","query","callback","getInitialValue","initialValue","e","useMediaQuery","options","getInitialValueInEffect","matches","setMatches","useState","queryRef","useRef","handleChange","useCallback","event","useEffect"],"mappings":";AAOA,SAASA,EACPC,GACAC,GACY;AACN,SAAAD,EAAA,iBAAiB,UAAUC,CAAQ,GAClC,MAAMD,EAAM,oBAAoB,UAAUC,CAAQ;AAC3D;AAEA,SAASC,EAAgBF,GAAeG,GAAiC;AACnE,MAAA,OAAOA,KAAiB;AACnB,WAAAA;AAGT,MAAI,OAAO,SAAW,OAAe,gBAAgB;AAC/C,QAAA;AACK,aAAA,OAAO,WAAWH,CAAK,EAAE;AAAA,aACzBI,GAAG;AACF,qBAAA,KAAK,qCAAqCA,CAAC,GAC5C;AAAA,IAAA;AAIJ,SAAA;AACT;AAEO,SAASC,EACdL,GACAM,IAAgC,IACvB;AACT,QAAM,EAAE,yBAAAC,IAA0B,IAAM,cAAAJ,EAAiB,IAAAG,GAEnD,CAACE,GAASC,CAAU,IAAIC;AAAA,IAAkB,MAC9CH,IACKJ,KAAgB,KACjBD,EAAgBF,GAAOG,CAAY;AAAA,EACzC,GAEMQ,IAAWC,EAA8B,IAAI,GAC7CC,IAAeC,EAAY,CAACC,MAA+B;AAC/D,IAAAN,EAAWM,EAAM,OAAO;AAAA,EAC1B,GAAG,EAAE;AAEL,SAAAC,EAAU,MAAM;AACd,QAAI,SAAO,SAAW,OAAe,EAAE,gBAAgB;AAInD,UAAA;AACO,eAAAL,EAAA,UAAU,OAAO,WAAWX,CAAK,GACtCO,KACSE,EAAAE,EAAS,QAAQ,OAAO,GAG9BZ,EAAoBY,EAAS,SAASE,CAAY;AAAA,eAClDT,GAAG;AACF,gBAAA,MAAM,iCAAiCA,CAAC;AACzC;AAAA,MAAA;AAAA,EAER,GAAA,CAACJ,GAAOO,GAAyBM,CAAY,CAAC,GAE1CL;AACT;"}