{"version":3,"file":"x-react.es.js","sources":["../../../src/hooks/useLocalStorage.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\n\ninterface StorageProperties<T> {\n  key: string;\n  defaultValue: T;\n}\n\nfunction getStorageValue<T>(key: string, defaultValue: T): T {\n  if (typeof window === \"undefined\") {\n    return defaultValue;\n  }\n\n  try {\n    const item = window.localStorage.getItem(key);\n    if (item === null) {\n      return defaultValue;\n    }\n    return JSON.parse(item);\n  } catch (error) {\n    console.warn(`Error reading localStorage key \"${key}\":`, error);\n    return defaultValue;\n  }\n}\n\nexport const useLocalStorage = <T>(\n  props: StorageProperties<T>,\n): readonly [T, (value: T | ((val: T) => T)) => void, () => void] => {\n  const { key, defaultValue } = props;\n\n  const [storedValue, setStoredValue] = useState<T>(() =>\n    getStorageValue(key, defaultValue),\n  );\n\n  const setValue = useCallback(\n    (value: T | ((val: T) => T)) => {\n      try {\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        setStoredValue(valueToStore);\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        console.warn(`Error setting localStorage key \"${key}\":`, error);\n      }\n    },\n    [key, storedValue],\n  );\n\n  const removeValue = useCallback(() => {\n    try {\n      window.localStorage.removeItem(key);\n      setStoredValue(defaultValue);\n    } catch (error) {\n      console.warn(`Error removing localStorage key \"${key}\":`, error);\n    }\n  }, [key, defaultValue]);\n\n  // Synchroniser avec les autres onglets/fenÃªtres\n  useEffect(() => {\n    const handleStorageChange = (event: StorageEvent): void => {\n      if (event.key === key && event.newValue !== null) {\n        try {\n          setStoredValue(JSON.parse(event.newValue));\n        } catch {\n          setStoredValue(defaultValue);\n        }\n      } else if (event.key === key) {\n        setStoredValue(defaultValue);\n      }\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, [key, defaultValue]);\n\n  return [storedValue, setValue, removeValue] as const;\n};\n"],"names":[],"mappings":";AAOA,SAAS,gBAAmB,KAAa,cAAoB;AACvD,MAAA,OAAO,WAAW,aAAa;AAC1B,WAAA;AAAA,EAAA;AAGL,MAAA;AACF,UAAM,OAAO,OAAO,aAAa,QAAQ,GAAG;AAC5C,QAAI,SAAS,MAAM;AACV,aAAA;AAAA,IAAA;AAEF,WAAA,KAAK,MAAM,IAAI;AAAA,WACf,OAAO;AACd,YAAQ,KAAK,mCAAmC,GAAG,MAAM,KAAK;AACvD,WAAA;AAAA,EAAA;AAEX;AAEa,MAAA,kBAAkB,CAC7B,UACmE;AAC7D,QAAA,EAAE,KAAK,aAAA,IAAiB;AAExB,QAAA,CAAC,aAAa,cAAc,IAAI;AAAA,IAAY,MAChD,gBAAgB,KAAK,YAAY;AAAA,EACnC;AAEA,QAAM,WAAW;AAAA,IACf,CAAC,UAA+B;AAC1B,UAAA;AACF,cAAM,eACJ,iBAAiB,WAAW,MAAM,WAAW,IAAI;AACnD,uBAAe,YAAY;AAC3B,eAAO,aAAa,QAAQ,KAAK,KAAK,UAAU,YAAY,CAAC;AAAA,eACtD,OAAO;AACd,gBAAQ,KAAK,mCAAmC,GAAG,MAAM,KAAK;AAAA,MAAA;AAAA,IAElE;AAAA,IACA,CAAC,KAAK,WAAW;AAAA,EACnB;AAEM,QAAA,cAAc,YAAY,MAAM;AAChC,QAAA;AACK,aAAA,aAAa,WAAW,GAAG;AAClC,qBAAe,YAAY;AAAA,aACpB,OAAO;AACd,cAAQ,KAAK,oCAAoC,GAAG,MAAM,KAAK;AAAA,IAAA;AAAA,EACjE,GACC,CAAC,KAAK,YAAY,CAAC;AAGtB,YAAU,MAAM;AACR,UAAA,sBAAsB,CAAC,UAA8B;AACzD,UAAI,MAAM,QAAQ,OAAO,MAAM,aAAa,MAAM;AAC5C,YAAA;AACF,yBAAe,KAAK,MAAM,MAAM,QAAQ,CAAC;AAAA,QAAA,QACnC;AACN,yBAAe,YAAY;AAAA,QAAA;AAAA,MAC7B,WACS,MAAM,QAAQ,KAAK;AAC5B,uBAAe,YAAY;AAAA,MAAA;AAAA,IAE/B;AAEO,WAAA,iBAAiB,WAAW,mBAAmB;AACtD,WAAO,MAAM,OAAO,oBAAoB,WAAW,mBAAmB;AAAA,EAAA,GACrE,CAAC,KAAK,YAAY,CAAC;AAEf,SAAA,CAAC,aAAa,UAAU,WAAW;AAC5C;"}