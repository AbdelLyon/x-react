{"version":3,"file":"x-react.es.js","sources":["../../../src/hooks/useIntersection.ts"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nexport const useIntersection = <T extends HTMLElement = HTMLElement>(\n  options?: ConstructorParameters<typeof IntersectionObserver>[1],\n): {\n  ref: (element: T | null) => void;\n  entry: IntersectionObserverEntry | null;\n} => {\n  const [entry, setEntry] = useState<IntersectionObserverEntry | null>(null);\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const ref = (element: T | null): void => {\n    if (observer.current) {\n      observer.current.disconnect();\n      observer.current = null;\n    }\n\n    if (element === null) {\n      setEntry(null);\n      return;\n    }\n\n    observer.current = new IntersectionObserver(([_entry]) => {\n      setEntry(_entry);\n    }, options);\n\n    observer.current.observe(element);\n  };\n\n  return { ref, entry };\n};\n"],"names":[],"mappings":";AAEa,MAAA,kBAAkB,CAC7B,YAIG;AACH,QAAM,CAAC,OAAO,QAAQ,IAAI,SAA2C,IAAI;AAEnE,QAAA,WAAW,OAAoC,IAAI;AAEnD,QAAA,MAAM,CAAC,YAA4B;AACvC,QAAI,SAAS,SAAS;AACpB,eAAS,QAAQ,WAAW;AAC5B,eAAS,UAAU;AAAA,IAAA;AAGrB,QAAI,YAAY,MAAM;AACpB,eAAS,IAAI;AACb;AAAA,IAAA;AAGF,aAAS,UAAU,IAAI,qBAAqB,CAAC,CAAC,MAAM,MAAM;AACxD,eAAS,MAAM;AAAA,OACd,OAAO;AAED,aAAA,QAAQ,QAAQ,OAAO;AAAA,EAClC;AAEO,SAAA,EAAE,KAAK,MAAM;AACtB;"}