{"version":3,"file":"index.js","sources":["../../../src/hooks/useIntersection.ts"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nexport const useIntersection = <T extends HTMLElement = HTMLElement>(\n  options?: ConstructorParameters<typeof IntersectionObserver>[1],\n): {\n  ref: (element: T | null) => void;\n  entry: IntersectionObserverEntry | null;\n} => {\n  const [entry, setEntry] = useState<IntersectionObserverEntry | null>(null);\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const ref = (element: T | null): void => {\n    if (observer.current) {\n      observer.current.disconnect();\n      observer.current = null;\n    }\n\n    if (element === null) {\n      setEntry(null);\n      return;\n    }\n\n    observer.current = new IntersectionObserver(([_entry]) => {\n      setEntry(_entry);\n    }, options);\n\n    observer.current.observe(element);\n  };\n\n  return { ref, entry };\n};\n"],"names":["useIntersection","options","entry","setEntry","useState","observer","useRef","element","_entry"],"mappings":";AAEa,MAAAA,IAAkB,CAC7BC,MAIG;AACH,QAAM,CAACC,GAAOC,CAAQ,IAAIC,EAA2C,IAAI,GAEnEC,IAAWC,EAAoC,IAAI;AAoBlD,SAAA,EAAE,KAlBG,CAACC,MAA4B;AAMvC,QALIF,EAAS,YACXA,EAAS,QAAQ,WAAW,GAC5BA,EAAS,UAAU,OAGjBE,MAAY,MAAM;AACpB,MAAAJ,EAAS,IAAI;AACb;AAAA,IAAA;AAGF,IAAAE,EAAS,UAAU,IAAI,qBAAqB,CAAC,CAACG,CAAM,MAAM;AACxD,MAAAL,EAASK,CAAM;AAAA,OACdP,CAAO,GAEDI,EAAA,QAAQ,QAAQE,CAAO;AAAA,EAClC,GAEc,OAAAL,EAAM;AACtB;"}