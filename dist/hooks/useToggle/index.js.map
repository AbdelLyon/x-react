{"version":3,"file":"index.js","sources":["../../../src/hooks/useToggle.ts"],"sourcesContent":["import { useReducer } from \"react\";\n\ntype ToggleReducerAction<T> = T | ((prevValue: T) => T);\ntype ToggleReducer<T> = (\n  state: readonly T[],\n  action: ToggleReducerAction<T>,\n) => T[];\ntype ToggleReturn<T> = readonly [T, (value?: ToggleReducerAction<T>) => void];\n\nexport const useToggle = <T = boolean>(\n  options: readonly T[] = [false, true] as unknown as readonly T[],\n): ToggleReturn<T> => {\n  const reducer: ToggleReducer<T> = (state, action) => {\n    const value = action instanceof Function ? action(state[0]) : action;\n    const index = Math.abs(state.indexOf(value));\n    return [...state.slice(index), ...state.slice(0, index)];\n  };\n\n  const [[currentOption], toggle] = useReducer(reducer, [...options]);\n\n  return [\n    currentOption,\n    toggle as (value?: ToggleReducerAction<T>) => void,\n  ] as const;\n};\n"],"names":["useToggle","options","reducer","state","action","value","index","currentOption","toggle","useReducer"],"mappings":";AASO,MAAMA,IAAY,CACvBC,IAAwB,CAAC,IAAO,EAAI,MAChB;AACd,QAAAC,IAA4B,CAACC,GAAOC,MAAW;AACnD,UAAMC,IAAQD,aAAkB,WAAWA,EAAOD,EAAM,CAAC,CAAC,IAAIC,GACxDE,IAAQ,KAAK,IAAIH,EAAM,QAAQE,CAAK,CAAC;AACpC,WAAA,CAAC,GAAGF,EAAM,MAAMG,CAAK,GAAG,GAAGH,EAAM,MAAM,GAAGG,CAAK,CAAC;AAAA,EACzD,GAEM,CAAC,CAACC,CAAa,GAAGC,CAAM,IAAIC,EAAWP,GAAS,CAAC,GAAGD,CAAO,CAAC;AAE3D,SAAA;AAAA,IACLM;AAAA,IACAC;AAAA,EACF;AACF;"}