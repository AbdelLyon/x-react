{"version":3,"file":"index.js","sources":["../../../src/hooks/useEvent.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\n\nexport const useEvent = <\n  K extends keyof HTMLElementEventMap,\n  T extends HTMLElement,\n>(\n  type: K,\n  listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => void,\n  options?: boolean | AddEventListenerOptions,\n): React.RefObject<T | null> => {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.addEventListener(type, listener, options);\n      const currentRef = ref.current;\n      return () => currentRef?.removeEventListener(type, listener, options);\n    }\n    return undefined;\n  }, [listener, options, type]);\n\n  return ref;\n};\n"],"names":["useEvent","type","listener","options","ref","useRef","useEffect","currentRef"],"mappings":";AAEO,MAAMA,IAAW,CAItBC,GACAC,GACAC,MAC8B;AACxB,QAAAC,IAAMC,EAAU,IAAI;AAE1B,SAAAC,EAAU,MAAM;AACd,QAAIF,EAAI,SAAS;AACf,MAAAA,EAAI,QAAQ,iBAAiBH,GAAMC,GAAUC,CAAO;AACpD,YAAMI,IAAaH,EAAI;AACvB,aAAO,MAAMG,GAAY,oBAAoBN,GAAMC,GAAUC,CAAO;AAAA,IAAA;AAAA,EAGrE,GAAA,CAACD,GAAUC,GAASF,CAAI,CAAC,GAErBG;AACT;"}