{"version":3,"file":"index.js","sources":["../../../src/hooks/useDebouncedValue.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nexport const useDebouncedValue = <T>(\n  value: T,\n  wait: number,\n  options = { leading: false },\n): readonly [T, () => void] => {\n  const [_value, setValue] = useState(value);\n  const mountedRef = useRef(false);\n  const timeoutRef = useRef<number | null>(null);\n  const cooldownRef = useRef(false);\n\n  const cancel = (): void => {\n    if (timeoutRef.current !== null) {\n      window.clearTimeout(timeoutRef.current);\n    }\n  };\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      if (!cooldownRef.current && options.leading) {\n        cooldownRef.current = true;\n        setValue(value);\n      } else {\n        cancel();\n        timeoutRef.current = window.setTimeout(() => {\n          cooldownRef.current = false;\n          setValue(value);\n        }, wait);\n      }\n    }\n  }, [value, options.leading, wait]);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return cancel;\n  }, []);\n\n  return [_value, cancel] as const;\n};\n"],"names":["useDebouncedValue","value","wait","options","_value","setValue","useState","mountedRef","useRef","timeoutRef","cooldownRef","cancel","useEffect"],"mappings":";AAEa,MAAAA,IAAoB,CAC/BC,GACAC,GACAC,IAAU,EAAE,SAAS,SACQ;AAC7B,QAAM,CAACC,GAAQC,CAAQ,IAAIC,EAASL,CAAK,GACnCM,IAAaC,EAAO,EAAK,GACzBC,IAAaD,EAAsB,IAAI,GACvCE,IAAcF,EAAO,EAAK,GAE1BG,IAAS,MAAY;AACrB,IAAAF,EAAW,YAAY,QAClB,OAAA,aAAaA,EAAW,OAAO;AAAA,EAE1C;AAEA,SAAAG,EAAU,MAAM;AACd,IAAIL,EAAW,YACT,CAACG,EAAY,WAAWP,EAAQ,WAClCO,EAAY,UAAU,IACtBL,EAASJ,CAAK,MAEPU,EAAA,GACIF,EAAA,UAAU,OAAO,WAAW,MAAM;AAC3C,MAAAC,EAAY,UAAU,IACtBL,EAASJ,CAAK;AAAA,OACbC,CAAI;AAAA,KAGV,CAACD,GAAOE,EAAQ,SAASD,CAAI,CAAC,GAEjCU,EAAU,OACRL,EAAW,UAAU,IACdI,IACN,EAAE,GAEE,CAACP,GAAQO,CAAM;AACxB;"}