{"version":3,"file":"index.js","sources":["../../../src/hooks/useInfiniteScroll.ts"],"sourcesContent":["import { debounce } from \"@/utils\";\nimport { useLayoutEffect, useRef, useCallback } from \"react\";\n\nexport interface UseInfiniteScrollProps {\n  isEnabled?: boolean;\n  hasMore?: boolean;\n  distance?: number;\n  shouldUseLoader?: boolean;\n  onLoadMore?: () => void;\n}\n\nexport const useInfiniteScroll = (\n  props: UseInfiniteScrollProps = {},\n): readonly [React.RefObject<HTMLElement>, React.RefObject<HTMLElement>] => {\n  const {\n    hasMore = true,\n    distance = 250,\n    isEnabled = true,\n    shouldUseLoader = true,\n    onLoadMore,\n  } = props;\n\n  const scrollContainerRef = useRef<HTMLElement>(null);\n  const loaderRef = useRef<HTMLElement>(null);\n  const observerRef = useRef<IntersectionObserver | null>(null);\n  const isLoadingRef = useRef(false);\n\n  const loadMore = useCallback(() => {\n    let timer: ReturnType<typeof setTimeout>;\n\n    if (!isLoadingRef.current && hasMore && onLoadMore) {\n      isLoadingRef.current = true;\n      onLoadMore();\n      timer = setTimeout(() => {\n        isLoadingRef.current = false;\n      }, 100);\n    }\n\n    return () => clearTimeout(timer);\n  }, [hasMore, onLoadMore]);\n\n  useLayoutEffect(() => {\n    const scrollContainerNode = scrollContainerRef.current;\n\n    if (!isEnabled || !scrollContainerNode || !hasMore) {\n      return;\n    }\n\n    if (shouldUseLoader) {\n      const loaderNode = loaderRef.current;\n\n      if (!loaderNode) {\n        return;\n      }\n\n      const options = {\n        root: scrollContainerNode,\n        rootMargin: `0px 0px ${distance}px 0px`,\n        threshold: 0.1,\n      };\n\n      const observer = new IntersectionObserver((entries) => {\n        const [entry] = entries;\n\n        if (entry.isIntersecting) {\n          loadMore();\n        }\n      }, options);\n\n      observer.observe(loaderNode);\n      observerRef.current = observer;\n\n      return () => {\n        if (observerRef.current) {\n          observerRef.current.disconnect();\n        }\n      };\n    }\n\n    const debouncedCheckIfNearBottom = debounce(() => {\n      if (\n        scrollContainerNode.scrollHeight - scrollContainerNode.scrollTop <=\n        scrollContainerNode.clientHeight + distance\n      ) {\n        loadMore();\n      }\n    }, 100);\n\n    scrollContainerNode.addEventListener(\"scroll\", debouncedCheckIfNearBottom);\n\n    return () => {\n      scrollContainerNode.removeEventListener(\n        \"scroll\",\n        debouncedCheckIfNearBottom,\n      );\n    };\n  }, [hasMore, distance, isEnabled, shouldUseLoader, loadMore]);\n\n  return [loaderRef, scrollContainerRef] as const as readonly [\n    React.RefObject<HTMLElement>,\n    React.RefObject<HTMLElement>,\n  ];\n};\nexport type UseInfiniteScrollReturn = ReturnType<typeof useInfiniteScroll>;\n"],"names":["useInfiniteScroll","props","hasMore","distance","isEnabled","shouldUseLoader","onLoadMore","scrollContainerRef","useRef","loaderRef","observerRef","isLoadingRef","loadMore","useCallback","timer","useLayoutEffect","scrollContainerNode","loaderNode","options","observer","entries","entry","debouncedCheckIfNearBottom","debounce"],"mappings":";;AAWO,MAAMA,IAAoB,CAC/BC,IAAgC,OAC0C;AACpE,QAAA;AAAA,IACJ,SAAAC,IAAU;AAAA,IACV,UAAAC,IAAW;AAAA,IACX,WAAAC,IAAY;AAAA,IACZ,iBAAAC,IAAkB;AAAA,IAClB,YAAAC;AAAA,EAAA,IACEL,GAEEM,IAAqBC,EAAoB,IAAI,GAC7CC,IAAYD,EAAoB,IAAI,GACpCE,IAAcF,EAAoC,IAAI,GACtDG,IAAeH,EAAO,EAAK,GAE3BI,IAAWC,EAAY,MAAM;AAC7B,QAAAC;AAEJ,WAAI,CAACH,EAAa,WAAWT,KAAWI,MACtCK,EAAa,UAAU,IACZL,EAAA,GACXQ,IAAQ,WAAW,MAAM;AACvB,MAAAH,EAAa,UAAU;AAAA,OACtB,GAAG,IAGD,MAAM,aAAaG,CAAK;AAAA,EAAA,GAC9B,CAACZ,GAASI,CAAU,CAAC;AAExB,SAAAS,EAAgB,MAAM;AACpB,UAAMC,IAAsBT,EAAmB;AAE/C,QAAI,CAACH,KAAa,CAACY,KAAuB,CAACd;AACzC;AAGF,QAAIG,GAAiB;AACnB,YAAMY,IAAaR,EAAU;AAE7B,UAAI,CAACQ;AACH;AAGF,YAAMC,IAAU;AAAA,QACd,MAAMF;AAAA,QACN,YAAY,WAAWb,CAAQ;AAAA,QAC/B,WAAW;AAAA,MACb,GAEMgB,IAAW,IAAI,qBAAqB,CAACC,MAAY;AAC/C,cAAA,CAACC,CAAK,IAAID;AAEhB,QAAIC,EAAM,kBACCT,EAAA;AAAA,SAEVM,CAAO;AAEV,aAAAC,EAAS,QAAQF,CAAU,GAC3BP,EAAY,UAAUS,GAEf,MAAM;AACX,QAAIT,EAAY,WACdA,EAAY,QAAQ,WAAW;AAAA,MAEnC;AAAA,IAAA;AAGI,UAAAY,IAA6BC,EAAS,MAAM;AAChD,MACEP,EAAoB,eAAeA,EAAoB,aACvDA,EAAoB,eAAeb,KAE1BS,EAAA;AAAA,OAEV,GAAG;AAEc,WAAAI,EAAA,iBAAiB,UAAUM,CAA0B,GAElE,MAAM;AACS,MAAAN,EAAA;AAAA,QAClB;AAAA,QACAM;AAAA,MACF;AAAA,IACF;AAAA,EAAA,GACC,CAACpB,GAASC,GAAUC,GAAWC,GAAiBO,CAAQ,CAAC,GAErD,CAACH,GAAWF,CAAkB;AAIvC;"}