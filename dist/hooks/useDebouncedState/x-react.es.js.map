{"version":3,"file":"x-react.es.js","sources":["../../../src/hooks/useDebouncedState.ts"],"sourcesContent":["import type { SetStateAction } from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport const useDebouncedState = <T>(\n  defaultValue: T,\n  wait: number,\n  options = { leading: false },\n): readonly [T, (newValue: SetStateAction<T>) => void] => {\n  const [value, setValue] = useState(defaultValue);\n  const timeoutRef = useRef<number | null>(null);\n  const leadingRef = useRef(true);\n\n  const clearTimeout = (): void => {\n    if (timeoutRef.current !== null) {\n      window.clearTimeout(timeoutRef.current);\n    }\n  };\n  useEffect(() => clearTimeout, []);\n\n  const debouncedSetValue = (newValue: SetStateAction<T>): void => {\n    clearTimeout();\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(() => {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n    leadingRef.current = false;\n  };\n\n  return [value, debouncedSetValue] as const;\n};\n"],"names":[],"mappings":";AAGa,MAAA,oBAAoB,CAC/B,cACA,MACA,UAAU,EAAE,SAAS,YACmC;AACxD,QAAM,CAAC,OAAO,QAAQ,IAAI,SAAS,YAAY;AACzC,QAAA,aAAa,OAAsB,IAAI;AACvC,QAAA,aAAa,OAAO,IAAI;AAE9B,QAAM,eAAe,MAAY;AAC3B,QAAA,WAAW,YAAY,MAAM;AACxB,aAAA,aAAa,WAAW,OAAO;AAAA,IAAA;AAAA,EAE1C;AACU,YAAA,MAAM,cAAc,EAAE;AAE1B,QAAA,oBAAoB,CAAC,aAAsC;AAClD,iBAAA;AACT,QAAA,WAAW,WAAW,QAAQ,SAAS;AACzC,eAAS,QAAQ;AAAA,IAAA,OACZ;AACM,iBAAA,UAAU,OAAO,WAAW,MAAM;AAC3C,mBAAW,UAAU;AACrB,iBAAS,QAAQ;AAAA,SAChB,IAAI;AAAA,IAAA;AAET,eAAW,UAAU;AAAA,EACvB;AAEO,SAAA,CAAC,OAAO,iBAAiB;AAClC;"}