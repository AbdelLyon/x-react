{"version":3,"file":"hooks.es.js","sources":["../../src/hooks/useLayoutConfig.ts","../../src/hooks/useClickOutside.ts","../../src/hooks/useFocusDetection.ts","../../src/hooks/useWindowEvent.ts","../../src/hooks/useIntersection.ts","../../src/hooks/useCounter.ts","../../src/hooks/useCallbackRef.ts","../../src/hooks/useDebouncedCallback.ts","../../src/hooks/useDebouncedState.ts","../../src/hooks/useDebouncedValue.ts","../../src/hooks/useEvent.ts","../../src/hooks/usePreviousValue.ts","../../src/hooks/useRerender.ts","../../src/hooks/useReactiveSet.ts","../../src/hooks/useStateHistory.ts","../../src/hooks/useToggle.ts","../../src/hooks/useMounted.ts","../../src/hooks/useTimeout.ts","../../src/hooks/useInterval.ts","../../src/hooks/useLocalStorage.ts","../../src/hooks/useMergedRef.ts","../../src/hooks/useDisclosure.ts"],"sourcesContent":["type UseLayoutConfigOptions<T> = {\n  navbar?: Partial<T>;\n  sidebar?: Partial<T>;\n};\n\ntype LayoutConfig<T> = {\n  navbar?: Partial<T>;\n  sidebar?: Partial<T>;\n};\n\nexport const useLayoutConfig = <T extends object>(\n  options: UseLayoutConfigOptions<T> = {},\n): LayoutConfig<T> => {\n  const { navbar, sidebar } = options;\n\n  return {\n    navbar: navbar\n      ? {\n          className: \"fixed top-0 z-40\",\n          ...navbar,\n        }\n      : undefined,\n    sidebar: sidebar\n      ? {\n          className: \"fixed z-30\",\n          ...sidebar,\n        }\n      : undefined,\n  };\n};\n","import { useEffect, useRef } from \"react\";\n\nconst DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\n\nexport const useClickOutside = <T extends HTMLElement>(\n  handler: () => void,\n  events?: string[] | null,\n  nodes?: (HTMLElement | null)[],\n): React.RefObject<T | null> => {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    const listener = (event: Event): void => {\n      const { target } = event ?? {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore =\n          (target as HTMLElement)?.hasAttribute(\"data-ignore-outside-clicks\") ||\n          (!document.body.contains(target as Node) &&\n            (target as HTMLElement).tagName !== \"HTML\");\n        const shouldTrigger = nodes.every(\n          (node) => !!node && !event.composedPath().includes(node),\n        );\n        if (shouldTrigger && !shouldIgnore) {\n          handler();\n        }\n      } else if (ref.current && !ref.current.contains(target as Node)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach((fn) =>\n      document.addEventListener(fn, listener),\n    );\n\n    return () => {\n      (events || DEFAULT_EVENTS).forEach((fn) =>\n        document.removeEventListener(fn, listener),\n      );\n    };\n  }, [ref, handler, nodes]);\n\n  return ref;\n};\n","import { useEffect, useRef, useState } from \"react\";\n\nexport interface UseFocusDetectionOptions {\n  onFocus?: (event: FocusEvent) => void;\n  onBlur?: (event: FocusEvent) => void;\n}\n\nconst containsRelatedTarget = (event: FocusEvent): boolean => {\n  if (\n    event.currentTarget instanceof HTMLElement &&\n    event.relatedTarget instanceof HTMLElement\n  ) {\n    return event.currentTarget.contains(event.relatedTarget);\n  }\n  return false;\n};\n\nexport const useFocusDetection = <T extends HTMLElement>({\n  onBlur,\n  onFocus,\n}: UseFocusDetectionOptions = {}): {\n  ref: React.RefObject<T>;\n  focused: boolean;\n} => {\n  const ref = useRef<T>(null);\n  const [focused, setFocused] = useState(false);\n  const focusedRef = useRef(false);\n\n  const _setFocused = (value: boolean): void => {\n    setFocused(value);\n    focusedRef.current = value;\n  };\n\n  useEffect(() => {\n    const handleFocusIn = (event: FocusEvent): void => {\n      if (!focusedRef.current) {\n        _setFocused(true);\n        onFocus?.(event);\n      }\n    };\n\n    const handleFocusOut = (event: FocusEvent): void => {\n      if (focusedRef.current && !containsRelatedTarget(event)) {\n        _setFocused(false);\n        onBlur?.(event);\n      }\n    };\n\n    if (ref.current) {\n      const element = ref.current;\n      element.addEventListener(\"focusin\", handleFocusIn);\n      element.addEventListener(\"focusout\", handleFocusOut);\n\n      return () => {\n        element.removeEventListener(\"focusin\", handleFocusIn);\n        element.removeEventListener(\"focusout\", handleFocusOut);\n      };\n    }\n  }, [onFocus, onBlur]);\n\n  return { ref: ref as React.RefObject<T>, focused };\n};\n","import { useEffect } from \"react\";\n\nexport const useWindowEvent = <K extends string>(\n  type: K,\n  listener: K extends keyof WindowEventMap\n    ? (this: Window, ev: WindowEventMap[K]) => void\n    : (this: Window, ev: CustomEvent) => void,\n  options?: boolean | AddEventListenerOptions,\n): void => {\n  useEffect(() => {\n    window.addEventListener(type, listener as EventListener, options);\n    return () =>\n      window.removeEventListener(type, listener as EventListener, options);\n  }, [type, listener]);\n};\n","import { useRef, useState } from \"react\";\n\nexport const useIntersection = <T extends HTMLElement = HTMLElement>(\n  options?: ConstructorParameters<typeof IntersectionObserver>[1],\n): {\n  ref: (element: T | null) => void;\n  entry: IntersectionObserverEntry | null;\n} => {\n  const [entry, setEntry] = useState<IntersectionObserverEntry | null>(null);\n\n  const observer = useRef<IntersectionObserver | null>(null);\n\n  const ref = (element: T | null): void => {\n    if (observer.current) {\n      observer.current.disconnect();\n      observer.current = null;\n    }\n\n    if (element === null) {\n      setEntry(null);\n      return;\n    }\n\n    observer.current = new IntersectionObserver(([_entry]) => {\n      setEntry(_entry);\n    }, options);\n\n    observer.current.observe(element);\n  };\n\n  return { ref, entry };\n};\n","import { limitValue } from \"@/utils\";\nimport { useState } from \"react\";\n\nconst DEFAULT_OPTIONS = {\n  min: -Infinity,\n  max: Infinity,\n};\n\nexport const useCounter = (\n  initialValue = 0,\n  options?: Partial<{ min: number; max: number }>,\n): [\n  number,\n  {\n    increment: () => void;\n    decrement: () => void;\n    set: (value: number) => void;\n    reset: () => void;\n  },\n] => {\n  const { min, max } = { ...DEFAULT_OPTIONS, ...options };\n  const [count, setCount] = useState<number>(\n    limitValue(initialValue, min, max),\n  );\n\n  const increment = (): void =>\n    setCount((current) => limitValue(current + 1, min, max));\n  const decrement = (): void =>\n    setCount((current) => limitValue(current - 1, min, max));\n  const set = (value: number): void => setCount(limitValue(value, min, max));\n  const reset = (): void => setCount(limitValue(initialValue, min, max));\n\n  return [count, { increment, decrement, set, reset }] as const;\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const useCallbackRef = <T extends (...args: unknown[]) => unknown>(\n  callback: T | undefined,\n): T => {\n  const callbackRef = useRef(callback);\n\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  return ((...args: Parameters<T>) => callbackRef.current?.(...args)) as T;\n};\n","import { useEffect, useRef } from \"react\";\nimport { useCallbackRef } from \"./useCallbackRef\";\n\nexport const useDebouncedCallback = <T extends (...args: unknown[]) => unknown>(\n  callback: T,\n  delay: number,\n): ((...args: Parameters<T>) => void) => {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = useRef(0);\n  useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n\n  return (...args: Parameters<T>) => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(\n      () => handleCallback(...args),\n      delay,\n    );\n  };\n};\n","import type { SetStateAction } from \"react\";\nimport { useEffect, useRef, useState } from \"react\";\n\nexport const useDebouncedState = <T>(\n  defaultValue: T,\n  wait: number,\n  options = { leading: false },\n): readonly [T, (newValue: SetStateAction<T>) => void] => {\n  const [value, setValue] = useState(defaultValue);\n  const timeoutRef = useRef<number | null>(null);\n  const leadingRef = useRef(true);\n\n  const clearTimeout = (): void => {\n    if (timeoutRef.current !== null) {\n      window.clearTimeout(timeoutRef.current);\n    }\n  };\n  useEffect(() => clearTimeout, []);\n\n  const debouncedSetValue = (newValue: SetStateAction<T>): void => {\n    clearTimeout();\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(() => {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n    leadingRef.current = false;\n  };\n\n  return [value, debouncedSetValue] as const;\n};\n","import { useEffect, useRef, useState } from \"react\";\n\nexport const useDebouncedValue = <T>(\n  value: T,\n  wait: number,\n  options = { leading: false },\n): readonly [T, () => void] => {\n  const [_value, setValue] = useState(value);\n  const mountedRef = useRef(false);\n  const timeoutRef = useRef<number | null>(null);\n  const cooldownRef = useRef(false);\n\n  const cancel = (): void => {\n    if (timeoutRef.current !== null) {\n      window.clearTimeout(timeoutRef.current);\n    }\n  };\n\n  useEffect(() => {\n    if (mountedRef.current) {\n      if (!cooldownRef.current && options.leading) {\n        cooldownRef.current = true;\n        setValue(value);\n      } else {\n        cancel();\n        timeoutRef.current = window.setTimeout(() => {\n          cooldownRef.current = false;\n          setValue(value);\n        }, wait);\n      }\n    }\n  }, [value, options.leading, wait]);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return cancel;\n  }, []);\n\n  return [_value, cancel] as const;\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const useEvent = <\n  K extends keyof HTMLElementEventMap,\n  T extends HTMLElement,\n>(\n  type: K,\n  listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => void,\n  options?: boolean | AddEventListenerOptions,\n): React.RefObject<T | null> => {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.addEventListener(type, listener, options);\n      const currentRef = ref.current;\n      return () => currentRef?.removeEventListener(type, listener, options);\n    }\n    return undefined;\n  }, [listener, options, type]);\n\n  return ref;\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const usePreviousValue = <T>(value: T): T | undefined => {\n  const ref = useRef<T>(undefined);\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n};\n","import { useReducer } from \"react\";\n\nconst reducer = (value: number): number => (value + 1) % 1000000;\n\nexport const useRerender = (): (() => void) => {\n  const [, update] = useReducer(reducer, 0);\n  return update;\n};\n","import { useRef } from \"react\";\nimport { useRerender } from \"./useRerender\";\n\ntype ReactiveSet<T> = Set<T>;\n\nexport const useReactiveSet = <T>(values?: T[]): ReactiveSet<T> => {\n  const setRef = useRef<ReactiveSet<T>>(new Set(values));\n  const forceUpdate = useRerender();\n\n  setRef.current.add = (...args: Parameters<Set<T>[\"add\"]>): ReactiveSet<T> => {\n    const res = Set.prototype.add.apply(setRef.current, args);\n    forceUpdate();\n    return res;\n  };\n\n  setRef.current.clear = (...args: Parameters<Set<T>[\"clear\"]>): void => {\n    Set.prototype.clear.apply(setRef.current, args);\n    forceUpdate();\n  };\n\n  setRef.current.delete = (...args: Parameters<Set<T>[\"delete\"]>): boolean => {\n    const res = Set.prototype.delete.apply(setRef.current, args);\n    forceUpdate();\n    return res;\n  };\n\n  return setRef.current;\n};\n","import { useState } from \"react\";\n\nexport interface UseStateHistoryHandlers<T> {\n  set: (value: T) => void;\n  back: (steps?: number) => void;\n  forward: (steps?: number) => void;\n  reset: () => void;\n}\n\nexport interface StateHistory<T> {\n  history: T[];\n  current: number;\n}\n\ntype UseStateHistoryReturn<T> = [\n  T,\n  UseStateHistoryHandlers<T>,\n  StateHistory<T>,\n];\n\nexport const useStateHistory = <T>(\n  initialValue: T,\n): UseStateHistoryReturn<T> => {\n  const [state, setState] = useState<StateHistory<T>>({\n    history: [initialValue],\n    current: 0,\n  });\n\n  const handlers: UseStateHistoryHandlers<T> = {\n    set: (value: T): void => {\n      setState((currentState) => {\n        const nextState = [\n          ...currentState.history.slice(0, currentState.current + 1),\n          value,\n        ];\n        return {\n          history: nextState,\n          current: nextState.length - 1,\n        };\n      });\n    },\n\n    back: (steps: number = 1): void => {\n      setState((currentState) => ({\n        history: currentState.history,\n        current: Math.max(0, currentState.current - steps),\n      }));\n    },\n\n    forward: (steps: number = 1): void => {\n      setState((currentState) => ({\n        history: currentState.history,\n        current: Math.min(\n          currentState.history.length - 1,\n          currentState.current + steps,\n        ),\n      }));\n    },\n\n    reset: (): void => {\n      setState({\n        history: [initialValue],\n        current: 0,\n      });\n    },\n  };\n\n  return [state.history[state.current], handlers, state];\n};\n","import { useReducer } from \"react\";\n\ntype ToggleReducerAction<T> = T | ((prevValue: T) => T);\ntype ToggleReducer<T> = (\n  state: readonly T[],\n  action: ToggleReducerAction<T>,\n) => T[];\ntype ToggleReturn<T> = readonly [T, (value?: ToggleReducerAction<T>) => void];\n\nexport const useToggle = <T = boolean>(\n  options: readonly T[] = [false, true] as unknown as readonly T[],\n): ToggleReturn<T> => {\n  const reducer: ToggleReducer<T> = (state, action) => {\n    const value = action instanceof Function ? action(state[0]) : action;\n    const index = Math.abs(state.indexOf(value));\n    return [...state.slice(index), ...state.slice(0, index)];\n  };\n\n  const [[currentOption], toggle] = useReducer(reducer, [...options]);\n\n  return [\n    currentOption,\n    toggle as (value?: ToggleReducerAction<T>) => void,\n  ] as const;\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useMounted = (): boolean => {\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => setMounted(true), []);\n  return mounted;\n};\n","import { useEffect, useRef } from \"react\";\n\ninterface UseTimeoutOptions {\n  autoInvoke?: boolean;\n}\n\ninterface UseTimeoutReturn {\n  start: (...params: unknown[]) => void;\n  clear: () => void;\n}\n\nexport const useTimeout = (\n  callback: (...params: unknown[]) => void,\n  delay: number,\n  { autoInvoke = false }: UseTimeoutOptions = {},\n): UseTimeoutReturn => {\n  const timeoutRef = useRef<number | null>(null);\n\n  const start = (...params: unknown[]): void => {\n    if (timeoutRef.current === undefined) {\n      timeoutRef.current = window.setTimeout(() => {\n        callback(...params);\n        timeoutRef.current = null;\n      }, delay);\n    }\n  };\n\n  const clear = (): void => {\n    if (timeoutRef.current !== null) {\n      window.clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n    return clear;\n  }, [delay]);\n\n  return { start, clear };\n};\n","import { useEffect, useRef, useState } from \"react\";\n\ninterface UseIntervalOptions {\n  autoInvoke?: boolean;\n}\n\ninterface UseIntervalReturn {\n  start: () => void;\n  stop: () => void;\n  toggle: () => void;\n  active: boolean;\n}\n\nexport const useInterval = (\n  fn: () => void,\n  interval: number,\n  { autoInvoke = false }: UseIntervalOptions = {},\n): UseIntervalReturn => {\n  const [active, setActive] = useState<boolean>(false);\n  const intervalRef = useRef<number | null>(null);\n  const fnRef = useRef<() => void>(fn);\n\n  const start = (): void => {\n    setActive((old) => {\n      if (\n        !old &&\n        (intervalRef.current === null || intervalRef.current === -1)\n      ) {\n        intervalRef.current = window.setInterval(fnRef.current, interval);\n      }\n      return true;\n    });\n  };\n\n  const stop = (): void => {\n    setActive(false);\n    window.clearInterval(intervalRef.current ?? -1);\n    intervalRef.current = -1;\n  };\n\n  const toggle = (): void => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  };\n\n  useEffect(() => {\n    fnRef.current = fn;\n    if (active) {\n      start();\n    }\n    return stop;\n  }, [fn, active, interval]);\n\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n    return () => stop();\n  }, []);\n\n  return { start, stop, toggle, active };\n};\n","import { useState, useCallback, useEffect } from \"react\";\n\ninterface StorageProperties<T> {\n  key: string;\n  defaultValue: T;\n}\n\nfunction getStorageValue<T>(key: string, defaultValue: T): T {\n  if (typeof window === \"undefined\") {\n    return defaultValue;\n  }\n\n  try {\n    const item = window.localStorage.getItem(key);\n    if (item === null) {\n      return defaultValue;\n    }\n    return JSON.parse(item);\n  } catch (error) {\n    console.warn(`Error reading localStorage key \"${key}\":`, error);\n    return defaultValue;\n  }\n}\n\nexport const useLocalStorage = <T>(\n  props: StorageProperties<T>,\n): readonly [T, (value: T | ((val: T) => T)) => void, () => void] => {\n  const { key, defaultValue } = props;\n\n  const [storedValue, setStoredValue] = useState<T>(() =>\n    getStorageValue(key, defaultValue),\n  );\n\n  const setValue = useCallback(\n    (value: T | ((val: T) => T)) => {\n      try {\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        setStoredValue(valueToStore);\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        console.warn(`Error setting localStorage key \"${key}\":`, error);\n      }\n    },\n    [key, storedValue],\n  );\n\n  const removeValue = useCallback(() => {\n    try {\n      window.localStorage.removeItem(key);\n      setStoredValue(defaultValue);\n    } catch (error) {\n      console.warn(`Error removing localStorage key \"${key}\":`, error);\n    }\n  }, [key, defaultValue]);\n\n  // Synchroniser avec les autres onglets/fenêtres\n  useEffect(() => {\n    const handleStorageChange = (event: StorageEvent): void => {\n      if (event.key === key && event.newValue !== null) {\n        try {\n          setStoredValue(JSON.parse(event.newValue));\n        } catch {\n          setStoredValue(defaultValue);\n        }\n      } else if (event.key === key) {\n        setStoredValue(defaultValue);\n      }\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, [key, defaultValue]);\n\n  return [storedValue, setValue, removeValue] as const;\n};\n","import type { Ref } from \"react\";\n\ntype PossibleRef<T> = Ref<T> | undefined;\ntype MergedRefCallback<T> = (node: T | null) => void;\n\nconst assignRef = <T>(ref: PossibleRef<T>, value: T | null): void => {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (typeof ref === \"object\" && ref !== null && \"current\" in ref) {\n    ref.current = value;\n  }\n};\n\nconst mergeRefs = <T>(...refs: PossibleRef<T>[]): MergedRefCallback<T> => {\n  return (node: T | null): void => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n};\n\nexport const useMergedRef = <T>(\n  ...refs: PossibleRef<T>[]\n): MergedRefCallback<T> => {\n  return mergeRefs(...refs);\n};\n","import { useState } from \"react\";\n\nexport const useDisclosure = (\n  initialState = false,\n  callbacks?: { onOpen?: () => void; onClose?: () => void },\n): [boolean, { open: () => void; close: () => void; toggle: () => void }] => {\n  const { onOpen, onClose } = callbacks || {};\n  const [opened, setOpened] = useState(initialState);\n\n  const open = (): void => {\n    setOpened((isOpened) => {\n      if (!isOpened) {\n        onOpen?.();\n        return true;\n      }\n      return isOpened;\n    });\n  };\n\n  const close = (): void => {\n    setOpened((isOpened) => {\n      if (isOpened) {\n        onClose?.();\n        return false;\n      }\n      return isOpened;\n    });\n  };\n\n  const toggle = (): void => {\n    if (opened) {\n      close();\n    } else {\n      open();\n    }\n  };\n\n  return [opened, { open, close, toggle }] as const;\n};\n"],"names":["reducer"],"mappings":"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"}