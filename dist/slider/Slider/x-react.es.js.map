{"version":3,"file":"x-react.es.js","sources":["../../../src/slider/Slider.tsx"],"sourcesContent":["import type { ReactNode } from \"react\";\nimport { forwardRef, useState } from \"react\";\nimport type { SliderProps } from \"@nextui-org/react\";\nimport { Slider as SliderRoot } from \"@nextui-org/react\";\n\ninterface FormatConfig {\n  formatOptions?: Intl.NumberFormatOptions;\n  formatValue?: (value: number[]) => string;\n  renderLabel?: (value: number[]) => ReactNode;\n}\n\ninterface StyleProps {\n  containerClassName?: string;\n  labelClassName?: string;\n}\n\ninterface RangeSliderProps extends FormatConfig, StyleProps {\n  sliderProps?: Omit<SliderProps, \"value\" | \"onChange\">;\n  initialValue?: number[];\n  label?: string;\n  labelPosition?: \"top\" | \"bottom\" | \"none\";\n  onChange?: (value: number[]) => void;\n}\n\ninterface LabelProps {\n  position: \"top\" | \"bottom\" | \"none\";\n  content: ReactNode;\n  className?: string;\n}\n\nconst defaultFormatValue = (\n  value: number[],\n  formatOptions?: Intl.NumberFormatOptions,\n): string => {\n  return value\n    .map((v) =>\n      formatOptions\n        ? new Intl.NumberFormat(undefined, formatOptions).format(v)\n        : v,\n    )\n    .join(\" â€“ \");\n};\n\nconst LabelComponent = ({\n  position,\n  content,\n  className,\n}: LabelProps): ReactNode => {\n  if (position === \"none\") {\n    return null;\n  }\n\n  return (\n    <p\n      className={`text-small font-medium text-default-500 ${className} ${position === \"top\" ? \"order-first\" : \"order-last\"}`}\n    >\n      {content}\n    </p>\n  );\n};\n\nexport const RangeSlider = forwardRef<HTMLDivElement, RangeSliderProps>(\n  (\n    {\n      sliderProps,\n      initialValue = [0, 100],\n      formatOptions,\n      label,\n      labelPosition = \"bottom\",\n      formatValue,\n      renderLabel,\n      onChange,\n      containerClassName,\n      labelClassName,\n    },\n    ref,\n  ) => {\n    const [value, setValue] = useState<number[]>(initialValue);\n\n    const handleChange = (newValue: number | number[]): void => {\n      const typedValue = Array.isArray(newValue) ? newValue : [newValue];\n      setValue(typedValue);\n      onChange?.(typedValue);\n    };\n\n    const formattedValue = formatValue\n      ? formatValue(value)\n      : defaultFormatValue(value, formatOptions);\n    const labelContent = renderLabel\n      ? renderLabel(value)\n      : `${label}: ${formattedValue}`;\n\n    return (\n      <div\n        ref={ref}\n        className={`flex h-max w-full max-w-md flex-col items-start justify-center gap-2 ${containerClassName}`}\n      >\n        <LabelComponent\n          position={labelPosition}\n          content={labelContent}\n          className={labelClassName}\n        />\n        <SliderRoot\n          value={value}\n          onChange={handleChange}\n          label={label}\n          className=\"max-w-md\"\n          formatOptions={formatOptions}\n          {...sliderProps}\n        />\n      </div>\n    );\n  },\n);\n\nRangeSlider.displayName = \"RangeSlider\";\n"],"names":["SliderRoot"],"mappings":";;;AA8BA,MAAM,qBAAqB,CACzB,OACA,kBACW;AACX,SAAO,MACJ;AAAA,IAAI,CAAC,MACJ,gBACI,IAAI,KAAK,aAAa,QAAW,aAAa,EAAE,OAAO,CAAC,IACxD;AAAA,EAAA,EAEL,KAAK,KAAK;AACf;AAEA,MAAM,iBAAiB,CAAC;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AACF,MAA6B;AAC3B,MAAI,aAAa,QAAQ;AAChB,WAAA;AAAA,EAAA;AAIP,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW,2CAA2C,SAAS,IAAI,aAAa,QAAQ,gBAAgB,YAAY;AAAA,MAEnH,UAAA;AAAA,IAAA;AAAA,EACH;AAEJ;AAEO,MAAM,cAAc;AAAA,EACzB,CACE;AAAA,IACE;AAAA,IACA,eAAe,CAAC,GAAG,GAAG;AAAA,IACtB;AAAA,IACA;AAAA,IACA,gBAAgB;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,KAEF,QACG;AACH,UAAM,CAAC,OAAO,QAAQ,IAAI,SAAmB,YAAY;AAEnD,UAAA,eAAe,CAAC,aAAsC;AAC1D,YAAM,aAAa,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ;AACjE,eAAS,UAAU;AACnB,2CAAW;AAAA,IACb;AAEA,UAAM,iBAAiB,cACnB,YAAY,KAAK,IACjB,mBAAmB,OAAO,aAAa;AACrC,UAAA,eAAe,cACjB,YAAY,KAAK,IACjB,GAAG,KAAK,KAAK,cAAc;AAG7B,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC;AAAA,QACA,WAAW,wEAAwE,kBAAkB;AAAA,QAErG,UAAA;AAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,UAAU;AAAA,cACV,SAAS;AAAA,cACT,WAAW;AAAA,YAAA;AAAA,UACb;AAAA,UACA;AAAA,YAACA;AAAAA,YAAA;AAAA,cACC;AAAA,cACA,UAAU;AAAA,cACV;AAAA,cACA,WAAU;AAAA,cACV;AAAA,cACC,GAAG;AAAA,YAAA;AAAA,UAAA;AAAA,QACN;AAAA,MAAA;AAAA,IACF;AAAA,EAAA;AAGN;AAEA,YAAY,cAAc;"}