{"version":3,"file":"index.js","sources":["../../../src/progress/Progress.tsx"],"sourcesContent":["import type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport type { ProgressProps as ProgressRootProps } from \"@nextui-org/react\";\nimport { Progress as ProgressRoor } from \"@nextui-org/react\";\n\ntype AdditionalProgressProps = {\n  label?: ReactNode;\n  labelPosition?: \"top\" | \"bottom\" | \"none\";\n  containerClassName?: string;\n  labelClassName?: string;\n};\n\ntype ProgressProps = {\n  classNames?: ProgressRootProps[\"classNames\"];\n} & Omit<ProgressRootProps, \"classNames\"> &\n  AdditionalProgressProps;\n\nconst defaultProps = {\n  size: \"md\",\n  color: \"primary\",\n  radius: \"full\",\n  minValue: 0,\n  maxValue: 100,\n  formatOptions: { style: \"percent\" } as const,\n  showValueLabel: true,\n} as const;\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>(\n  (\n    {\n      label,\n      labelPosition = \"top\",\n      containerClassName,\n      labelClassName,\n      value = 0,\n      maxValue = 100,\n      formatOptions = defaultProps.formatOptions,\n      valueLabel,\n      showValueLabel = defaultProps.showValueLabel,\n      classNames,\n      ...nextUIProps\n    },\n    ref,\n  ) => {\n    const getValueLabel = (): string => {\n      const formattedValue = new Intl.NumberFormat(\n        undefined,\n        formatOptions,\n      ).format(value / maxValue);\n\n      if (typeof valueLabel === \"string\" && valueLabel.trim() !== \"\") {\n        return valueLabel;\n      }\n      return formattedValue;\n    };\n\n    const labelComponent =\n      labelPosition === \"none\" ? undefined : (\n        <div\n          className={`\n      flex items-center justify-between\n      text-small font-medium text-default-500\n      ${labelClassName ?? \"\"}\n      ${labelPosition === \"top\" ? \"order-first\" : \"order-last\"}\n    `}\n        >\n          {label !== undefined && <span>{label}</span>}\n          {showValueLabel && <span>{getValueLabel()}</span>}\n        </div>\n      );\n\n    const progressProps = {\n      value,\n      maxValue,\n      formatOptions,\n      showValueLabel,\n      ...nextUIProps,\n      classNames: {\n        ...classNames,\n        base: `w-full ${typeof classNames?.base === \"string\" && classNames.base}`,\n      },\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={`flex w-full max-w-md flex-col gap-2 ${containerClassName}`}\n      >\n        {labelComponent}\n        <ProgressRoor {...defaultProps} {...progressProps} />\n      </div>\n    );\n  },\n);\n\nProgress.displayName = \"Progress\";\n"],"names":["defaultProps","Progress","forwardRef","label","labelPosition","containerClassName","labelClassName","value","maxValue","formatOptions","valueLabel","showValueLabel","classNames","nextUIProps","ref","getValueLabel","formattedValue","labelComponent","jsxs","jsx","progressProps","ProgressRoor"],"mappings":";;;AAiBA,MAAMA,IAAe;AAAA,EACnB,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,eAAe,EAAE,OAAO,UAAU;AAAA,EAClC,gBAAgB;AAClB,GAEaC,IAAWC;AAAA,EACtB,CACE;AAAA,IACE,OAAAC;AAAA,IACA,eAAAC,IAAgB;AAAA,IAChB,oBAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,OAAAC,IAAQ;AAAA,IACR,UAAAC,IAAW;AAAA,IACX,eAAAC,IAAgBT,EAAa;AAAA,IAC7B,YAAAU;AAAA,IACA,gBAAAC,IAAiBX,EAAa;AAAA,IAC9B,YAAAY;AAAA,IACA,GAAGC;AAAA,KAELC,MACG;AACH,UAAMC,IAAgB,MAAc;AAC5B,YAAAC,IAAiB,IAAI,KAAK;AAAA,QAC9B;AAAA,QACAP;AAAA,MAAA,EACA,OAAOF,IAAQC,CAAQ;AAEzB,aAAI,OAAOE,KAAe,YAAYA,EAAW,KAAA,MAAW,KACnDA,IAEFM;AAAA,IACT,GAEMC,IACJb,MAAkB,SAAS,SACzB,gBAAAc;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAW;AAAA;AAAA;AAAA,QAGbZ,KAAkB,EAAE;AAAA,QACpBF,MAAkB,QAAQ,gBAAgB,YAAY;AAAA;AAAA,QAGnD,UAAA;AAAA,UAAUD,MAAA,UAAc,gBAAAgB,EAAA,QAAA,EAAM,UAAMhB,GAAA;AAAA,UACpCQ,KAAkB,gBAAAQ,EAAC,QAAM,EAAA,UAAAJ,EAAA,EAAgB,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAC5C,GAGEK,IAAgB;AAAA,MACpB,OAAAb;AAAA,MACA,UAAAC;AAAA,MACA,eAAAC;AAAA,MACA,gBAAAE;AAAA,MACA,GAAGE;AAAA,MACH,YAAY;AAAA,QACV,GAAGD;AAAA,QACH,MAAM,UAAU,OAAOA,GAAY,QAAS,YAAYA,EAAW,IAAI;AAAA,MAAA;AAAA,IAE3E;AAGE,WAAA,gBAAAM;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAAJ;AAAA,QACA,WAAW,uCAAuCT,CAAkB;AAAA,QAEnE,UAAA;AAAA,UAAAY;AAAA,UACA,gBAAAE,EAAAE,GAAA,EAAc,GAAGrB,GAAe,GAAGoB,EAAe,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IACrD;AAAA,EAAA;AAGN;AAEAnB,EAAS,cAAc;"}