{"version":3,"file":"index.js","sources":["../../../src/drawer/Drawer.tsx"],"sourcesContent":["import type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport {\n  Drawer as DrawerRoot,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  DrawerFooter,\n  useDisclosure,\n  type DrawerProps as DrawerRootProps,\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\nimport { Button, type ButtonProps } from \"@/button\";\n\ninterface DrawerClassNames {\n  wrapper?: string;\n  base?: string;\n  backdrop?: string;\n  closeButton?: string;\n  header?: string;\n  body?: string;\n  footer?: string;\n}\n\ninterface AdditionalDrawerProps {\n  trigger: ReactNode;\n  title?: ReactNode;\n  children: ReactNode;\n  footer?: ReactNode;\n  buttonCloseLabel?: string;\n  buttonActionLabel?: string;\n  onAction?: () => void | Promise<void>;\n  buttonCloseProps?: ButtonProps;\n  buttonActionProps?: ButtonProps;\n  classNames?: DrawerClassNames;\n}\n\nexport type DrawerProps = Omit<DrawerRootProps, keyof AdditionalDrawerProps> &\n  AdditionalDrawerProps;\n\nconst isValidButtonLabel = (label: unknown): label is string =>\n  typeof label === \"string\" && label.length > 0;\n\nexport const Drawer = forwardRef<HTMLDivElement, DrawerProps>(\n  (\n    {\n      trigger,\n      title,\n      children,\n      footer,\n      buttonCloseLabel = \"Close\",\n      buttonActionLabel,\n      onAction,\n      buttonCloseProps,\n      buttonActionProps,\n      classNames = {},\n      ...nextUIProps\n    },\n    ref,\n  ) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n\n    const handleAction = async (): Promise<void> => {\n      try {\n        await onAction?.();\n        onClose();\n      } catch (error) {\n        console.error(\"Action failed:\", error);\n      }\n    };\n\n    const handleKeyDown = (\n      event: React.KeyboardEvent<HTMLDivElement>,\n    ): void => {\n      if (event.key === \"Enter\" || event.key === \" \") {\n        event.preventDefault();\n        onOpen();\n      }\n    };\n\n    const renderButtons = (): ReactNode => {\n      const hasValidCloseLabel = isValidButtonLabel(buttonCloseLabel);\n      const hasValidActionButton =\n        isValidButtonLabel(buttonActionLabel) && onAction !== undefined;\n\n      const defaultButtonProps = {\n        color: \"primary\" as const,\n        radius: \"sm\" as const,\n      };\n\n      return (\n        <div className=\"flex justify-end gap-2\">\n          {hasValidCloseLabel && (\n            <Button\n              {...defaultButtonProps}\n              variant=\"bordered\"\n              onPress={onClose}\n              className={cn(\"border-primary/50\", buttonCloseProps?.className)}\n              {...buttonCloseProps}\n            >\n              {buttonCloseLabel}\n            </Button>\n          )}\n\n          {hasValidActionButton && (\n            <Button\n              {...defaultButtonProps}\n              onPress={handleAction}\n              {...buttonActionProps}\n            >\n              {buttonActionLabel}\n            </Button>\n          )}\n        </div>\n      );\n    };\n\n    const drawerClassNames = {\n      wrapper: cn(classNames.wrapper),\n      base: cn(\"bg-background rounded-none\", classNames.base),\n      backdrop: cn(classNames.backdrop),\n      closeButton: cn(\"absolute right-4 top-4\", classNames.closeButton),\n      header: cn(classNames.header),\n      body: cn(classNames.body),\n      footer: cn(classNames.footer),\n    };\n\n    return (\n      <>\n        <div\n          role=\"button\"\n          tabIndex={0}\n          onClick={onOpen}\n          onKeyDown={handleKeyDown}\n          className=\"inline-block\"\n        >\n          {trigger}\n        </div>\n\n        <DrawerRoot\n          ref={ref}\n          isOpen={isOpen}\n          onClose={onClose}\n          classNames={drawerClassNames}\n          {...nextUIProps}\n        >\n          <DrawerContent>\n            {() => (\n              <>\n                {title !== undefined && (\n                  <DrawerHeader className={drawerClassNames.header}>\n                    {title}\n                  </DrawerHeader>\n                )}\n\n                <DrawerBody className={drawerClassNames.body}>\n                  {children}\n                </DrawerBody>\n\n                <DrawerFooter className={drawerClassNames.footer}>\n                  {footer !== undefined ? footer : renderButtons()}\n                </DrawerFooter>\n              </>\n            )}\n          </DrawerContent>\n        </DrawerRoot>\n      </>\n    );\n  },\n);\n\nDrawer.displayName = \"Drawer\";\n"],"names":["isValidButtonLabel","label","Drawer","forwardRef","trigger","title","children","footer","buttonCloseLabel","buttonActionLabel","onAction","buttonCloseProps","buttonActionProps","classNames","nextUIProps","ref","isOpen","onOpen","onClose","useDisclosure","handleAction","error","handleKeyDown","event","renderButtons","hasValidCloseLabel","hasValidActionButton","defaultButtonProps","jsxs","jsx","Button","cn","drawerClassNames","Fragment","DrawerRoot","DrawerContent","DrawerHeader","DrawerBody","DrawerFooter"],"mappings":"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"}