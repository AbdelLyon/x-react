{"version":3,"file":"x-react.es.js","sources":["../../../src/button/Button.tsx"],"sourcesContent":["import type { AnchorHTMLAttributes, ComponentType, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport type { ButtonProps as ButtonRootProps } from \"@nextui-org/react\";\nimport { Button as ButtonRoot } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\nexport interface ButtonProps extends ButtonRootProps {\n  LinkComponent?: ComponentType<AnchorHTMLAttributes<HTMLAnchorElement>>;\n  classNames?: {\n    base?: string;\n    beforeContent?: string;\n    afterContent?: string;\n    content?: string;\n  };\n}\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      fullWidth = false,\n      isLoading = false,\n      isDisabled = false,\n      startContent,\n      endContent,\n      className = \"\",\n      LinkComponent,\n      variant = \"solid\",\n      classNames = {\n        base: \"\",\n        beforeContent: \"\",\n        afterContent: \"\",\n        content: \"\",\n      },\n      href,\n      children,\n      target,\n      rel,\n      ...props\n    },\n    ref,\n  ) => {\n    const baseStyles = cn(\n      \"transition-none font-normal border-1 rounded-md\",\n      fullWidth && \"w-full\",\n      isLoading && \"opacity-50 cursor-not-allowed\",\n      classNames.base,\n      className,\n    );\n\n    const Content = (): ReactNode => (\n      <>\n        {startContent !== undefined && (\n          <span className={cn(\"mr-2\", classNames.beforeContent)}>\n            {startContent}\n          </span>\n        )}\n        <span className={classNames.content}>{children}</span>\n        {endContent !== undefined && (\n          <span className={cn(\"ml-2\", classNames.afterContent)}>\n            {endContent}\n          </span>\n        )}\n      </>\n    );\n\n    const hasValidLink =\n      href !== undefined &&\n      href.length > 0 &&\n      LinkComponent !== undefined &&\n      LinkComponent !== undefined;\n\n    if (hasValidLink) {\n      return (\n        <ButtonRoot\n          ref={ref}\n          {...props}\n          as={LinkComponent}\n          variant={variant}\n          className={baseStyles}\n          href={href}\n          rel={target === \"_blank\" ? \"noopener noreferrer\" : rel}\n          target={target}\n        >\n          <Content />\n        </ButtonRoot>\n      );\n    }\n\n    return (\n      <ButtonRoot\n        ref={ref}\n        {...props}\n        variant={variant}\n        className={baseStyles}\n        isDisabled={isDisabled}\n      >\n        <Content />\n      </ButtonRoot>\n    );\n  },\n);\n\nButton.displayName = \"Button\";\n"],"names":["ButtonRoot"],"mappings":";;;;AAgBO,MAAM,SAAS;AAAA,EACpB,CACE;AAAA,IACE,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,aAAa;AAAA,IACb;AAAA,IACA;AAAA,IACA,YAAY;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,IACV,aAAa;AAAA,MACX,MAAM;AAAA,MACN,eAAe;AAAA,MACf,cAAc;AAAA,MACd,SAAS;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,KAEL,QACG;AACH,UAAM,aAAa;AAAA,MACjB;AAAA,MACA,aAAa;AAAA,MACb,aAAa;AAAA,MACb,WAAW;AAAA,MACX;AAAA,IACF;AAEM,UAAA,UAAU,MAEX,qBAAA,UAAA,EAAA,UAAA;AAAA,MAAiB,iBAAA,8BACf,QAAK,EAAA,WAAW,GAAG,QAAQ,WAAW,aAAa,GACjD,UACH,aAAA,CAAA;AAAA,MAED,oBAAA,QAAA,EAAK,WAAW,WAAW,SAAU,UAAS;AAAA,MAC9C,eAAe,UACd,oBAAC,QAAK,EAAA,WAAW,GAAG,QAAQ,WAAW,YAAY,GAChD,UACH,WAAA,CAAA;AAAA,IAAA,GAEJ;AAGI,UAAA,eACJ,SAAS,UACT,KAAK,SAAS,KACd,kBAAkB,UAClB,kBAAkB;AAEpB,QAAI,cAAc;AAEd,aAAA;AAAA,QAACA;AAAAA,QAAA;AAAA,UACC;AAAA,UACC,GAAG;AAAA,UACJ,IAAI;AAAA,UACJ;AAAA,UACA,WAAW;AAAA,UACX;AAAA,UACA,KAAK,WAAW,WAAW,wBAAwB;AAAA,UACnD;AAAA,UAEA,8BAAC,SAAQ,CAAA,CAAA;AAAA,QAAA;AAAA,MACX;AAAA,IAAA;AAKF,WAAA;AAAA,MAACA;AAAAA,MAAA;AAAA,QACC;AAAA,QACC,GAAG;AAAA,QACJ;AAAA,QACA,WAAW;AAAA,QACX;AAAA,QAEA,8BAAC,SAAQ,CAAA,CAAA;AAAA,MAAA;AAAA,IACX;AAAA,EAAA;AAGN;AAEA,OAAO,cAAc;"}