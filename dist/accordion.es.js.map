{"version":3,"sources":["../src/accordion/Accordion.tsx"],"names":["AccordionRoot"],"mappings":";;;;;;AAmBO,IAAM,SAAY,GAAA,UAAA;AAAA,EACvB,CAAC,EAAE,KAAA,EAAO,aAAa,GAAG,cAAA,IAAkB,GAAQ,KAAA;AAClD,IAAA,MAAM,kBAAqB,GAAA;AAAA,MACzB,IAAA,EAAM,GAAG,qBAAuB,EAAA;AAAA,QAC9B,8DAAA,EACE,eAAe,OAAY,KAAA;AAAA,OAC9B,CAAA;AAAA,MACD,KAAO,EAAA;AAAA,KACT;AACA,IAAA,MAAM,gBAAmB,GAAA,EAAA;AAAA,MACvB,YAAA;AAAA,MACA;AAAA,QACE,yBAAA,EAA2B,eAAe,OAAY,KAAA;AAAA,OACxD;AAAA,MACA,cAAe,CAAA;AAAA,KACjB;AAEA,IACE,uBAAA,GAAA;AAAA,MAACA,WAAA;AAAA,MAAA;AAAA,QACC,GAAA;AAAA,QACC,GAAG,cAAA;AAAA,QACJ,SAAW,EAAA,gBAAA;AAAA,QACX,WAAa,EAAA;AAAA,UACX,GAAG,kBAAA;AAAA,UACH,GAAG,WAAA;AAAA,UACH,IAAM,EAAA,EAAA,CAAG,kBAAmB,CAAA,IAAA,EAAM,aAAa,IAAI,CAAA;AAAA,UACnD,KAAO,EAAA,EAAA,CAAG,kBAAmB,CAAA,KAAA,EAAO,aAAa,KAAK;AAAA,SACxD;AAAA,QAEC,QAAA,EAAA,KAAA,CAAM,GAAI,CAAA,CAAC,IAAS,KAAA;AACnB,UAAA,MAAM,EAAE,OAAA,EAAS,GAAG,SAAA,EAAc,GAAA,IAAA;AAClC,UACE,uBAAA,aAAA;AAAA,YAAC,aAAA;AAAA,YAAA;AAAA,cACE,GAAG,SAAA;AAAA,cACJ,KAAK,SAAU,CAAA,GAAA;AAAA,cACf,QAAU,EAAA;AAAA;AAAA,WACZ;AAAA,SAEH;AAAA;AAAA,KACH;AAAA;AAGN;AAEA,SAAA,CAAU,WAAc,GAAA,WAAA","file":"accordion.es.js","sourcesContent":["import { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\nimport type { AccordionProps, AccordionItemProps } from \"@nextui-org/react\";\nimport { Accordion as AccordionRoot, AccordionItem } from \"@nextui-org/react\";\n\nexport interface ExtendedAccordionItemProps\n  extends Omit<AccordionItemProps, \"content\"> {\n  content?: React.ReactNode;\n}\n\ninterface AccordionWrapperProps extends Omit<AccordionProps, \"children\"> {\n  items: ExtendedAccordionItemProps[];\n  itemClasses?: {\n    base?: string;\n    title?: string;\n    [key: string]: string | undefined;\n  };\n}\n\nexport const Accordion = forwardRef<HTMLDivElement, AccordionWrapperProps>(\n  ({ items, itemClasses, ...accordionProps }, ref) => {\n    const defaultItemClasses = {\n      base: cn(\"w-full shadow-none \", {\n        \"bg-white dark:bg-content1 border-1 border-default rounded-md\":\n          accordionProps.variant === \"splitted\",\n      }),\n      title: \"text-lg font-semibold\",\n    };\n    const defaultClassName = cn(\n      \"rounded-md\",\n      {\n        \"border-1 border-default\": accordionProps.variant === \"bordered\",\n      },\n      accordionProps.className,\n    );\n\n    return (\n      <AccordionRoot\n        ref={ref}\n        {...accordionProps}\n        className={defaultClassName}\n        itemClasses={{\n          ...defaultItemClasses,\n          ...itemClasses,\n          base: cn(defaultItemClasses.base, itemClasses?.base),\n          title: cn(defaultItemClasses.title, itemClasses?.title),\n        }}\n      >\n        {items.map((item) => {\n          const { content, ...itemProps } = item;\n          return (\n            <AccordionItem\n              {...itemProps}\n              key={itemProps.key}\n              children={content}\n            />\n          );\n        })}\n      </AccordionRoot>\n    );\n  },\n);\n\nAccordion.displayName = \"Accordion\";\n"]}