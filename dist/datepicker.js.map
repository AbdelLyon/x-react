{"version":3,"sources":["../src/utils/index.ts","../src/datepicker/DatePicker.tsx"],"names":["DatePickerRoot","DateRangePickerRoot"],"mappings":"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","file":"datepicker.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport const cn = (...inputs: ClassValue[]): string => {\n  return twMerge(clsx(inputs));\n};\n\nexport const capitalizeFirstLetter = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const concatenateWithSpace = (\n  ...strings: (string | undefined)[]\n): string => strings.filter(Boolean).join(\" \");\n\nexport const startsWith = (str: string, prefix: string): boolean =>\n  str.startsWith(prefix);\n\nexport const endsWith = (str: string, suffix: string): boolean =>\n  str.endsWith(suffix);\n\nexport const toLowerCase = (str: string): string => str.toLowerCase();\n\nexport const toUpperCase = (str: string): string => str.toUpperCase();\n\nexport const trim = (str: string): string => str.trim();\n\nexport const reverse = (str: string): string =>\n  str.split(\"\").reverse().join(\"\");\n\nexport const limitValue = (\n  value: number,\n  min: number | undefined,\n  max: number | undefined,\n): number => {\n  if (min === undefined && max === undefined) {\n    return value;\n  }\n\n  if (min !== undefined && max === undefined) {\n    return Math.max(value, min);\n  }\n\n  if (min === undefined && max !== undefined) {\n    return Math.min(value, max);\n  }\n\n  if (min !== undefined && max !== undefined) {\n    return Math.min(Math.max(value, min), max);\n  }\n\n  return value;\n};\n\ntype DebouncedFunction<Args extends unknown[]> = {\n  (...args: Args): void;\n  cancel: () => void;\n};\n\n//debounce function\nexport function debounce<\n  Callback extends (...args: never[]) => unknown,\n  Args extends Parameters<Callback>,\n>(callback: Callback, delay = 0): DebouncedFunction<Args> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  let latestArgs: Args | undefined;\n\n  function debouncedFn(this: unknown, ...args: Args): void {\n    latestArgs = args;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      if (latestArgs) {\n        callback.apply(this, latestArgs);\n      }\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }, delay);\n  }\n\n  debouncedFn.cancel = function cancel(): void {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }\n  };\n\n  return debouncedFn;\n}\n","import { forwardRef } from \"react\";\nimport type {\n  DatePickerProps as DatePickerRootProps,\n  DateRangePickerProps as DateRangePickerRootProps,\n  DateValue,\n} from \"@nextui-org/react\";\nimport {\n  DatePicker as DatePickerRoot,\n  DateRangePicker as DateRangePickerRoot,\n} from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\ntype BaseProps = {\n  containerClasses?: string;\n  variant?: \"bordered\" | \"flat\" | \"faded\" | \"underlined\";\n  color?: string;\n  size?: string;\n  radius?: string;\n  labelPlacement?: string;\n  fullWidth?: boolean;\n  isRequired?: boolean;\n  isReadOnly?: boolean;\n  isDisabled?: boolean;\n};\n\ntype DatePickerProps = DatePickerRootProps &\n  BaseProps & {\n    customValidation?: (value: Date | null) => boolean | string;\n  };\n\ntype DateRangePickerProps = DateRangePickerRootProps & BaseProps;\n\nconst getVariantStyles = (variant: string = \"bordered\"): string => {\n  switch (variant) {\n    case \"bordered\":\n      return \"bg-white dark:bg-background data-[hover=true]:border-outline group-data-[focus=true]:border-outline h-12 group-data-[focus=true]:bg-content1\";\n    case \"flat\":\n      return \"border-none border-1 bg-default-100 dark:bg-default-50 data-[hover=true]:bg-default-200 group-data-[focus=true]:bg-default-100 h-12\";\n    case \"faded\":\n      return \"border-transparent bg-default-100 dark:bg-default-50 data-[hover=true]:bg-default-200 group-data-[focus=true]:border-outline h-12\";\n    case \"underlined\":\n      return \"border-b-1 rounded-none bg-transparent border-default-200 dark:border-default-100 data-[hover=true]:border-outline group-data-[focus=true]:border-outline h-12\";\n    default:\n      return \"bg-white dark:bg-background data-[hover=true]:border-outline group-data-[focus=true]:border-outline h-12\";\n  }\n};\n\nexport const DatePicker = forwardRef<HTMLDivElement, DatePickerProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      ...props\n    },\n    ref,\n  ) => {\n    const { classNames: propClassNames, ...restProps } = props;\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <DatePickerRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          classNames={{\n            ...propClassNames,\n            inputWrapper: cn(\n              getVariantStyles(variant),\n              propClassNames?.inputWrapper,\n            ),\n          }}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nexport const DateRangePicker = forwardRef<HTMLDivElement, DateRangePickerProps>(\n  (\n    {\n      variant = \"bordered\",\n      color = \"default\",\n      size = \"md\",\n      radius = \"md\",\n      labelPlacement = \"inside\",\n      fullWidth = true,\n      isRequired = false,\n      isReadOnly = false,\n      isDisabled = false,\n      containerClasses,\n      ...props\n    },\n    ref,\n  ) => {\n    const { classNames: propClassNames, ...restProps } = props;\n\n    return (\n      <div className={cn(\"w-full\", containerClasses)}>\n        <DateRangePickerRoot\n          ref={ref}\n          variant={variant}\n          color={color}\n          size={size}\n          radius={radius}\n          labelPlacement={labelPlacement}\n          fullWidth={fullWidth}\n          isRequired={isRequired}\n          isReadOnly={isReadOnly}\n          isDisabled={isDisabled}\n          classNames={{\n            ...propClassNames,\n            base: cn(getVariantStyles(variant), propClassNames?.base),\n          }}\n          {...restProps}\n        />\n      </div>\n    );\n  },\n);\n\nexport type { DateValue };\n\nDatePicker.displayName = \"DatePicker\";\nDateRangePicker.displayName = \"DateRangePicker\";\n"]}