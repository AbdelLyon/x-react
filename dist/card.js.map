{"version":3,"sources":["../src/card/Card.tsx"],"names":["NextUICard"],"mappings":";;;;;AAoBO,IAAM,IAAO,GAAA,UAAA;AAAA,EAClB,CACE;AAAA,IACE,QAAA;AAAA,IACA,MAAS,GAAA,IAAA;AAAA,IACT,MAAS,GAAA,IAAA;AAAA,IACT,SAAY,GAAA,KAAA;AAAA,IACZ,WAAc,GAAA,KAAA;AAAA,IACd,WAAc,GAAA,KAAA;AAAA,IACd,SAAY,GAAA,KAAA;AAAA,IACZ,eAAkB,GAAA,KAAA;AAAA,IAClB,UAAa,GAAA,KAAA;AAAA,IACb,gBAAmB,GAAA,KAAA;AAAA,IACnB,aAAgB,GAAA,KAAA;AAAA,IAChB,yBAA4B,GAAA,KAAA;AAAA,IAC5B,UAAA;AAAA,IACA,MAAA;AAAA,IACA,MAAA;AAAA,IACA,WAAA;AAAA,IACA,GAAG;AAAA,KAEL,GACG,KAAA;AACH,IACE,uBAAA,IAAA;AAAA,MAACA,MAAA;AAAA,MAAA;AAAA,QACC,GAAA;AAAA,QACA,MAAA;AAAA,QACA,MAAA;AAAA,QACA,SAAA;AAAA,QACA,WAAA;AAAA,QACA,WAAA;AAAA,QACA,SAAA;AAAA,QACA,eAAA;AAAA,QACA,UAAA;AAAA,QACA,gBAAA;AAAA,QACA,aAAA;AAAA,QACA,yBAAA;AAAA,QACA,WAAW,UAAY,EAAA,IAAA;AAAA,QACtB,GAAG,KAAA;AAAA,QAEH,QAAA,EAAA;AAAA,UAAA,MAAA,KAAW,0BACT,GAAA,CAAA,UAAA,EAAA,EAAW,SAAW,EAAA,UAAA,EAAY,QAAS,QAAO,EAAA,MAAA,EAAA,CAAA;AAAA,0BAEpD,GAAA,CAAA,QAAA,EAAA,EAAS,SAAW,EAAA,UAAA,EAAY,MAAO,QAAS,EAAA,CAAA;AAAA,UAChD,MAAA,KAAW,0BACT,GAAA,CAAA,UAAA,EAAA,EAAW,WAAW,UAAY,EAAA,MAAA,EAAS,GAAG,WAAA,EAC5C,QACH,EAAA,MAAA,EAAA;AAAA;AAAA;AAAA,KAEJ;AAAA;AAGN;AAEA,IAAA,CAAK,WAAc,GAAA,MAAA","file":"card.js","sourcesContent":["import type { ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport type {\n  CardFooterProps,\n  CardProps as NextUICardProps,\n} from \"@nextui-org/react\";\nimport {\n  Card as NextUICard,\n  CardHeader,\n  CardBody,\n  CardFooter,\n} from \"@nextui-org/react\";\n\ninterface CardProps extends NextUICardProps {\n  header?: ReactNode;\n  footer?: ReactNode;\n  footerProps?: CardFooterProps;\n  classNames?: Partial<Record<\"base\" | \"header\" | \"body\" | \"footer\", string>>;\n}\n\nexport const Card = forwardRef<HTMLDivElement, CardProps>(\n  (\n    {\n      children,\n      shadow = \"md\",\n      radius = \"lg\",\n      fullWidth = false,\n      isHoverable = false,\n      isPressable = false,\n      isBlurred = false,\n      isFooterBlurred = false,\n      isDisabled = false,\n      disableAnimation = false,\n      disableRipple = false,\n      allowTextSelectionOnPress = false,\n      classNames,\n      header,\n      footer,\n      footerProps,\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <NextUICard\n        ref={ref}\n        shadow={shadow}\n        radius={radius}\n        fullWidth={fullWidth}\n        isHoverable={isHoverable}\n        isPressable={isPressable}\n        isBlurred={isBlurred}\n        isFooterBlurred={isFooterBlurred}\n        isDisabled={isDisabled}\n        disableAnimation={disableAnimation}\n        disableRipple={disableRipple}\n        allowTextSelectionOnPress={allowTextSelectionOnPress}\n        className={classNames?.base}\n        {...props}\n      >\n        {header !== undefined && (\n          <CardHeader className={classNames?.header}>{header}</CardHeader>\n        )}\n        <CardBody className={classNames?.body}>{children}</CardBody>\n        {footer !== undefined && (\n          <CardFooter className={classNames?.footer} {...footerProps}>\n            {footer}\n          </CardFooter>\n        )}\n      </NextUICard>\n    );\n  },\n);\n\nCard.displayName = \"Card\";\n"]}