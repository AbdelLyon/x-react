{"version":3,"sources":["../src/utils/index.ts","../src/pagination/Pagination.tsx"],"names":["PaginationRoot"],"mappings":";;;;;;;AAGO,IAAM,EAAA,GAAK,IAAI,MAAiC,KAAA;AACrD,EAAO,OAAA,OAAA,CAAQ,IAAK,CAAA,MAAM,CAAC,CAAA;AAC7B,CAAA;ACIO,IAAM,UAAa,GAAA,UAAA;AAAA,EACxB,CAAC,EAAE,gBAAA,EAAkB,YAAY,GAAG,KAAA,IAAS,GAAQ,KAAA;AACnD,IAAA,2BACG,KAAI,EAAA,EAAA,SAAA,EAAW,EAAG,CAAA,4BAAA,EAA8B,gBAAgB,CAC/D,EAAA,QAAA,kBAAA,GAAA;AAAA,MAACA,YAAA;AAAA,MAAA;AAAA,QACC,GAAA;AAAA,QACA,UAAY,EAAA;AAAA,UACV,GAAG,UAAA;AAAA,UACH,IAAM,EAAA,EAAA,CAAG,OAAS,EAAA,UAAA,EAAY,IAAI,CAAA;AAAA,UAClC,IAAM,EAAA,EAAA,CAAG,kCAAoC,EAAA,UAAA,EAAY,IAAI,CAAA;AAAA,UAC7D,IAAM,EAAA,EAAA,CAAG,kCAAoC,EAAA,UAAA,EAAY,IAAI,CAAA;AAAA,UAC7D,IAAM,EAAA,EAAA,CAAG,kCAAoC,EAAA,UAAA,EAAY,IAAI;AAAA,SAC/D;AAAA,QACC,GAAG;AAAA;AAAA,KAER,EAAA,CAAA;AAAA;AAGN;AAEA,UAAA,CAAW,WAAc,GAAA,YAAA","file":"pagination.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport const cn = (...inputs: ClassValue[]): string => {\n  return twMerge(clsx(inputs));\n};\n\nexport const capitalizeFirstLetter = (str: string): string =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const concatenateWithSpace = (\n  ...strings: (string | undefined)[]\n): string => strings.filter(Boolean).join(\" \");\n\nexport const startsWith = (str: string, prefix: string): boolean =>\n  str.startsWith(prefix);\n\nexport const endsWith = (str: string, suffix: string): boolean =>\n  str.endsWith(suffix);\n\nexport const toLowerCase = (str: string): string => str.toLowerCase();\n\nexport const toUpperCase = (str: string): string => str.toUpperCase();\n\nexport const trim = (str: string): string => str.trim();\n\nexport const reverse = (str: string): string =>\n  str.split(\"\").reverse().join(\"\");\n\nexport const limitValue = (\n  value: number,\n  min: number | undefined,\n  max: number | undefined,\n): number => {\n  if (min === undefined && max === undefined) {\n    return value;\n  }\n\n  if (min !== undefined && max === undefined) {\n    return Math.max(value, min);\n  }\n\n  if (min === undefined && max !== undefined) {\n    return Math.min(value, max);\n  }\n\n  if (min !== undefined && max !== undefined) {\n    return Math.min(Math.max(value, min), max);\n  }\n\n  return value;\n};\n\ntype DebouncedFunction<Args extends unknown[]> = {\n  (...args: Args): void;\n  cancel: () => void;\n};\n\n//debounce function\nexport function debounce<\n  Callback extends (...args: never[]) => unknown,\n  Args extends Parameters<Callback>,\n>(callback: Callback, delay = 0): DebouncedFunction<Args> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n  let latestArgs: Args | undefined;\n\n  function debouncedFn(this: unknown, ...args: Args): void {\n    latestArgs = args;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(() => {\n      if (latestArgs) {\n        callback.apply(this, latestArgs);\n      }\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }, delay);\n  }\n\n  debouncedFn.cancel = function cancel(): void {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n      timeoutId = undefined;\n      latestArgs = undefined;\n    }\n  };\n\n  return debouncedFn;\n}\n","import { forwardRef } from \"react\";\nimport type { PaginationProps as PaginationRootProps } from \"@nextui-org/react\";\nimport { Pagination as PaginationRoot } from \"@nextui-org/react\";\nimport { cn } from \"@/utils\";\n\nexport interface PaginationProps extends PaginationRootProps {\n  containerClasses?: string;\n}\n\nexport const Pagination = forwardRef<HTMLUListElement, PaginationProps>(\n  ({ containerClasses, classNames, ...props }, ref) => {\n    return (\n      <div className={cn(\"w-full flex justify-center\", containerClasses)}>\n        <PaginationRoot\n          ref={ref}\n          classNames={{\n            ...classNames,\n            base: cn(\"gap-2\", classNames?.base),\n            item: cn(\"data-[hover=true]:bg-default-100\", classNames?.item),\n            prev: cn(\"data-[hover=true]:bg-default-100\", classNames?.prev),\n            next: cn(\"data-[hover=true]:bg-default-100\", classNames?.next),\n          }}\n          {...props}\n        />\n      </div>\n    );\n  },\n);\n\nPagination.displayName = \"Pagination\";\n"]}