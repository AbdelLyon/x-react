{"version":3,"sources":["../src/sidebar/Sidebar.tsx"],"names":[],"mappings":";;;;;;;AAkBO,IAAM,OAAU,GAAA,UAAA;AAAA,EACrB,CAAC,EAAE,KAAQ,GAAA,IAAI,UAAY,EAAA,WAAA,IAAe,GAAQ,KAAA;AAChD,IAAA,MAAM,EAAE,SAAA,EAAW,QAAS,EAAA,GAAI,aAAc,EAAA;AAE9C,IAAI,IAAA,CAAC,SAAa,IAAA,CAAC,QAAU,EAAA;AAC3B,MAAO,OAAA,IAAA;AAAA;AAGT,IAAM,MAAA,UAAA,GAAa,CAAC,IAA4B,KAAA;AAC9C,MAAA,MAAM,WACJ,mBAAA,IAAA;AAAA,QAAC,IAAA;AAAA,QAAA;AAAA,UAEC,SAAW,EAAA,EAAA;AAAA,YACT,8GAAA;AAAA,YACA;AAAA,cACE,sDACE,IAAK,CAAA,QAAA;AAAA,cACP,gBAAkB,EAAA;AAAA,aACpB;AAAA,YACA,UAAY,EAAA;AAAA,WACd;AAAA,UACA,OAAA,EAAS,MAAM,WAAA,GAAc,IAAI,CAAA;AAAA,UAEhC,QAAA,EAAA;AAAA,YAAK,IAAA,CAAA,YAAA;AAAA,YACL,SAAA,GAAY,KAAK,KAAQ,GAAA,IAAA;AAAA,YACzB,IAAK,CAAA;AAAA;AAAA,SAAA;AAAA,QAdD,IAAK,CAAA;AAAA,OAeZ;AAGF,MAAA,IAAI,QAAU,EAAA;AACZ,QACE,uBAAA,GAAA;AAAA,UAAC,OAAA;AAAA,UAAA;AAAA,YACC,OAAS,EAAA,WAAA;AAAA,YAET,SAAS,IAAK,CAAA,KAAA;AAAA,YACd,SAAU,EAAA,OAAA;AAAA,YACV,KAAO,EAAA,CAAA;AAAA,YACP,UAAY,EAAA,CAAA;AAAA,YACZ,SAAU,EAAA;AAAA,WAAA;AAAA,UALL,IAAK,CAAA;AAAA,SAMZ;AAAA;AAIJ,MAAO,OAAA,WAAA;AAAA,KACT;AAEA,IACE,uBAAA,GAAA;AAAA,MAAC,OAAA;AAAA,MAAA;AAAA,QACC,GAAA;AAAA,QACA,SAAW,EAAA,EAAA;AAAA,UACT,qEAAA;AAAA,UACA;AAAA,YACE,WAAa,EAAA,SAAA;AAAA,YACb,UAAY,EAAA;AAAA,WACd;AAAA,UACA,UAAY,EAAA;AAAA,SACd;AAAA,QAEA,8BAAC,KAAI,EAAA,EAAA,SAAA,EAAU,kCACZ,QAAM,EAAA,KAAA,CAAA,GAAA,CAAI,UAAU,CACvB,EAAA;AAAA;AAAA,KACF;AAAA;AAGN;AAEA,OAAA,CAAQ,WAAc,GAAA,SAAA","file":"chunk-PLNQHWG2.es.js","sourcesContent":["import type { JSX } from \"react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"@/utils\";\nimport type { Item } from \"@/types/navigation\";\nimport { Link } from \"@nextui-org/react\";\nimport { useResponsive } from \"@/hooks\";\nimport { Tooltip } from \"@/tooltip\";\n\nexport interface SidebarProps {\n  items?: Item[];\n  className?: string;\n  classNames?: {\n    base?: string;\n    item?: string;\n  };\n  onItemClick?: (item: Item) => void;\n}\n\nexport const Sidebar = forwardRef<HTMLDivElement, SidebarProps>(\n  ({ items = [], classNames, onItemClick }, ref) => {\n    const { isDesktop, isTablet } = useResponsive();\n\n    if (!isDesktop && !isTablet) {\n      return null;\n    }\n\n    const renderLink = (item: Item): JSX.Element => {\n      const linkContent = (\n        <Link\n          key={item.key}\n          className={cn(\n            \"flex items-center gap-3 p-3 text-[#ECEDEE] hover:text-foreground hover:bg-content1 rounded-md cursor-pointer\",\n            {\n              \"border-l-2 border-primary bg-content1 text-primary\":\n                item.isActive,\n              \"justify-center\": isTablet,\n            },\n            classNames?.item,\n          )}\n          onPress={() => onItemClick?.(item)}\n        >\n          {item.startContent}\n          {isDesktop ? item.label : null}\n          {item.endContent}\n        </Link>\n      );\n\n      if (isTablet) {\n        return (\n          <Tooltip\n            trigger={linkContent}\n            key={item.key}\n            content={item.label}\n            placement=\"right\"\n            delay={0}\n            closeDelay={0}\n            className=\"border border-default\"\n          />\n        );\n      }\n\n      return linkContent;\n    };\n\n    return (\n      <aside\n        ref={ref}\n        className={cn(\n          \"fixed left-0 h-screen flex-col bg-[#212324] border-r border-default\",\n          {\n            \"w-[270px]\": isDesktop,\n            \"w-[90px]\": isTablet,\n          },\n          classNames?.base,\n        )}\n      >\n        <nav className=\"flex flex-1 flex-col gap-2 p-4\">\n          {items.map(renderLink)}\n        </nav>\n      </aside>\n    );\n  },\n);\n\nSidebar.displayName = \"Sidebar\";\n"]}