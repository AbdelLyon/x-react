{"version":3,"sources":["../src/avatar/Avatar.tsx"],"names":["AvatarRoot","UserRoot"],"mappings":";;;;;AAUO,IAAM,MAAS,GAAA,UAAA,CAAwC,CAAC,KAAA,EAAO,GAAQ,KAAA;AAC5E,EAAA,uBAAQ,GAAA,CAAAA,QAAA,EAAA,EAAW,GAAW,EAAA,GAAG,KAAO,EAAA,CAAA;AAC1C,CAAC;AAED,MAAA,CAAO,WAAc,GAAA,QAAA;AAEd,IAAM,WAAc,GAAA,UAAA;AAAA,EACzB,CAAC,OAAO,GAAQ,KAAA;AACd,IAAM,MAAA;AAAA,MACJ,SAAA;AAAA,MACA,MAAA;AAAA,MACA,OAAA;AAAA,MACA,cAAA;AAAA,MACA,WAAA,GAAc,CAAC,KAAU,qBAAA,GAAA,CAAC,UAAO,IAAM,EAAA,CAAA,CAAA,EAAI,KAAK,CAAI,CAAA,EAAA,CAAA;AAAA,MACpD;AAAA,QACE,cAAe,CAAA;AAAA,MACjB,GAAA;AAAA,MACA,GAAG;AAAA,KACJ,CAAA;AAED,IACE,uBAAA,GAAA,CAAC,aAAW,GAAG,mBAAA,IACb,QAAC,kBAAA,IAAA,CAAA,mBAAA,EAAA,EAAoB,OAAO,OACzB,EAAA,QAAA,EAAA;AAAA,MAAA,MAAA;AAAA,MACA,cAAA,GAAiB,CAAK,IAAA,WAAA,CAAY,cAAc;AAAA,KAAA,EACnD,CACF,EAAA,CAAA;AAAA;AAGN;AAEA,WAAA,CAAY,WAAc,GAAA,aAAA;AAEnB,IAAM,UAAa,GAAA,UAAA;AAAA,EACxB,CAAC,OAAO,GAAQ,KAAA;AACd,IAAA,uBAAQ,GAAA,CAAAC,IAAA,EAAA,EAAS,GAAW,EAAA,GAAG,KAAO,EAAA,CAAA;AAAA;AAE1C;AAEA,UAAA,CAAW,WAAc,GAAA,YAAA;AAEzB,MAAA,CAAO,WAAc,GAAA,QAAA","file":"avatar.es.js","sourcesContent":["import type { AvatarProps, UserProps } from \"@nextui-org/react\";\nimport { forwardRef } from \"react\";\nimport type { AvatarGroupProps } from \"@nextui-org/react\";\nimport {\n  Avatar as AvatarRoot,\n  User as UserRoot,\n  useAvatarGroup,\n  AvatarGroupProvider,\n} from \"@nextui-org/react\";\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>((props, ref) => {\n  return <AvatarRoot ref={ref} {...props} />;\n});\n\nAvatar.displayName = \"Avatar\";\n\nexport const AvatarGroup = forwardRef<HTMLDivElement, AvatarGroupProps>(\n  (props, ref) => {\n    const {\n      Component,\n      clones,\n      context,\n      remainingCount,\n      renderCount = (count) => <Avatar name={`+${count}`} />,\n      getAvatarGroupProps,\n    } = useAvatarGroup({\n      ref,\n      ...props,\n    });\n\n    return (\n      <Component {...getAvatarGroupProps()}>\n        <AvatarGroupProvider value={context}>\n          {clones}\n          {remainingCount > 0 && renderCount(remainingCount)}\n        </AvatarGroupProvider>\n      </Component>\n    );\n  },\n);\n\nAvatarGroup.displayName = \"AvatarGroup\";\n\nexport const UserAvatar = forwardRef<HTMLDivElement, UserProps>(\n  (props, ref) => {\n    return <UserRoot ref={ref} {...props} />;\n  },\n);\n\nUserAvatar.displayName = \"UserAvatar\";\n\nAvatar.displayName = \"Avatar\";\n"]}